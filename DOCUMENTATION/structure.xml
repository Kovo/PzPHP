<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a11" title="">
  <file path="Pzphp/Db.php" hash="856e2bd4fb07f306f99742ec31311395" package="PzPHP">
    <docblock line="2">
      <description>Website: http://www.pzphp.com</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="PzPHP"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends>\PzPHP_Wrapper</extends>
      <name>PzPHP_Db</name>
      <full_name>\PzPHP_Db</full_name>
      <docblock line="11">
        <description>The database class allows you to send queries to a database server, run through results, and a lot more.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="16" package="Default">
        <name>PDO</name>
        <full_name>PDO</full_name>
        <value>'IS_PDO'</value>
      </constant>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$_databaseMethod</name>
        <default>PZPHP_DATABASE_MYSQLI</default>
        <docblock line="18">
          <description>The established database module to use.</description>
          <long-description/>
          <tag line="18" name="access" description="private"/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$_pdoType</name>
        <default>-1</default>
        <docblock line="26">
          <description>If databaseMethod is PDO, this varaible defines which one.</description>
          <long-description/>
          <tag line="26" name="access" description="private"/>
          <tag line="26" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description>The contstruct sets the database method (module) to be used.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>setDatabaseMethod</name>
        <full_name>setDatabaseMethod</full_name>
        <docblock line="42">
          <description>Sets the chosen database method locally, and then returns its identifier.</description>
          <long-description/>
          <tag line="42" name="access" description="public"/>
          <tag line="42" name="param" description="" type="int" variable="$method">
            <type by_reference="false">int</type>
          </tag>
          <tag line="42" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$method</name>
          <default>PZPHP_DATABASE_MODE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Default">
        <name>addServer</name>
        <full_name>addServer</full_name>
        <docblock line="70">
          <description>Add a Mysql server to the pool.</description>
          <long-description/>
          <tag line="70" name="access" description="public"/>
          <tag line="70" name="param" description="" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="string" variable="$dbname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="int" variable="$port">
            <type by_reference="false">int</type>
          </tag>
          <tag line="70" name="param" description="" type="array" variable="$dbDriverOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="70" name="param" description="" type="string" variable="$server">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="string" variable="$protocol">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="string" variable="$socket">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="85">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="85">
          <name>$dbname</name>
          <default/>
          <type/>
        </argument>
        <argument line="85">
          <name>$host</name>
          <default>'localhost'</default>
          <type/>
        </argument>
        <argument line="85">
          <name>$port</name>
          <default>3306</default>
          <type/>
        </argument>
        <argument line="85">
          <name>$dbDriverOptions</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="85">
          <name>$server</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="85">
          <name>$protocol</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="85">
          <name>$socket</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Default">
        <name>setActiveServerId</name>
        <full_name>setActiveServerId</full_name>
        <docblock line="100">
          <description>Sets the active database id to use.</description>
          <long-description/>
          <tag line="100" name="access" description="public"/>
          <tag line="100" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="100" name="param" description="" type="bool" variable="$autoconnect">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="100" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$autoconnect</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Default">
        <name>returnActiveServerObject</name>
        <full_name>returnActiveServerObject</full_name>
        <docblock line="123">
          <description>Return the active database object (or using the supplied id).</description>
          <long-description/>
          <tag line="123" name="access" description="public"/>
          <tag line="123" name="param" description="" type="\global\" variable="$id"/>
          <tag line="123" name="return" description="" type="bool|\Pz_Mysql_Server|\Pz_Mysqli_Server|\Pz_PDO_Server">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Mysql_Server</type>
            <type by_reference="false">\Pz_Mysqli_Server</type>
            <type by_reference="false">\Pz_PDO_Server</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="Default">
        <name>dbObject</name>
        <full_name>dbObject</full_name>
        <docblock line="145">
          <description>Returns the active database object or resource.</description>
          <long-description/>
          <tag line="145" name="access" description="public"/>
          <tag line="145" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="145" name="return" description="" type="bool|\mysqli|\pdo|\mysql">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli</type>
            <type by_reference="false">\pdo</type>
            <type by_reference="false">\mysql</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
        <docblock line="167">
          <description>Gets the last insert id.</description>
          <long-description/>
          <tag line="167" name="access" description="public"/>
          <tag line="167" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="167" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="197" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
        <docblock line="189">
          <description>Gets the affected rows count from the last insert/delete/update/etc query.</description>
          <long-description/>
          <tag line="189" name="access" description="public"/>
          <tag line="189" name="param" description="" type="\PDOStatement|null" variable="$queryObject">
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="189" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="189" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$queryObject</name>
          <default>NULL</default>
          <type>\PDOStatement</type>
        </argument>
        <argument line="197">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Default">
        <name>returnedRows</name>
        <full_name>returnedRows</full_name>
        <docblock line="212">
          <description>Gets the returned rows count for the mysqli_result object.</description>
          <long-description/>
          <tag line="212" name="access" description="public"/>
          <tag line="212" name="param" description="" type="\msqli_result|\PDOStatement|resource" variable="$object">
            <type by_reference="false">\msqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
          <tag line="212" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="Default">
        <name>fetchNextRowAssoc</name>
        <full_name>fetchNextRowAssoc</full_name>
        <docblock line="234">
          <description>Gets the next row from the mysqli_result object in an associative array.</description>
          <long-description/>
          <tag line="234" name="access" description="public"/>
          <tag line="234" name="param" description="" type="\msqli_result|\PDOStatement|resource" variable="$object">
            <type by_reference="false">\msqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
          <tag line="234" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="263" package="Default">
        <name>fetchNextRowEnum</name>
        <full_name>fetchNextRowEnum</full_name>
        <docblock line="256">
          <description>Gets the next row from the mysqli_result object in a numerated array.</description>
          <long-description/>
          <tag line="256" name="access" description="public"/>
          <tag line="256" name="param" description="" type="\msqli_result|\PDOStatement|resource" variable="$object">
            <type by_reference="false">\msqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
          <tag line="256" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="284" package="Default">
        <name>freeResult</name>
        <full_name>freeResult</full_name>
        <docblock line="278">
          <description>Clears the result set if a valid result object is provided.</description>
          <long-description/>
          <tag line="278" name="access" description="public"/>
          <tag line="278" name="param" description="" type="\msqli_result|\PDOStatement|resource" variable="$object">
            <type by_reference="false">\msqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="315" package="Default">
        <name>changeDatabase</name>
        <full_name>changeDatabase</full_name>
        <docblock line="307">
          <description>Changes the current database.</description>
          <long-description/>
          <tag line="307" name="access" description="public"/>
          <tag line="307" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="307" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="315">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="Default">
        <name>changeUser</name>
        <full_name>changeUser</full_name>
        <docblock line="328">
          <description>Changes the current mysql user.</description>
          <long-description/>
          <tag line="328" name="access" description="public"/>
          <tag line="328" name="param" description="" type="string" variable="$user">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="param" description="" type="null|string" variable="$dbName">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="328" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="328" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="338">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="338">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="338">
          <name>$dbName</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="359" package="Default">
        <name>select</name>
        <full_name>select</full_name>
        <docblock line="351">
          <description>Expects to handle a select query.</description>
          <long-description/>
          <tag line="351" name="access" description="public"/>
          <tag line="351" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="351" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="351" name="return" description="" type="bool|\mysqli_result|\PDOStatement|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="359">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="359">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="382" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="374">
          <description>Expects to handle a set query.</description>
          <long-description/>
          <tag line="374" name="access" description="public"/>
          <tag line="374" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="374" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="374" name="return" description="" type="bool|\mysqli_result|\PDOStatement|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="382">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="382">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="405" package="Default">
        <name>optimize</name>
        <full_name>optimize</full_name>
        <docblock line="397">
          <description>Expects to handle an optimize query.</description>
          <long-description/>
          <tag line="397" name="access" description="public"/>
          <tag line="397" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="397" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="397" name="return" description="" type="bool|\mysqli_result|\PDOStatement|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="405">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="428" package="Default">
        <name>check</name>
        <full_name>check</full_name>
        <docblock line="420">
          <description>Expects to handle a check query.</description>
          <long-description/>
          <tag line="420" name="access" description="public"/>
          <tag line="420" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="420" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="420" name="return" description="" type="bool|\mysqli_result|\PDOStatement|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="428">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="428">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="451" package="Default">
        <name>insert</name>
        <full_name>insert</full_name>
        <docblock line="443">
          <description>Expects to handle an insert query.</description>
          <long-description/>
          <tag line="443" name="access" description="public"/>
          <tag line="443" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="443" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="443" name="return" description="" type="bool|\mysqli_result|\PDOStatement|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="451">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="451">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="474" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="466">
          <description>Expects to handle a delete query.</description>
          <long-description/>
          <tag line="466" name="access" description="public"/>
          <tag line="466" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="466" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="466" name="return" description="" type="bool|\mysqli_result|\PDOStatement|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="474">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="474">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="497" package="Default">
        <name>update</name>
        <full_name>update</full_name>
        <docblock line="489">
          <description>Expects to handle an update query.</description>
          <long-description/>
          <tag line="489" name="access" description="public"/>
          <tag line="489" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="489" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="489" name="return" description="" type="bool|\mysqli_result|\PDOStatement|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
            <type by_reference="false">\PDOStatement</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="497">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="497">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="521" package="Default">
        <name>sanitizeNumeric</name>
        <full_name>sanitizeNumeric</full_name>
        <docblock line="512">
          <description>Expects to be passed a numeric value to make sure it is safe.</description>
          <long-description/>
          <tag line="512" name="access" description="public"/>
          <tag line="512" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="512" name="param" description="" type="int" variable="$decimalPlaces">
            <type by_reference="false">int</type>
          </tag>
          <tag line="512" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="512" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="521">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="521">
          <name>$decimalPlaces</name>
          <default>2</default>
          <type/>
        </argument>
        <argument line="521">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="545" package="Default">
        <name>sanitizeNonNumeric</name>
        <full_name>sanitizeNonNumeric</full_name>
        <docblock line="536">
          <description>Expects to be passed a non-numeric value to make sure it is safe.</description>
          <long-description/>
          <tag line="536" name="access" description="public"/>
          <tag line="536" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="536" name="param" description="" type="int" variable="$cleanHtmlLevel">
            <type by_reference="false">int</type>
          </tag>
          <tag line="536" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="536" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="545">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="545">
          <name>$cleanHtmlLevel</name>
          <default>\Pz_Security::CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</default>
          <type/>
        </argument>
        <argument line="545">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pzphp/Locale.php" hash="4c158ddc675ae9e143603c3540d5dc80" package="PzPHP">
    <docblock line="2">
      <description>Website: http://www.pzphp.com</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="PzPHP"/>
    </docblock>
    <include line="90" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends>\PzPHP_Wrapper</extends>
      <name>PzPHP_Locale</name>
      <full_name>\PzPHP_Locale</full_name>
      <docblock line="11">
        <description>The Locale class allows your application to support multiple languages.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="25" namespace="global" package="Default">
        <name>$_languages</name>
        <default>array()</default>
        <docblock line="16">
          <description>An array of key =&gt; value paris representing languages.</description>
          <long-description>&lt;p&gt;The key must be the long format, while the value must be the short format.
Ex: en_us =&gt; en&lt;/p&gt;</long-description>
          <tag line="16" name="access" description="private"/>
          <tag line="16" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$_translations</name>
        <default>array()</default>
        <docblock line="27">
          <description>The loaded translations array.</description>
          <long-description/>
          <tag line="27" name="access" description="private"/>
          <tag line="27" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="global" package="Default">
        <name>$_locale</name>
        <default>''</default>
        <docblock line="35">
          <description>The current active language.</description>
          <long-description/>
          <tag line="35" name="access" description="private"/>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="Default">
        <name>addLanguage</name>
        <full_name>addLanguage</full_name>
        <docblock line="43">
          <description>Add a language to be used in translation.</description>
          <long-description/>
          <tag line="43" name="access" description="public"/>
          <tag line="43" name="param" description="" type="string" variable="$languageFull">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="" type="string" variable="$languageShort">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$languageFull</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$languageShort</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>setLocale</name>
        <full_name>setLocale</full_name>
        <docblock line="55">
          <description>Set the current active language.</description>
          <long-description/>
          <tag line="55" name="access" description="public"/>
          <tag line="55" name="param" description="" type="\global\" variable="$locale"/>
        </docblock>
        <argument line="61">
          <name>$locale</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="Default">
        <name>getLocale</name>
        <full_name>getLocale</full_name>
        <docblock line="66">
          <description>Get the current active language.</description>
          <long-description/>
          <tag line="66" name="access" description="public"/>
          <tag line="66" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="Default">
        <name>loadTranslationSet</name>
        <full_name>loadTranslationSet</full_name>
        <docblock line="77">
          <description>Load an array of translations for current active language.</description>
          <long-description/>
          <tag line="77" name="access" description="public"/>
          <tag line="77" name="param" description="" type="string" variable="$localeoverride">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$localeoverride</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="Default">
        <name>getShortLocaleId</name>
        <full_name>getShortLocaleId</full_name>
        <docblock line="96">
          <description>Convert the locale string to short format (if necessary).</description>
          <long-description/>
          <tag line="96" name="access" description="public"/>
          <tag line="96" name="param" description="" type="string" variable="$locale">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$locale</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Default">
        <name>getLongLocaleId</name>
        <full_name>getLongLocaleId</full_name>
        <docblock line="121">
          <description>Convert the locale string to long format (if necessary).</description>
          <long-description/>
          <tag line="121" name="access" description="public"/>
          <tag line="121" name="param" description="" type="\global\" variable="$locale"/>
          <tag line="121" name="return" description="" type="mixed|string">
            <type by_reference="false">mixed</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$locale</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="Default">
        <name>translate</name>
        <full_name>translate</full_name>
        <docblock line="146">
          <description>Retrieve the text for the given key.</description>
          <long-description/>
          <tag line="146" name="access" description="public"/>
          <tag line="146" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="" type="string" variable="$localeOverride">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="154">
          <name>$localeOverride</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pzphp/Core.php" hash="7026d25b11c26831c42892452e7208cc" package="PzPHP">
    <docblock line="2">
      <description>Website: http://www.pzphp.com</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="PzPHP"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>PzPHP_Core</name>
      <full_name>\PzPHP_Core</full_name>
      <docblock line="11">
        <description>The PzPHP core class is the central registry for modules, and allows quick access to them.</description>
        <long-description>&lt;p&gt;The PzPHP core class also allows you to register variables that can later be accessed in modules.&lt;/p&gt;</long-description>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>VERSION</name>
        <full_name>VERSION</full_name>
        <value>'1.0.2'</value>
        <docblock line="18">
          <description>The version of PzPHP.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$_registeredModules</name>
        <default>array()</default>
        <docblock line="25">
          <description>An array of registered modules and their instances.</description>
          <long-description/>
          <tag line="25" name="access" description="private"/>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="global" package="Default">
        <name>$_registeredVariables</name>
        <default>array()</default>
        <docblock line="33">
          <description>An array of registered variables accessible to all modules.</description>
          <long-description/>
          <tag line="33" name="access" description="private"/>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description>The construct registers the core modules of PzPHP, including Pz_Core.</description>
          <long-description>&lt;p&gt;The construct also registers PzPHP's version with Pz_Core.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="64" package="Default">
        <name>_warmupDirectories</name>
        <full_name>_warmupDirectories</full_name>
        <docblock line="59">
          <description>Checks to make sure key directories exist, and if they don't, create them.</description>
          <long-description/>
          <tag line="59" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="93" package="Default">
        <name>_extractPzCoreSettings</name>
        <full_name>_extractPzCoreSettings</full_name>
        <docblock line="87">
          <description>Extracts all pz related constants to pass to Pz_Core.</description>
          <long-description/>
          <tag line="87" name="access" description="private"/>
          <tag line="87" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="Default">
        <name>registerModule</name>
        <full_name>registerModule</full_name>
        <docblock line="120">
          <description>Registers a module with PzPHP.</description>
          <long-description>&lt;p&gt;It does not get instantiated at this step.&lt;/p&gt;</long-description>
          <tag line="120" name="access" description="public"/>
          <tag line="120" name="param" description="" type="string" variable="$moduleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$moduleName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="Default">
        <name>module</name>
        <full_name>module</full_name>
        <docblock line="141">
          <description>Returns the instance of the specified module.</description>
          <long-description>&lt;p&gt;The module gets instantiated at this step if it has not already.&lt;/p&gt;</long-description>
          <tag line="141" name="access" description="public"/>
          <tag line="141" name="param" description="" type="string" variable="$moduleName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$moduleName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="Default">
        <name>registerVariable</name>
        <full_name>registerVariable</full_name>
        <docblock line="172">
          <description>Registers a variable that can be accessed via any module.</description>
          <long-description/>
          <tag line="172" name="access" description="public"/>
          <tag line="172" name="param" description="" type="string" variable="$variableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="param" description="" type="mixed" variable="$variableValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="172" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$variableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="180">
          <name>$variableValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>getVariable</name>
        <full_name>getVariable</full_name>
        <docblock line="194">
          <description>Returns a registered varaible.</description>
          <long-description/>
          <tag line="194" name="access" description="public"/>
          <tag line="194" name="param" description="" type="string" variable="$variableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$variableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Default">
        <name>changeVariable</name>
        <full_name>changeVariable</full_name>
        <docblock line="213">
          <description>Change a registered variable's value.</description>
          <long-description/>
          <tag line="213" name="access" description="public"/>
          <tag line="213" name="param" description="" type="\global\" variable="$variableName"/>
          <tag line="213" name="param" description="" type="\global\" variable="$variableValue"/>
          <tag line="213" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$variableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="221">
          <name>$variableValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="242" package="Default">
        <name>variableExists</name>
        <full_name>variableExists</full_name>
        <docblock line="235">
          <description>Returns true or false depending on if specified variable is registered or not.</description>
          <long-description/>
          <tag line="235" name="access" description="public"/>
          <tag line="235" name="param" description="" type="string" variable="$variableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$variableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="254" package="Default">
        <name>unregisterVariable</name>
        <full_name>unregisterVariable</full_name>
        <docblock line="247">
          <description>Unregisters a registered variable.</description>
          <long-description/>
          <tag line="247" name="access" description="public"/>
          <tag line="247" name="param" description="" type="string" variable="$variableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="254">
          <name>$variableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="274" package="Default">
        <name>pz</name>
        <full_name>pz</full_name>
        <docblock line="268">
          <description>Returns the instance of Pz_Core.</description>
          <long-description/>
          <tag line="268" name="access" description="public"/>
          <tag line="268" name="return" description="" type="\Pz_Core|null">
            <type by_reference="false">\Pz_Core</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="Default">
        <name>cache</name>
        <full_name>cache</full_name>
        <docblock line="279">
          <description>Returns the instance of PzPHP_Cache.</description>
          <long-description/>
          <tag line="279" name="access" description="public"/>
          <tag line="279" name="return" description="" type="\PzPHP_Cache|null">
            <type by_reference="false">\PzPHP_Cache</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="296" package="Default">
        <name>db</name>
        <full_name>db</full_name>
        <docblock line="290">
          <description>Returns the instance of PzPHP_Db.</description>
          <long-description/>
          <tag line="290" name="access" description="public"/>
          <tag line="290" name="return" description="" type="\PzPHP_Db|null">
            <type by_reference="false">\PzPHP_Db</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="307" package="Default">
        <name>security</name>
        <full_name>security</full_name>
        <docblock line="301">
          <description>Returns the instance of PzPHP_Security.</description>
          <long-description/>
          <tag line="301" name="access" description="public"/>
          <tag line="301" name="return" description="" type="\PzPHP_Security|null">
            <type by_reference="false">\PzPHP_Security</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="318" package="Default">
        <name>localize</name>
        <full_name>localize</full_name>
        <docblock line="312">
          <description>Returns the instance of PzPHP_Locale.</description>
          <long-description/>
          <tag line="312" name="access" description="public"/>
          <tag line="312" name="return" description="" type="\PzPHP_Locale|null">
            <type by_reference="false">\PzPHP_Locale</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pzphp/Security.php" hash="a432f58877b22bbba41c9f7b272768c0" package="PzPHP">
    <docblock line="2">
      <description>Website: http://www.pzphp.com</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="PzPHP"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends>\PzPHP_Wrapper</extends>
      <name>PzPHP_Security</name>
      <full_name>\PzPHP_Security</full_name>
      <docblock line="11">
        <description>The security class gives you methods that allow you to create one-way, or two-way encryptions, among other things.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="16">
          <description>The init method takes care of applying custom security rules (if any).</description>
          <long-description/>
          <tag line="16" name="access" description="public"/>
          <tag line="16" name="param" description="" type="\PzPHP_Core" variable="$PzphpCore">
            <type by_reference="false">\PzPHP_Core</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$PzphpCore</name>
          <default/>
          <type>\PzPHP_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="56" package="Default">
        <name>createCode</name>
        <full_name>createCode</full_name>
        <docblock line="47">
          <description>Create a randomly generated string of characters.</description>
          <long-description/>
          <tag line="47" name="access" description="public"/>
          <tag line="47" name="param" description="" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="47" name="param" description="" type="int" variable="$type">
            <type by_reference="false">int</type>
          </tag>
          <tag line="47" name="param" description="" type="bool" variable="$regenerateString">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="47" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
        <argument line="56">
          <name>$type</name>
          <default>\Pz_Helper_String::ALPHANUMERIC</default>
          <type/>
        </argument>
        <argument line="56">
          <name>$regenerateString</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="Default">
        <name>twoWayEncrypt</name>
        <full_name>twoWayEncrypt</full_name>
        <docblock line="61">
          <description>Takes a string and creates a decryptable encryption.</description>
          <long-description/>
          <tag line="61" name="access" description="public"/>
          <tag line="61" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Default">
        <name>twoWayDecrypt</name>
        <full_name>twoWayDecrypt</full_name>
        <docblock line="73">
          <description>Decrypts a string that was encrypted using the two-way method.</description>
          <long-description/>
          <tag line="73" name="access" description="public"/>
          <tag line="73" name="param" description="" type="\strng" variable="$value">
            <type by_reference="false">\strng</type>
          </tag>
          <tag line="73" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="Default">
        <name>oneWayEncrypt</name>
        <full_name>oneWayEncrypt</full_name>
        <docblock line="85">
          <description>Creates a strong one-way encryption/hash.</description>
          <long-description>&lt;p&gt;This will generate a 44 character long hash by default (unless you have provided custom security rules (see init())).&lt;/p&gt;</long-description>
          <tag line="85" name="access" description="public"/>
          <tag line="85" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Default">
        <name>oneWayHashComparison</name>
        <full_name>oneWayHashComparison</full_name>
        <docblock line="99">
          <description>Compare a string to a one-way hash string.</description>
          <long-description/>
          <tag line="99" name="access" description="public"/>
          <tag line="99" name="param" description="" type="string" variable="$unhashedValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="param" description="" type="string" variable="$hashedComparisonValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$unhashedValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="107">
          <name>$hashedComparisonValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>twoWayHashComparison</name>
        <full_name>twoWayHashComparison</full_name>
        <docblock line="112">
          <description>Compare a string to a two-way encrypted string.</description>
          <long-description/>
          <tag line="112" name="access" description="public"/>
          <tag line="112" name="param" description="" type="string" variable="$unhashedValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="param" description="" type="string" variable="$hashedComparisonValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$unhashedValue</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$hashedComparisonValue</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pzphp/Wrapper.php" hash="6009cb793afe7ac04aa8462f33ebb34d" package="PzPHP">
    <docblock line="2">
      <description>Website: http://www.pzphp.com</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="PzPHP"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends/>
      <name>PzPHP_Wrapper</name>
      <full_name>\PzPHP_Wrapper</full_name>
      <docblock line="11">
        <description>A class extended by PzPHP modules to give easy access to the PzPHP core, among other things.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="22" namespace="global" package="Default">
        <name>$_pzphpCore</name>
        <default>NULL</default>
        <docblock line="16">
          <description>An object representing PzPHP_Core.</description>
          <long-description/>
          <tag line="16" name="access" description="private"/>
          <tag line="16" name="var" description="" type="null|\PzPHP_Core">
            <type by_reference="false">null</type>
            <type by_reference="false">\PzPHP_Core</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="24">
          <description>The init method sets the PzPHP_Core object.</description>
          <long-description/>
          <tag line="24" name="access" description="public"/>
          <tag line="24" name="param" description="" type="\PzPHP_Core" variable="$PzphpCore">
            <type by_reference="false">\PzPHP_Core</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$PzphpCore</name>
          <default/>
          <type>\PzPHP_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Default">
        <name>pzphp</name>
        <full_name>pzphp</full_name>
        <docblock line="35">
          <description>Returns the PzPHP_Core instance.</description>
          <long-description/>
          <tag line="35" name="access" description="public"/>
          <tag line="35" name="return" description="" type="null|\PzPHP_Core">
            <type by_reference="false">null</type>
            <type by_reference="false">\PzPHP_Core</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pzphp/Cache.php" hash="2eae128acba0de784471cf76830b2e29" package="PzPHP">
    <docblock line="2">
      <description>Website: http://www.pzphp.com</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="PzPHP"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\PzPHP_Wrapper</extends>
      <name>PzPHP_Cache</name>
      <full_name>\PzPHP_Cache</full_name>
      <docblock line="11">
        <description>The Cache class gives you a layer of abstraction to access the caching options in the Pz Library.</description>
        <long-description>&lt;p&gt;The Cache class is agnostic to the type of caching (if any) you have configured PzPHP to use.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$_cachingMethod</name>
        <default>PZPHP_CACHE_MODE_NO_CACHING</default>
        <docblock line="18">
          <description>The established caching method (if any).</description>
          <long-description/>
          <tag line="18" name="access" description="private"/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$_cachingEnabled</name>
        <default>false</default>
        <docblock line="26">
          <description>Flag if caching is enabled or not.</description>
          <long-description/>
          <tag line="26" name="access" description="private"/>
          <tag line="26" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="34">
          <description>The contstruct verifies if caching is enabled, and sets it, if it is.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="49" package="Default">
        <name>_verifyIfCachingEnabled</name>
        <full_name>_verifyIfCachingEnabled</full_name>
        <docblock line="44">
          <description>Verifies if caching is enabled, and sets the flag accordingly.</description>
          <long-description/>
          <tag line="44" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="Default">
        <name>setCachingMethod</name>
        <full_name>setCachingMethod</full_name>
        <docblock line="57">
          <description>Sets the chosen caching method locally, and then returns its identifier.</description>
          <long-description/>
          <tag line="57" name="access" description="public"/>
          <tag line="57" name="param" description="" type="int" variable="$method">
            <type by_reference="false">int</type>
          </tag>
          <tag line="57" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$method</name>
          <default>PZPHP_CACHING_MODE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="Default">
        <name>cacheEnabled</name>
        <full_name>cacheEnabled</full_name>
        <docblock line="90">
          <description>Returns true or false depending on if caching is enabled or not.</description>
          <long-description/>
          <tag line="90" name="access" description="public"/>
          <tag line="90" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Default">
        <name>cacheMethod</name>
        <full_name>cacheMethod</full_name>
        <docblock line="101">
          <description>Returns the identifier for the current caching method.</description>
          <long-description/>
          <tag line="101" name="access" description="public"/>
          <tag line="101" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>addServer</name>
        <full_name>addServer</full_name>
        <docblock line="112">
          <description>Add a cache server (if using mecache).</description>
          <long-description/>
          <tag line="112" name="access" description="public"/>
          <tag line="112" name="param" description="" type="string" variable="$mcIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="param" description="" type="int|string" variable="$mcPort">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$mcIp</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$mcPort</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="149" package="Default">
        <name>read_il</name>
        <full_name>read_il</full_name>
        <docblock line="140">
          <description>Cache read without a lock check and set.</description>
          <long-description>&lt;p&gt;Reads from the cache without setting a lock, or checking for one.&lt;/p&gt;</long-description>
          <tag line="140" name="access" description="public"/>
          <tag line="140" name="param" description="" type="string" variable="$keyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="140" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$keyName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="Default">
        <name>read_csl</name>
        <full_name>read_csl</full_name>
        <docblock line="175">
          <description>Cache read with a lock check and set.</description>
          <long-description>&lt;p&gt;Reads from the cache, checking for a lock first (and waiting if one is present), and then sets a lock once the previous lock (if any) is removed.&lt;/p&gt;</long-description>
          <tag line="175" name="access" description="public"/>
          <tag line="175" name="param" description="" type="\global\" variable="$keyName"/>
          <tag line="175" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$keyName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Default">
        <name>write_ddl</name>
        <full_name>write_ddl</full_name>
        <docblock line="210">
          <description>Cache write without a lock delete.</description>
          <long-description>&lt;p&gt;Writes to the cache without deleting a lock on the specified key.&lt;/p&gt;</long-description>
          <tag line="210" name="access" description="public"/>
          <tag line="210" name="param" description="" type="string" variable="$keyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="210" name="param" description="" type="int" variable="$expires">
            <type by_reference="false">int</type>
          </tag>
          <tag line="210" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$keyName</name>
          <default/>
          <type/>
        </argument>
        <argument line="221">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="221">
          <name>$expires</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="Default">
        <name>write_dl</name>
        <full_name>write_dl</full_name>
        <docblock line="247">
          <description>Cache write with a lock delete.</description>
          <long-description>&lt;p&gt;Writes to the cache as well as deletes a lock (if present) on the specified key.&lt;/p&gt;</long-description>
          <tag line="247" name="access" description="public"/>
          <tag line="247" name="param" description="" type="string" variable="$keyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="247" name="param" description="" type="int" variable="$expires">
            <type by_reference="false">int</type>
          </tag>
          <tag line="247" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$keyName</name>
          <default/>
          <type/>
        </argument>
        <argument line="258">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="258">
          <name>$expires</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="293" package="Default">
        <name>delete_nlc</name>
        <full_name>delete_nlc</full_name>
        <docblock line="284">
          <description>Cache delete without a lock check.</description>
          <long-description>&lt;p&gt;Deletes key from the cache without checking for a lock.&lt;/p&gt;</long-description>
          <tag line="284" name="access" description="public"/>
          <tag line="284" name="param" description="" type="string" variable="$keyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="284" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$keyName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="Default">
        <name>delete_lc</name>
        <full_name>delete_lc</full_name>
        <docblock line="319">
          <description>Cache delete with a lock check.</description>
          <long-description>&lt;p&gt;Deletes key from the cache, checking for a lock first before deleting.&lt;/p&gt;</long-description>
          <tag line="319" name="access" description="public"/>
          <tag line="319" name="param" description="" type="string" variable="$keyName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="319" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$keyName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Server/Apache.php" hash="9f27a3a3ac1ef2a1313b35a5c484c5e1" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Server_Apache</name>
      <full_name>\Pz_Server_Apache</full_name>
      <docblock line="13">
        <description>A collection of methods allowing you to interact directly with apache.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="23" package="Default">
        <name>childTerminate</name>
        <full_name>childTerminate</full_name>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="static" description=""/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="33" package="Default">
        <name>loadedModules</name>
        <full_name>loadedModules</full_name>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="static" description=""/>
          <tag line="28" name="access" description="public"/>
          <tag line="28" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="Default">
        <name>version</name>
        <full_name>version</full_name>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="static" description=""/>
          <tag line="38" name="access" description="public"/>
          <tag line="38" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="Default">
        <name>virtual</name>
        <full_name>virtual</full_name>
        <docblock line="48">
          <description/>
          <long-description/>
          <tag line="48" name="static" description=""/>
          <tag line="48" name="access" description="public"/>
          <tag line="48" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="64" package="Default">
        <name>getAllRequestHeaders</name>
        <full_name>getAllRequestHeaders</full_name>
        <docblock line="59">
          <description/>
          <long-description/>
          <tag line="59" name="static" description=""/>
          <tag line="59" name="access" description="public"/>
          <tag line="59" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="74" package="Default">
        <name>getAllResponseHeaders</name>
        <full_name>getAllResponseHeaders</full_name>
        <docblock line="69">
          <description/>
          <long-description/>
          <tag line="69" name="static" description=""/>
          <tag line="69" name="access" description="public"/>
          <tag line="69" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="87" package="Default">
        <name>setEnvVar</name>
        <full_name>setEnvVar</full_name>
        <docblock line="79">
          <description/>
          <long-description/>
          <tag line="79" name="static" description=""/>
          <tag line="79" name="access" description="public"/>
          <tag line="79" name="param" description="" type="string" variable="$varname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="param" description="" type="bool" variable="$walktotop">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="79" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
        <argument line="87">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="87">
          <name>$walktotop</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="99" package="Default">
        <name>getEnvVar</name>
        <full_name>getEnvVar</full_name>
        <docblock line="92">
          <description/>
          <long-description/>
          <tag line="92" name="static" description=""/>
          <tag line="92" name="access" description="public"/>
          <tag line="92" name="param" description="" type="string" variable="$varname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="" type="bool" variable="$walktotop">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="92" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$walktotop</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="109" package="Default">
        <name>resetTimeout</name>
        <full_name>resetTimeout</full_name>
        <docblock line="104">
          <description/>
          <long-description/>
          <tag line="104" name="static" description=""/>
          <tag line="104" name="access" description="public"/>
          <tag line="104" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="120" package="Default">
        <name>tableGet</name>
        <full_name>tableGet</full_name>
        <docblock line="114">
          <description/>
          <long-description/>
          <tag line="114" name="static" description=""/>
          <tag line="114" name="access" description="public"/>
          <tag line="114" name="param" description="" type="string" variable="$noteName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$noteName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="132" package="Default">
        <name>tableSet</name>
        <full_name>tableSet</full_name>
        <docblock line="125">
          <description/>
          <long-description/>
          <tag line="125" name="static" description=""/>
          <tag line="125" name="access" description="public"/>
          <tag line="125" name="param" description="" type="string" variable="$noteName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="param" description="" type="string" variable="$noteValue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$noteName</name>
          <default/>
          <type/>
        </argument>
        <argument line="132">
          <name>$noteValue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="143" package="Default">
        <name>lookupUri</name>
        <full_name>lookupUri</full_name>
        <docblock line="137">
          <description/>
          <long-description/>
          <tag line="137" name="static" description=""/>
          <tag line="137" name="access" description="public"/>
          <tag line="137" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="18" code="50012">No short description for method childTerminate()</error>
      <error line="28" code="50012">No short description for method loadedModules()</error>
      <error line="38" code="50012">No short description for method version()</error>
      <error line="48" code="50012">No short description for method virtual()</error>
      <error line="59" code="50012">No short description for method getAllRequestHeaders()</error>
      <error line="69" code="50012">No short description for method getAllResponseHeaders()</error>
      <error line="79" code="50012">No short description for method setEnvVar()</error>
      <error line="92" code="50012">No short description for method getEnvVar()</error>
      <error line="104" code="50012">No short description for method resetTimeout()</error>
      <error line="114" code="50012">No short description for method tableGet()</error>
      <error line="125" code="50012">No short description for method tableSet()</error>
      <error line="137" code="50012">No short description for method lookupUri()</error>
    </parse_markers>
  </file>
  <file path="Pz/Server/IIS.php" hash="d7005d8f55261d0d4ae5a5a823086f3d" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Server_IIS</name>
      <full_name>\Pz_Server_IIS</full_name>
      <docblock line="13">
        <description>A collection of methods allowing you to interact directly with IIS.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="30" package="Default">
        <name>addServer</name>
        <full_name>addServer</full_name>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="static" description=""/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="string" variable="$comment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="string" variable="$server_ip">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$port">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="param" description="" type="string" variable="$host_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="string" variable="$rights">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$start_server">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="18" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$comment</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$server_ip</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$port</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$host_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$rights</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$start_server</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="41" package="Default">
        <name>removeServer</name>
        <full_name>removeServer</full_name>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="static" description=""/>
          <tag line="35" name="access" description="public"/>
          <tag line="35" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="35" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="52" package="Default">
        <name>startServer</name>
        <full_name>startServer</full_name>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag line="46" name="static" description=""/>
          <tag line="46" name="access" description="public"/>
          <tag line="46" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="46" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="63" package="Default">
        <name>stopServer</name>
        <full_name>stopServer</full_name>
        <docblock line="57">
          <description/>
          <long-description/>
          <tag line="57" name="static" description=""/>
          <tag line="57" name="access" description="public"/>
          <tag line="57" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="57" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="74" package="Default">
        <name>startService</name>
        <full_name>startService</full_name>
        <docblock line="68">
          <description/>
          <long-description/>
          <tag line="68" name="static" description=""/>
          <tag line="68" name="access" description="public"/>
          <tag line="68" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="68" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="85" package="Default">
        <name>stopService</name>
        <full_name>stopService</full_name>
        <docblock line="79">
          <description/>
          <long-description/>
          <tag line="79" name="static" description=""/>
          <tag line="79" name="access" description="public"/>
          <tag line="79" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="79" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="97" package="Default">
        <name>getDirectorySecurity</name>
        <full_name>getDirectorySecurity</full_name>
        <docblock line="90">
          <description/>
          <long-description/>
          <tag line="90" name="static" description=""/>
          <tag line="90" name="access" description="public"/>
          <tag line="90" name="param" description="" type="int" variable="$serverId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="90" name="param" description="" type="string" variable="$vertualDir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$serverId</name>
          <default/>
          <type/>
        </argument>
        <argument line="97">
          <name>$vertualDir</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="110" package="Default">
        <name>setDirectorySecurity</name>
        <full_name>setDirectorySecurity</full_name>
        <docblock line="102">
          <description/>
          <long-description/>
          <tag line="102" name="static" description=""/>
          <tag line="102" name="access" description="public"/>
          <tag line="102" name="param" description="" type="int" variable="$server_instance">
            <type by_reference="false">int</type>
          </tag>
          <tag line="102" name="param" description="" type="string" variable="$virtual_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="param" description="" type="mixed" variable="$directory_flags">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="102" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$server_instance</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$virtual_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$directory_flags</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="123" package="Default">
        <name>getScriptMap</name>
        <full_name>getScriptMap</full_name>
        <docblock line="115">
          <description/>
          <long-description/>
          <tag line="115" name="static" description=""/>
          <tag line="115" name="access" description="public"/>
          <tag line="115" name="param" description="" type="int" variable="$serverId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="115" name="param" description="" type="string" variable="$vertualDir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="param" description="" type="string" variable="$scriptExtension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$serverId</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$vertualDir</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$scriptExtension</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="138" package="Default">
        <name>setScriptMap</name>
        <full_name>setScriptMap</full_name>
        <docblock line="128">
          <description/>
          <long-description/>
          <tag line="128" name="static" description=""/>
          <tag line="128" name="access" description="public"/>
          <tag line="128" name="param" description="" type="int" variable="$server_instance">
            <type by_reference="false">int</type>
          </tag>
          <tag line="128" name="param" description="" type="string" variable="$virtual_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="param" description="" type="string" variable="$script_extension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="param" description="" type="string" variable="$engine_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="param" description="" type="bool" variable="$allow_scripting">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="128" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$server_instance</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$virtual_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$script_extension</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$engine_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$allow_scripting</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="149" package="Default">
        <name>getServerbyComment</name>
        <full_name>getServerbyComment</full_name>
        <docblock line="143">
          <description/>
          <long-description/>
          <tag line="143" name="static" description=""/>
          <tag line="143" name="access" description="public"/>
          <tag line="143" name="param" description="" type="string" variable="$comment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$comment</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="160" package="Default">
        <name>getServerbyPath</name>
        <full_name>getServerbyPath</full_name>
        <docblock line="154">
          <description/>
          <long-description/>
          <tag line="154" name="static" description=""/>
          <tag line="154" name="access" description="public"/>
          <tag line="154" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="154" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="172" package="Default">
        <name>getServerRights</name>
        <full_name>getServerRights</full_name>
        <docblock line="165">
          <description/>
          <long-description/>
          <tag line="165" name="static" description=""/>
          <tag line="165" name="access" description="public"/>
          <tag line="165" name="param" description="" type="int" variable="$server_instance">
            <type by_reference="false">int</type>
          </tag>
          <tag line="165" name="param" description="" type="string" variable="$virtual_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$server_instance</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$virtual_path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="185" package="Default">
        <name>setServerRights</name>
        <full_name>setServerRights</full_name>
        <docblock line="177">
          <description/>
          <long-description/>
          <tag line="177" name="static" description=""/>
          <tag line="177" name="access" description="public"/>
          <tag line="177" name="param" description="" type="int" variable="$server_instance">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="param" description="" type="string" variable="$virtual_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="param" description="" type="string" variable="$directory_flags">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$server_instance</name>
          <default/>
          <type/>
        </argument>
        <argument line="185">
          <name>$virtual_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="185">
          <name>$directory_flags</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="196" package="Default">
        <name>serviceState</name>
        <full_name>serviceState</full_name>
        <docblock line="190">
          <description/>
          <long-description/>
          <tag line="190" name="static" description=""/>
          <tag line="190" name="access" description="public"/>
          <tag line="190" name="param" description="" type="int" variable="$serviceId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="190" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$serviceId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="209" package="Default">
        <name>setAppSettings</name>
        <full_name>setAppSettings</full_name>
        <docblock line="201">
          <description/>
          <long-description/>
          <tag line="201" name="static" description=""/>
          <tag line="201" name="access" description="public"/>
          <tag line="201" name="param" description="" type="int" variable="$server_instance">
            <type by_reference="false">int</type>
          </tag>
          <tag line="201" name="param" description="" type="string" variable="$virtual_path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="param" description="" type="string" variable="$application_scope">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$server_instance</name>
          <default/>
          <type/>
        </argument>
        <argument line="209">
          <name>$virtual_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="209">
          <name>$application_scope</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="18" code="50012">No short description for method addServer()</error>
      <error line="35" code="50012">No short description for method removeServer()</error>
      <error line="46" code="50012">No short description for method startServer()</error>
      <error line="57" code="50012">No short description for method stopServer()</error>
      <error line="68" code="50012">No short description for method startService()</error>
      <error line="79" code="50012">No short description for method stopService()</error>
      <error line="90" code="50012">No short description for method getDirectorySecurity()</error>
      <error line="102" code="50012">No short description for method setDirectorySecurity()</error>
      <error line="115" code="50012">No short description for method getScriptMap()</error>
      <error line="128" code="50012">No short description for method setScriptMap()</error>
      <error line="143" code="50012">No short description for method getServerbyComment()</error>
      <error line="154" code="50012">No short description for method getServerbyPath()</error>
      <error line="165" code="50012">No short description for method getServerRights()</error>
      <error line="177" code="50012">No short description for method setServerRights()</error>
      <error line="190" code="50012">No short description for method serviceState()</error>
      <error line="201" code="50012">No short description for method setAppSettings()</error>
    </parse_markers>
  </file>
  <file path="Pz/Server/NSAPI.php" hash="8db98964312bb3c45c0b854ce1558b70" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Server_NSAPI</name>
      <full_name>\Pz_Server_NSAPI</full_name>
      <docblock line="13">
        <description>A collection of methods allowing you to interact directly with Netscape/iPlanet/Sun servers.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="24" package="Default">
        <name>virtual</name>
        <full_name>virtual</full_name>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="static" description=""/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$uri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$uri</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="34" package="Default">
        <name>getAllRequestHeaders</name>
        <full_name>getAllRequestHeaders</full_name>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="static" description=""/>
          <tag line="29" name="access" description="public"/>
          <tag line="29" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="44" package="Default">
        <name>getAllResponseHeaders</name>
        <full_name>getAllResponseHeaders</full_name>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="static" description=""/>
          <tag line="39" name="access" description="public"/>
          <tag line="39" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="18" code="50012">No short description for method virtual()</error>
      <error line="29" code="50012">No short description for method getAllRequestHeaders()</error>
      <error line="39" code="50012">No short description for method getAllResponseHeaders()</error>
    </parse_markers>
  </file>
  <file path="Pz/Server/Security.php" hash="7626adbcc41b4e8e60d2d0fbf9125cc5" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_StaticGeneric</extends>
      <name>Pz_Server_Security</name>
      <full_name>\Pz_Server_Security</full_name>
      <docblock line="13">
        <description>This class provides methods that normally should be handled by the server itself.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="24" package="Default">
        <name>domainCheck</name>
        <full_name>domainCheck</full_name>
        <docblock line="18">
          <description>Checks if domain is allowed.</description>
          <long-description/>
          <tag line="18" name="static" description=""/>
          <tag line="18" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="82" package="Default">
        <name>whitelistCheck</name>
        <full_name>whitelistCheck</full_name>
        <docblock line="76">
          <description>Check if the visitors IP is whitelisted (if enabled).</description>
          <long-description/>
          <tag line="76" name="static" description=""/>
          <tag line="76" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="133" package="Default">
        <name>blacklistCheck</name>
        <full_name>blacklistCheck</full_name>
        <docblock line="127">
          <description>Check if the visitors IP is blacklisted (if enabled).</description>
          <long-description/>
          <tag line="127" name="static" description=""/>
          <tag line="127" name="access" description="public"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Helper/Array.php" hash="631a6d47c0924829ce51a7418b63fce1" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Helper_Array</name>
      <full_name>\Pz_Helper_Array</full_name>
      <docblock line="13">
        <description>A helper class that allows you to manipulate or read arrays in useful ways that PHP does not natively support.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="28" package="Default">
        <name>aasort</name>
        <full_name>aasort</full_name>
        <docblock line="18">
          <description>Sorts an array by a specific key.</description>
          <long-description/>
          <tag line="18" name="static" description=""/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="array" variable="$sourceArray">
            <type by_reference="false">array</type>
          </tag>
          <tag line="18" name="param" description="" type="string|int|float" variable="$keyToSortBy">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
            <type by_reference="false">float</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$sortType">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$sortAscending">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$sourceArray</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$keyToSortBy</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$sortType</name>
          <default>SORT_REGULAR</default>
          <type/>
        </argument>
        <argument line="28">
          <name>$sortAscending</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Helper/String.php" hash="944686256ebdd2dbf21e90f99af5ac7f" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Helper_String</name>
      <full_name>\Pz_Helper_String</full_name>
      <docblock line="13">
        <description>A helper class with various string manipulation, or reading methods that do not exist in PHP natively.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>ALPHANUMERIC</name>
        <full_name>ALPHANUMERIC</full_name>
        <value>0</value>
        <docblock line="18">
          <description>Flag specifying the use of alphanumeric characters only.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>ALPHANUMERIC_PLUS</name>
        <full_name>ALPHANUMERIC_PLUS</full_name>
        <value>1</value>
        <docblock line="25">
          <description>Flag specifying the use of alphanumeric+special characters only.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>HEX</name>
        <full_name>HEX</full_name>
        <value>2</value>
        <docblock line="32">
          <description>Flag specifying the use of hex characters only.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="49" package="Default">
        <name>createCode</name>
        <full_name>createCode</full_name>
        <docblock line="39">
          <description>Generates a random string.</description>
          <long-description/>
          <tag line="39" name="static" description=""/>
          <tag line="39" name="access" description="public"/>
          <tag line="39" name="param" description="" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="39" name="param" description="" type="int" variable="$type">
            <type by_reference="false">int</type>
          </tag>
          <tag line="39" name="param" description="" type="bool" variable="$regenerateSeed">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="39" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$length</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$type</name>
          <default>self::ALPHANUMERIC</default>
          <type/>
        </argument>
        <argument line="49">
          <name>$regenerateSeed</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="91" package="Default">
        <name>unserializable</name>
        <full_name>unserializable</full_name>
        <docblock line="83">
          <description>Returns true or false depending on if a string is unserializable (meaning if it is a serialized string).</description>
          <long-description/>
          <tag line="83" name="static" description=""/>
          <tag line="83" name="access" description="public"/>
          <tag line="83" name="param" description="" type="\global\" variable="$string"/>
          <tag line="83" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Helper/Misc.php" hash="192ee44e302f05d1cb26ba43f6de4cb3" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Helper_Misc</name>
      <full_name>\Pz_Helper_Misc</full_name>
      <docblock line="13">
        <description>A helper class that contains various, unrelated methods that help with various, unrelated tasks.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="21" package="Default">
        <name>regenerateMtRandSeed</name>
        <full_name>regenerateMtRandSeed</full_name>
        <docblock line="18">
          <description>Regenerates the mt_rand using a unique seed.</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/PDO/Interactions.php" hash="31dbcaf06c3d24627838229dfdcf7016" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_PDO_Interactions</name>
      <full_name>\Pz_PDO_Interactions</full_name>
      <docblock line="13">
        <description>The interaction class for communicating with mysql using mysqli.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="18">
          <description>Expects to handle read related queries.</description>
          <long-description/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="return" description="" type="bool|\PDOStatement">
            <type by_reference="false">bool</type>
            <type by_reference="false">\PDOStatement</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="65">
          <description>Expects to handle write related query.</description>
          <long-description/>
          <tag line="65" name="access" description="public"/>
          <tag line="65" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="return" description="" type="bool|\PDOStatement">
            <type by_reference="false">bool</type>
            <type by_reference="false">\PDOStatement</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="73">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="204" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
        <docblock line="196">
          <description>Returns the affected rows of the last delete/insert/update/etc.</description>
          <long-description>&lt;p&gt;.. query.&lt;/p&gt;</long-description>
          <tag line="196" name="access" description="public"/>
          <tag line="196" name="param" description="" type="\PDOStatement" variable="$queryObject">
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="196" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="196" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="204">
          <name>$queryObject</name>
          <default/>
          <type>\PDOStatement</type>
        </argument>
        <argument line="204">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="218" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
        <docblock line="211">
          <description>Returns the last insert id of the last insert query.</description>
          <long-description/>
          <tag line="211" name="access" description="public"/>
          <tag line="211" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="211" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="235" package="Default">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="225">
          <description>Sanitize a value that will be injected into a query string.</description>
          <long-description/>
          <tag line="225" name="access" description="public"/>
          <tag line="225" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="225" name="param" description="" type="bool" variable="$mustBeNumeric">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="225" name="param" description="" type="int" variable="$decimalPlaces">
            <type by_reference="false">int</type>
          </tag>
          <tag line="225" name="param" description="" type="int" variable="$cleanall">
            <type by_reference="false">int</type>
          </tag>
          <tag line="225" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="235">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="235">
          <name>$mustBeNumeric</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="235">
          <name>$decimalPlaces</name>
          <default>2</default>
          <type/>
        </argument>
        <argument line="235">
          <name>$cleanall</name>
          <default>\Pz_Security::CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/PDO/Server.php" hash="05b8b7ff8b71ee862c7ea6f8b31c11d1" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="true" abstract="true" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_PDO_Server</name>
      <full_name>\Pz_PDO_Server</full_name>
      <docblock line="13">
        <description>Class is used for storing database connection information using pdo.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>CONNECTED</name>
        <full_name>CONNECTED</full_name>
        <value>1</value>
        <docblock line="18">
          <description>Status constant when the connection is established.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>DISCONNECTED</name>
        <full_name>DISCONNECTED</full_name>
        <value>2</value>
        <docblock line="25">
          <description>Status constant when the connection is disconnected.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>CONNECTING</name>
        <full_name>CONNECTING</full_name>
        <value>3</value>
        <docblock line="32">
          <description>Status constant when the connection is connecting.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$_user</name>
        <default>''</default>
        <docblock line="39">
          <description>The username that will access the database server.</description>
          <long-description/>
          <tag line="39" name="access" description="private"/>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="global" package="Default">
        <name>$_password</name>
        <default>''</default>
        <docblock line="47">
          <description>The password that will access the database server.</description>
          <long-description/>
          <tag line="47" name="access" description="private"/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$_host</name>
        <default>''</default>
        <docblock line="55">
          <description>The host that the database server is on.</description>
          <long-description/>
          <tag line="55" name="access" description="private"/>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" namespace="global" package="Default">
        <name>$_server</name>
        <default>''</default>
        <docblock line="63">
          <description>The server name for the database (if any).</description>
          <long-description/>
          <tag line="63" name="access" description="private"/>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="77" namespace="global" package="Default">
        <name>$_socket</name>
        <default>''</default>
        <docblock line="71">
          <description>The connection socket for the database (if any).</description>
          <long-description/>
          <tag line="71" name="access" description="private"/>
          <tag line="71" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="85" namespace="global" package="Default">
        <name>$_protocol</name>
        <default>''</default>
        <docblock line="79">
          <description>The connection protocol for the database (if any).</description>
          <long-description/>
          <tag line="79" name="access" description="private"/>
          <tag line="79" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="93" namespace="global" package="Default">
        <name>$_dbName</name>
        <default>''</default>
        <docblock line="87">
          <description>The default database to connect to.</description>
          <long-description/>
          <tag line="87" name="access" description="private"/>
          <tag line="87" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$_dbType</name>
        <default>''</default>
        <docblock line="95">
          <description>The type of database this is.</description>
          <long-description/>
          <tag line="95" name="access" description="private"/>
          <tag line="95" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="109" namespace="global" package="Default">
        <name>$_charset</name>
        <default>''</default>
        <docblock line="103">
          <description>The charset to use for the connection.</description>
          <long-description/>
          <tag line="103" name="access" description="private"/>
          <tag line="103" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="117" namespace="global" package="Default">
        <name>$_dbDriverOptions</name>
        <default>array()</default>
        <docblock line="111">
          <description>The chosen database's driver options.</description>
          <long-description/>
          <tag line="111" name="access" description="private"/>
          <tag line="111" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="125" namespace="global" package="Default">
        <name>$_port</name>
        <default>0</default>
        <docblock line="119">
          <description>The port that the database server is on.</description>
          <long-description/>
          <tag line="119" name="access" description="private"/>
          <tag line="119" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="133" namespace="global" package="Default">
        <name>$_connectRetryAttempts</name>
        <default>0</default>
        <docblock line="127">
          <description>The amount of times Pz should try to reconnect to the database server.</description>
          <long-description/>
          <tag line="127" name="access" description="private"/>
          <tag line="127" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="141" namespace="global" package="Default">
        <name>$_connectRetryDelay</name>
        <default>0</default>
        <docblock line="135">
          <description>The amount of seconds to wait between connection retry attempts.</description>
          <long-description/>
          <tag line="135" name="access" description="private"/>
          <tag line="135" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="149" namespace="global" package="Default">
        <name>$_status</name>
        <default>self::DISCONNECTED</default>
        <docblock line="143">
          <description>The current connection status.</description>
          <long-description/>
          <tag line="143" name="access" description="private"/>
          <tag line="143" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="157" namespace="global" package="Default">
        <name>$_pdo_obj</name>
        <default>NULL</default>
        <docblock line="151">
          <description>The final pdo object.</description>
          <long-description/>
          <tag line="151" name="access" description="private"/>
          <tag line="151" name="var" description="" type="null|\pdo">
            <type by_reference="false">null</type>
            <type by_reference="false">\pdo</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="177" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="159">
          <description>The constructor handles setting the database server credentials.</description>
          <long-description/>
          <tag line="159" name="access" description="private"/>
          <tag line="159" name="param" description="" type="string" variable="$dbUser">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$dbPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$dbType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$dbHost">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="int" variable="$dbPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="159" name="param" description="" type="int" variable="$connectRetries">
            <type by_reference="false">int</type>
          </tag>
          <tag line="159" name="param" description="" type="int" variable="$connectRetryWait">
            <type by_reference="false">int</type>
          </tag>
          <tag line="159" name="param" description="" type="array" variable="$dbDriverOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$server">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$protocol">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$socket">
            <type by_reference="false">string</type>
          </tag>
          <tag line="159" name="param" description="" type="string" variable="$charset">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="177">
          <name>$dbUser</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$dbPassword</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$dbType</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$dbHost</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$dbPort</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$connectRetries</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$connectRetryWait</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$dbDriverOptions</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$server</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$protocol</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$socket</name>
          <default/>
          <type/>
        </argument>
        <argument line="177">
          <name>$charset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="200" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="194">
          <description>Attempts to connect to the database server.</description>
          <long-description/>
          <tag line="194" name="access" description="public"/>
          <tag line="194" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="240" package="Default">
        <name>_getDSN</name>
        <full_name>_getDSN</full_name>
        <docblock line="234">
          <description>Returns the correct DSN for the PDO connection.</description>
          <long-description/>
          <tag line="234" name="access" description="private"/>
          <tag line="234" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="286" package="Default">
        <name>disconnect</name>
        <full_name>disconnect</full_name>
        <docblock line="281">
          <description>Disconnects from the database server.</description>
          <long-description/>
          <tag line="281" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="296">
          <description>Returns true or false if the database server connection went through and is active.</description>
          <long-description/>
          <tag line="296" name="access" description="public"/>
          <tag line="296" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="313" package="Default">
        <name>returnPDOObj</name>
        <full_name>returnPDOObj</full_name>
        <docblock line="307">
          <description>Returns the active pdo object.</description>
          <long-description/>
          <tag line="307" name="access" description="public"/>
          <tag line="307" name="return" description="" type="\pdo|null">
            <type by_reference="false">\pdo</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="324" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
        <docblock line="318">
          <description>Returns the last insert id.</description>
          <long-description/>
          <tag line="318" name="access" description="public"/>
          <tag line="318" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="336" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
        <docblock line="329">
          <description>Returns the affected rows from the provided query.</description>
          <long-description/>
          <tag line="329" name="access" description="public"/>
          <tag line="329" name="param" description="" type="\PDOStatement" variable="$queryOnject">
            <type by_reference="false">\PDOStatement</type>
          </tag>
          <tag line="329" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$queryOnject</name>
          <default/>
          <type>\PDOStatement</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Http/Request.php" hash="a0383848cef2b25a1a6d1cecd9542bab" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_Http_Request</name>
      <full_name>\Pz_Http_Request</full_name>
      <docblock line="13">
        <description>The Request class allows you to learn about the essentials of the current request.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$_isAjax</name>
        <default>false</default>
        <docblock line="18">
          <description>Whether the current request is an AJAX request or not.</description>
          <long-description/>
          <tag line="18" name="access" description="private"/>
          <tag line="18" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$_queryString</name>
        <default>''</default>
        <docblock line="26">
          <description>The query string (if any) associated with this request.</description>
          <long-description/>
          <tag line="26" name="access" description="private"/>
          <tag line="26" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="global" package="Default">
        <name>$_mediaTypes</name>
        <default>array()</default>
        <docblock line="34">
          <description>The different accepted media types.</description>
          <long-description/>
          <tag line="34" name="access" description="private"/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="global" package="Default">
        <name>$_charsets</name>
        <default>array()</default>
        <docblock line="42">
          <description>The different accepted charsets.</description>
          <long-description/>
          <tag line="42" name="access" description="private"/>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Default">
        <name>$_encodings</name>
        <default>array()</default>
        <docblock line="50">
          <description>The different accepted encodings.</description>
          <long-description/>
          <tag line="50" name="access" description="private"/>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="64" namespace="global" package="Default">
        <name>$_languages</name>
        <default>array()</default>
        <docblock line="58">
          <description>The different accepted languages.</description>
          <long-description/>
          <tag line="58" name="access" description="private"/>
          <tag line="58" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="72" namespace="global" package="Default">
        <name>$_referer</name>
        <default>''</default>
        <docblock line="66">
          <description>The referer url for this request.</description>
          <long-description/>
          <tag line="66" name="access" description="private"/>
          <tag line="66" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="80" namespace="global" package="Default">
        <name>$_secure</name>
        <default>false</default>
        <docblock line="74">
          <description>Whether this request is being sent over https.</description>
          <long-description/>
          <tag line="74" name="access" description="private"/>
          <tag line="74" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="82">
          <description>Sets Pz Core object and starts gathering request data.</description>
          <long-description/>
          <tag line="82" name="param" description="" type="\Pz_Core" variable="$PzCore">
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$PzCore</name>
          <default/>
          <type>\Pz_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="99" package="Default">
        <name>_populateRequestParameters</name>
        <full_name>_populateRequestParameters</full_name>
        <docblock line="94">
          <description>Gathers various information about the request and stores it.</description>
          <long-description/>
          <tag line="94" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="116" package="Default">
        <name>_detectReferer</name>
        <full_name>_detectReferer</full_name>
        <docblock line="111">
          <description>Detects the referer url (if any).</description>
          <long-description/>
          <tag line="111" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="131" package="Default">
        <name>_detectHttps</name>
        <full_name>_detectHttps</full_name>
        <docblock line="126">
          <description>Detects whether https is being used.</description>
          <long-description/>
          <tag line="126" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="151" package="Default">
        <name>_detectQueryString</name>
        <full_name>_detectQueryString</full_name>
        <docblock line="146">
          <description>Detects and cleans the query string (if any).</description>
          <long-description/>
          <tag line="146" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="166" package="Default">
        <name>_detectMediaTypes</name>
        <full_name>_detectMediaTypes</full_name>
        <docblock line="161">
          <description>Reads header information for media types and extracts them.</description>
          <long-description/>
          <tag line="161" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="201" package="Default">
        <name>_detectCharsets</name>
        <full_name>_detectCharsets</full_name>
        <docblock line="196">
          <description>Reads header information for charsets and extracts them.</description>
          <long-description/>
          <tag line="196" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="236" package="Default">
        <name>_detectEncodings</name>
        <full_name>_detectEncodings</full_name>
        <docblock line="231">
          <description>Reads header information for accepted encodings and extracts them.</description>
          <long-description/>
          <tag line="231" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="271" package="Default">
        <name>_detectLanguages</name>
        <full_name>_detectLanguages</full_name>
        <docblock line="266">
          <description>Reads header information for accepted languages and extracts them.</description>
          <long-description/>
          <tag line="266" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="308" package="Default">
        <name>parseAcceptHeader</name>
        <full_name>parseAcceptHeader</full_name>
        <docblock line="301">
          <description>Parses any kind of accept header and extracts its data.</description>
          <long-description/>
          <tag line="301" name="access" description="public"/>
          <tag line="301" name="param" description="" type="\global\" variable="$header"/>
          <tag line="301" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="308">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="356" package="Default">
        <name>acceptHeaderOptions</name>
        <full_name>acceptHeaderOptions</full_name>
        <docblock line="349">
          <description>Breaks-apart the accept header value.</description>
          <long-description/>
          <tag line="349" name="access" description="public"/>
          <tag line="349" name="param" description="" type="\global\" variable="$ruleSet"/>
          <tag line="349" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="356">
          <name>$ruleSet</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="393" package="Default">
        <name>_detectAjax</name>
        <full_name>_detectAjax</full_name>
        <docblock line="388">
          <description>Detects if current request is an ajax call.</description>
          <long-description/>
          <tag line="388" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="406" package="Default">
        <name>isAjax</name>
        <full_name>isAjax</full_name>
        <docblock line="400">
          <description>Returns true or false depending on if the current request is ajax.</description>
          <long-description/>
          <tag line="400" name="access" description="public"/>
          <tag line="400" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="417" package="Default">
        <name>getMediaTypes</name>
        <full_name>getMediaTypes</full_name>
        <docblock line="411">
          <description>Returns this requests accepted media types.</description>
          <long-description/>
          <tag line="411" name="access" description="public"/>
          <tag line="411" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="428" package="Default">
        <name>getCharsets</name>
        <full_name>getCharsets</full_name>
        <docblock line="422">
          <description>Returns this requests accepted charsets.</description>
          <long-description/>
          <tag line="422" name="access" description="public"/>
          <tag line="422" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="439" package="Default">
        <name>getEncodings</name>
        <full_name>getEncodings</full_name>
        <docblock line="433">
          <description>Returns this requests accepted encodings.</description>
          <long-description/>
          <tag line="433" name="access" description="public"/>
          <tag line="433" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="450" package="Default">
        <name>getLanguages</name>
        <full_name>getLanguages</full_name>
        <docblock line="444">
          <description>Returns this requests accepted languages.</description>
          <long-description/>
          <tag line="444" name="access" description="public"/>
          <tag line="444" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="461" package="Default">
        <name>isSecure</name>
        <full_name>isSecure</full_name>
        <docblock line="455">
          <description>Returns true or false depending on if this request is secure or not.</description>
          <long-description/>
          <tag line="455" name="access" description="public"/>
          <tag line="455" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="472" package="Default">
        <name>getReferer</name>
        <full_name>getReferer</full_name>
        <docblock line="466">
          <description>Returns this request's referer url (if any).</description>
          <long-description/>
          <tag line="466" name="access" description="public"/>
          <tag line="466" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="484" package="Default">
        <name>server</name>
        <full_name>server</full_name>
        <docblock line="477">
          <description>Returns a value from the SERVER super global.</description>
          <long-description/>
          <tag line="477" name="access" description="public"/>
          <tag line="477" name="param" description="" type="\global\" variable="$varname"/>
          <tag line="477" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="484">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="503" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="496">
          <description>Returns a value from the GET super global.</description>
          <long-description/>
          <tag line="496" name="access" description="public"/>
          <tag line="496" name="param" description="" type="\global\" variable="$varname"/>
          <tag line="496" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="503">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="522" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="515">
          <description>Returns a value from the POST super global.</description>
          <long-description/>
          <tag line="515" name="access" description="public"/>
          <tag line="515" name="param" description="" type="\global\" variable="$varname"/>
          <tag line="515" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="522">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="541" package="Default">
        <name>cookie</name>
        <full_name>cookie</full_name>
        <docblock line="534">
          <description>Returns a value from the COOKIE super global.</description>
          <long-description/>
          <tag line="534" name="access" description="public"/>
          <tag line="534" name="param" description="" type="\global\" variable="$varname"/>
          <tag line="534" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="541">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="560" package="Default">
        <name>files</name>
        <full_name>files</full_name>
        <docblock line="553">
          <description>Returns a value from the FILES super global.</description>
          <long-description/>
          <tag line="553" name="access" description="public"/>
          <tag line="553" name="param" description="" type="\global\" variable="$varname"/>
          <tag line="553" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="560">
          <name>$varname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="578" package="Default">
        <name>clientIpAddress</name>
        <full_name>clientIpAddress</full_name>
        <docblock line="572">
          <description>Returns the client IP address.</description>
          <long-description/>
          <tag line="572" name="access" description="public"/>
          <tag line="572" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="610" package="Default">
        <name>serverIpAddress</name>
        <full_name>serverIpAddress</full_name>
        <docblock line="604">
          <description>Returns the server's IP address/</description>
          <long-description/>
          <tag line="604" name="access" description="public"/>
          <tag line="604" name="return" description="" type="null|string">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="638" package="Default">
        <name>cleanQueryString</name>
        <full_name>cleanQueryString</full_name>
        <docblock line="631">
          <description>Cleans a raw query string.</description>
          <long-description/>
          <tag line="631" name="access" description="public"/>
          <tag line="631" name="param" description="" type="\global\" variable="$queryString"/>
          <tag line="631" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="638">
          <name>$queryString</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Http/Response.php" hash="40a89680b32df43801a0b8e544cf0903" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_Http_Response</name>
      <full_name>\Pz_Http_Response</full_name>
      <docblock line="13">
        <description>Allows you to set response headers and status codes.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$_headers</name>
        <default>array()</default>
        <docblock line="18">
          <description>An array of custom set headers.</description>
          <long-description/>
          <tag line="18" name="access" description="private"/>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$_statusCode</name>
        <default>200</default>
        <docblock line="26">
          <description>The http status code to be sent to the client.</description>
          <long-description/>
          <tag line="26" name="access" description="private"/>
          <tag line="26" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="global" package="Default">
        <name>$_httpVersion</name>
        <default>'1.1'</default>
        <docblock line="34">
          <description>The http version being used.</description>
          <long-description/>
          <tag line="34" name="access" description="private"/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="48" namespace="global" package="Default">
        <name>$_statusText</name>
        <default>array(100 =&gt; 'Continue', 101 =&gt; 'Switching Protocols', 102 =&gt; 'Processing', 200 =&gt; 'OK', 201 =&gt; 'Created', 202 =&gt; 'Accepted', 203 =&gt; 'Non-Authoritative Information', 204 =&gt; 'No Content', 205 =&gt; 'Reset Content', 206 =&gt; 'Partial Content', 207 =&gt; 'Multi-Status', 208 =&gt; 'Already Reported', 226 =&gt; 'IM Used', 300 =&gt; 'Multiple Choices', 301 =&gt; 'Moved Permanently', 302 =&gt; 'Found', 303 =&gt; 'See Other', 304 =&gt; 'Not Modified', 305 =&gt; 'Use Proxy', 306 =&gt; 'Reserved', 307 =&gt; 'Temporary Redirect', 308 =&gt; 'Permanent Redirect', 400 =&gt; 'Bad Request', 401 =&gt; 'Unauthorized', 402 =&gt; 'Payment Required', 403 =&gt; 'Forbidden', 404 =&gt; 'Not Found', 405 =&gt; 'Method Not Allowed', 406 =&gt; 'Not Acceptable', 407 =&gt; 'Proxy Authentication Required', 408 =&gt; 'Request Timeout', 409 =&gt; 'Conflict', 410 =&gt; 'Gone', 411 =&gt; 'Length Required', 412 =&gt; 'Precondition Failed', 413 =&gt; 'Request Entity Too Large', 414 =&gt; 'Request-URI Too Long', 415 =&gt; 'Unsupported Media Type', 416 =&gt; 'Requested Range Not Satisfiable', 417 =&gt; 'Expectation Failed', 418 =&gt; 'I\'m a teapot', 422 =&gt; 'Unprocessable Entity', 423 =&gt; 'Locked', 424 =&gt; 'Failed Dependency', 425 =&gt; 'Reserved for WebDAV advanced collections expired proposal', 426 =&gt; 'Upgrade Required', 428 =&gt; 'Precondition Required', 429 =&gt; 'Too Many Requests', 431 =&gt; 'Request Header Fields Too Large', 500 =&gt; 'Internal Server Error', 501 =&gt; 'Not Implemented', 502 =&gt; 'Bad Gateway', 503 =&gt; 'Service Unavailable', 504 =&gt; 'Gateway Timeout', 505 =&gt; 'HTTP Version Not Supported', 506 =&gt; 'Variant Also Negotiates (Experimental)', 507 =&gt; 'Insufficient Storage', 508 =&gt; 'Loop Detected', 510 =&gt; 'Not Extended', 511 =&gt; 'Network Authentication Required')</default>
        <docblock line="42">
          <description>Status code texts array.</description>
          <long-description/>
          <tag line="42" name="access" description="private"/>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="Default">
        <name>setHeader</name>
        <full_name>setHeader</full_name>
        <docblock line="111">
          <description>Defines a new header or replaces an existing one.</description>
          <long-description/>
          <tag line="111" name="access" description="public"/>
          <tag line="111" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="bool" variable="$replace">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="111" name="param" description="" type="null|int" variable="$responsecode">
            <type by_reference="false">null</type>
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$value</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="120">
          <name>$replace</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="120">
          <name>$responsecode</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Default">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="127">
          <description>Gets all custom set headers.</description>
          <long-description/>
          <tag line="127" name="access" description="public"/>
          <tag line="127" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="Default">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="138">
          <description>Gets a custom set header.</description>
          <long-description/>
          <tag line="138" name="access" description="public"/>
          <tag line="138" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="Default">
        <name>redirect</name>
        <full_name>redirect</full_name>
        <docblock line="150">
          <description>Sets redirect headers, and can stop script execution if stated.</description>
          <long-description/>
          <tag line="150" name="access" description="public"/>
          <tag line="150" name="param" description="" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="" type="bool" variable="$exit">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="157">
          <name>$exit</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="Default">
        <name>setStatusCode</name>
        <full_name>setStatusCode</full_name>
        <docblock line="169">
          <description>Set the response status code.</description>
          <long-description/>
          <tag line="169" name="access" description="public"/>
          <tag line="169" name="param" description="" type="string|int" variable="$code">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Default">
        <name>setHttpVersion</name>
        <full_name>setHttpVersion</full_name>
        <docblock line="182">
          <description>Sets the http version for the response.</description>
          <long-description/>
          <tag line="182" name="access" description="public"/>
          <tag line="182" name="param" description="" type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Default">
        <name>getStatusCode</name>
        <full_name>getStatusCode</full_name>
        <docblock line="193">
          <description>Gets the response status code.</description>
          <long-description/>
          <tag line="193" name="access" description="public"/>
          <tag line="193" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="Default">
        <name>getHttpVersion</name>
        <full_name>getHttpVersion</full_name>
        <docblock line="204">
          <description>Gets the response http version.</description>
          <long-description/>
          <tag line="204" name="access" description="public"/>
          <tag line="204" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="221" package="Default">
        <name>getStatusText</name>
        <full_name>getStatusText</full_name>
        <docblock line="215">
          <description>Gets the response status code text.</description>
          <long-description/>
          <tag line="215" name="access" description="public"/>
          <tag line="215" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Debugger.php" hash="06b95d056fcd2a306a547d7c8a87a111" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Debugger</name>
      <full_name>\Pz_Debugger</full_name>
      <docblock line="13">
        <description>The Debugger class keeps track of various statistics during your scripts execution.</description>
        <long-description>&lt;p&gt;It can also log them to a dB, or output them in HMTL.&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="23" namespace="global" package="Default">
        <name>$_registeredVersionInfo</name>
        <default>array()</default>
        <docblock line="18">
          <description>This array holds a key =&gt; value pair of any versions of packages/subpackages registered in your script; which are then displayed in the debug bar.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="global" package="Default">
        <name>$_statistics</name>
        <default>array('mysql_queries' =&gt; 0, 'mysql_read_queries' =&gt; 0, 'mysql_write_queries' =&gt; 0, 'pdo_queries' =&gt; 0, 'pdo_read_queries' =&gt; 0, 'pdo_write_queries' =&gt; 0, 'mc_writes' =&gt; 0, 'mc_deletes' =&gt; 0, 'mc_reads' =&gt; 0, 'mcd_writes' =&gt; 0, 'mcd_deletes' =&gt; 0, 'mcd_reads' =&gt; 0, 'apc_writes' =&gt; 0, 'apc_deletes' =&gt; 0, 'apc_reads' =&gt; 0, 'shm_writes' =&gt; 0, 'shm_deletes' =&gt; 0, 'shm_reads' =&gt; 0, 'lc_writes' =&gt; 0, 'lc_deletes' =&gt; 0, 'lc_reads' =&gt; 0, 'includes' =&gt; 0, 'mysql_connections' =&gt; 0, 'pdo_connections' =&gt; 0, 'mc_connections' =&gt; 0, 'mcd_connections' =&gt; 0, 'mysql_disconnections' =&gt; 0, 'pdo_disconnections' =&gt; 0, 'mc_disconnections' =&gt; 0, 'mcd_disconnections' =&gt; 0, 'mysql_queries_executed' =&gt; array(), 'pdo_queries_executed' =&gt; array(), 'start_memory_usage' =&gt; 0, 'start_memory_real_usage' =&gt; 0, 'start_peak_memory_usage' =&gt; 0, 'start_peak_memory_real_usage' =&gt; 0, 'end_memory_usage' =&gt; 0, 'end_memory_real_usage' =&gt; 0, 'end_peak_memory_usage' =&gt; 0, 'end_peak_memory_real_usage' =&gt; 0, 'script_memory_usage' =&gt; 0, 'script_peak_memory_usage' =&gt; 0, 'exec_time' =&gt; 0, 'exec_start_time' =&gt; 0, 'exec_end_time' =&gt; 0, 'included_files' =&gt; 0)</default>
        <docblock line="25">
          <description>Full array of different statistics this class keeps track of.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="84" namespace="global" package="Default">
        <name>$_dbUser</name>
        <default>''</default>
        <docblock line="79">
          <description>The user name for the mysql server that has access to the pz_debugger table.</description>
          <long-description/>
          <tag line="79" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="91" namespace="global" package="Default">
        <name>$_dbPassword</name>
        <default>''</default>
        <docblock line="86">
          <description>The password for the mysql server that has access to the pz_debugger table.</description>
          <long-description/>
          <tag line="86" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="98" namespace="global" package="Default">
        <name>$_dbName</name>
        <default>''</default>
        <docblock line="93">
          <description>The database name for the mysql server that has access to the pz_debugger table.</description>
          <long-description/>
          <tag line="93" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="105" namespace="global" package="Default">
        <name>$_dbHost</name>
        <default>'localhost'</default>
        <docblock line="100">
          <description>The host for the mysql server that has access to the pz_debugger table.</description>
          <long-description/>
          <tag line="100" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="112" namespace="global" package="Default">
        <name>$_dbPort</name>
        <default>3306</default>
        <docblock line="107">
          <description>The port for the mysql server that has access to the pz_debugger table.</description>
          <long-description/>
          <tag line="107" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="119" namespace="global" package="Default">
        <name>$_dbRetryattempts</name>
        <default>1</default>
        <docblock line="114">
          <description>Retry attempts to the mysql server that has access to the pz_debugger table.</description>
          <long-description/>
          <tag line="114" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="126" namespace="global" package="Default">
        <name>$_dbRetryDelay</name>
        <default>2</default>
        <docblock line="121">
          <description>Retry attempt delays to the mysql server that has access to the pz_debugger table.</description>
          <long-description/>
          <tag line="121" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="133" namespace="global" package="Default">
        <name>$_displayBar</name>
        <default>false</default>
        <docblock line="128">
          <description>If the debug bar should be displayed.</description>
          <long-description/>
          <tag line="128" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="140" namespace="global" package="Default">
        <name>$_logToDb</name>
        <default>false</default>
        <docblock line="135">
          <description>Whether stats should be logged to the database or not.</description>
          <long-description/>
          <tag line="135" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="153" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="142">
          <description>Sets the default values for the debugger class.</description>
          <long-description/>
          <tag line="142" name="param" description="" type="string" variable="$dbUser">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="" type="string" variable="$dbPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="" type="string" variable="$dbHost">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="param" description="" type="int" variable="$dbPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="142" name="param" description="" type="bool" variable="$displayBar">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="142" name="param" description="" type="bool" variable="$logToDb">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$dbUser</name>
          <default/>
          <type/>
        </argument>
        <argument line="153">
          <name>$dbPassword</name>
          <default/>
          <type/>
        </argument>
        <argument line="153">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
        <argument line="153">
          <name>$dbHost</name>
          <default/>
          <type/>
        </argument>
        <argument line="153">
          <name>$dbPort</name>
          <default/>
          <type/>
        </argument>
        <argument line="153">
          <name>$displayBar</name>
          <default/>
          <type/>
        </argument>
        <argument line="153">
          <name>$logToDb</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="Default">
        <name>calculateIncludes</name>
        <full_name>calculateIncludes</full_name>
        <docblock line="164">
          <description>Calculate total included files.</description>
          <long-description/>
          <tag line="164" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="179" package="Default">
        <name>calculateMysqlQueries</name>
        <full_name>calculateMysqlQueries</full_name>
        <docblock line="174">
          <description>Calculate total queries.</description>
          <long-description/>
          <tag line="174" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="Default">
        <name>calculatePDOQueries</name>
        <full_name>calculatePDOQueries</full_name>
        <docblock line="184">
          <description>Calculate total queries.</description>
          <long-description/>
          <tag line="184" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="199" package="Default">
        <name>calculateExecTime</name>
        <full_name>calculateExecTime</full_name>
        <docblock line="194">
          <description>Calculate total execution time.</description>
          <long-description/>
          <tag line="194" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="Default">
        <name>calculateMemoryUsage</name>
        <full_name>calculateMemoryUsage</full_name>
        <docblock line="207">
          <description>Calculate total memory usage.</description>
          <long-description/>
          <tag line="207" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="235" package="Default">
        <name>mysqlReadsInc</name>
        <full_name>mysqlReadsInc</full_name>
        <docblock line="230">
          <description>Increase mysql reads by 1.</description>
          <long-description/>
          <tag line="230" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="245" package="Default">
        <name>mysqlWritesInc</name>
        <full_name>mysqlWritesInc</full_name>
        <docblock line="240">
          <description>Increase mysql writes by 1.</description>
          <long-description/>
          <tag line="240" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="255" package="Default">
        <name>pdoReadsInc</name>
        <full_name>pdoReadsInc</full_name>
        <docblock line="250">
          <description>Increase pdo reads by 1.</description>
          <long-description/>
          <tag line="250" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="265" package="Default">
        <name>pdoWritesInc</name>
        <full_name>pdoWritesInc</full_name>
        <docblock line="260">
          <description>Increase pdo writes by 1.</description>
          <long-description/>
          <tag line="260" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="275" package="Default">
        <name>mcWritesInc</name>
        <full_name>mcWritesInc</full_name>
        <docblock line="270">
          <description>Increase mc writes by 1.</description>
          <long-description/>
          <tag line="270" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="285" package="Default">
        <name>mcDeletesInc</name>
        <full_name>mcDeletesInc</full_name>
        <docblock line="280">
          <description>Increase mc deletes by 1.</description>
          <long-description/>
          <tag line="280" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="295" package="Default">
        <name>mcReadsInc</name>
        <full_name>mcReadsInc</full_name>
        <docblock line="290">
          <description>Increase mc reads by 1.</description>
          <long-description/>
          <tag line="290" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="305" package="Default">
        <name>mcdWritesInc</name>
        <full_name>mcdWritesInc</full_name>
        <docblock line="300">
          <description>Increase mcd writes by 1.</description>
          <long-description/>
          <tag line="300" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="315" package="Default">
        <name>mcdDeletesInc</name>
        <full_name>mcdDeletesInc</full_name>
        <docblock line="310">
          <description>Increase mcd deletes by 1.</description>
          <long-description/>
          <tag line="310" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="325" package="Default">
        <name>mcdReadsInc</name>
        <full_name>mcdReadsInc</full_name>
        <docblock line="320">
          <description>Increase mcd reads by 1.</description>
          <long-description/>
          <tag line="320" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="335" package="Default">
        <name>apcWritesInc</name>
        <full_name>apcWritesInc</full_name>
        <docblock line="330">
          <description>Increase apc writes by 1.</description>
          <long-description/>
          <tag line="330" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="345" package="Default">
        <name>apcDeletesInc</name>
        <full_name>apcDeletesInc</full_name>
        <docblock line="340">
          <description>Increase apc deletes by 1.</description>
          <long-description/>
          <tag line="340" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="355" package="Default">
        <name>apcReadsInc</name>
        <full_name>apcReadsInc</full_name>
        <docblock line="350">
          <description>Increase apc reads by 1.</description>
          <long-description/>
          <tag line="350" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="365" package="Default">
        <name>shmWritesInc</name>
        <full_name>shmWritesInc</full_name>
        <docblock line="360">
          <description>Increase shm writes by 1.</description>
          <long-description/>
          <tag line="360" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="375" package="Default">
        <name>shmDeletesInc</name>
        <full_name>shmDeletesInc</full_name>
        <docblock line="370">
          <description>Increase shm deletes by 1.</description>
          <long-description/>
          <tag line="370" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="385" package="Default">
        <name>shmReadsInc</name>
        <full_name>shmReadsInc</full_name>
        <docblock line="380">
          <description>Increase shm reads by 1.</description>
          <long-description/>
          <tag line="380" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="395" package="Default">
        <name>lcWritesInc</name>
        <full_name>lcWritesInc</full_name>
        <docblock line="390">
          <description>Increase lc writes by 1.</description>
          <long-description/>
          <tag line="390" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="405" package="Default">
        <name>lcDeletesInc</name>
        <full_name>lcDeletesInc</full_name>
        <docblock line="400">
          <description>Increase lc deletes by 1.</description>
          <long-description/>
          <tag line="400" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="415" package="Default">
        <name>lcReadsInc</name>
        <full_name>lcReadsInc</full_name>
        <docblock line="410">
          <description>Increase lc reads by 1.</description>
          <long-description/>
          <tag line="410" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="425" package="Default">
        <name>mysqlConnectionsInc</name>
        <full_name>mysqlConnectionsInc</full_name>
        <docblock line="420">
          <description>Increase mysql connections by 1.</description>
          <long-description/>
          <tag line="420" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="435" package="Default">
        <name>mysqlDisconnectionsInc</name>
        <full_name>mysqlDisconnectionsInc</full_name>
        <docblock line="430">
          <description>Increase mysql disconnections by 1.</description>
          <long-description/>
          <tag line="430" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="445" package="Default">
        <name>pdoConnectionsInc</name>
        <full_name>pdoConnectionsInc</full_name>
        <docblock line="440">
          <description>Increase pdo connections by 1.</description>
          <long-description/>
          <tag line="440" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="455" package="Default">
        <name>pdoDisconnectionsInc</name>
        <full_name>pdoDisconnectionsInc</full_name>
        <docblock line="450">
          <description>Increase pdo disconnections by 1.</description>
          <long-description/>
          <tag line="450" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="465" package="Default">
        <name>mcConnectionsInc</name>
        <full_name>mcConnectionsInc</full_name>
        <docblock line="460">
          <description>Increase mc connections by 1.</description>
          <long-description/>
          <tag line="460" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="475" package="Default">
        <name>mcDisconnectionsInc</name>
        <full_name>mcDisconnectionsInc</full_name>
        <docblock line="470">
          <description>Increase mc disconnections by 1.</description>
          <long-description/>
          <tag line="470" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="485" package="Default">
        <name>mcdConnectionsInc</name>
        <full_name>mcdConnectionsInc</full_name>
        <docblock line="480">
          <description>Increase mcd connections by 1.</description>
          <long-description/>
          <tag line="480" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="495" package="Default">
        <name>mcdDisconnectionsInc</name>
        <full_name>mcdDisconnectionsInc</full_name>
        <docblock line="490">
          <description>Increase mcd disconnections by 1.</description>
          <long-description/>
          <tag line="490" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="505" package="Default">
        <name>mysqlLogQuery</name>
        <full_name>mysqlLogQuery</full_name>
        <docblock line="500">
          <description/>
          <long-description/>
          <tag line="500" name="param" description="logs actual query strings" type="\global\" variable="$query"/>
        </docblock>
        <argument line="505">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="515" package="Default">
        <name>pdoLogQuery</name>
        <full_name>pdoLogQuery</full_name>
        <docblock line="510">
          <description/>
          <long-description/>
          <tag line="510" name="param" description="logs actual query strings" type="\global\" variable="$query"/>
        </docblock>
        <argument line="515">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="526" package="Default">
        <name>finalize</name>
        <full_name>finalize</full_name>
        <docblock line="520">
          <description>Calcualtes, logs, displays debugger info.</description>
          <long-description/>
          <tag line="520" name="access" description="public"/>
          <tag line="520" name="param" description="" type="\Pz_Core" variable="$PzCore">
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
        <argument line="526">
          <name>$PzCore</name>
          <default/>
          <type>\Pz_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="570" package="Default">
        <name>_buildBar</name>
        <full_name>_buildBar</full_name>
        <docblock line="564">
          <description>This method handles building the debug bar and populating it.</description>
          <long-description/>
          <tag line="564" name="access" description="private"/>
          <tag line="564" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="673" package="Default">
        <name>registerVersionInfo</name>
        <full_name>registerVersionInfo</full_name>
        <docblock line="666">
          <description>Registers a package or subpackage with version info.</description>
          <long-description/>
          <tag line="666" name="access" description="public"/>
          <tag line="666" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="666" name="param" description="" type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="673">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="673">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="500" code="50012">No short description for method mysqlLogQuery()</error>
      <error line="510" code="50012">No short description for method pdoLogQuery()</error>
    </parse_markers>
  </file>
  <file path="Pz/Memcache/Interactions.php" hash="7d92d7f41c3e2245461703af988e3694" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_Memcache_Interactions</name>
      <full_name>\Pz_Memcache_Interactions</full_name>
      <docblock line="13">
        <description>Interaction class for dealing with memcache using memcache.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="18">
          <description>Writes a value to the cache.</description>
          <long-description/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$expires">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$deleteLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$checkFirst">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$expires</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="30">
          <name>$deleteLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="30">
          <name>$checkFirst</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="30">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="100">
          <description>Get value from the cache.</description>
          <long-description/>
          <tag line="100" name="access" description="public"/>
          <tag line="100" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="100" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="100" name="return" description="" type="array|bool|string">
            <type by_reference="false">array</type>
            <type by_reference="false">bool</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="109">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="109">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="145">
          <description>Delete value from cache.</description>
          <long-description/>
          <tag line="145" name="access" description="public"/>
          <tag line="145" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="145" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="145" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="154">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="154">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Memcache/Server.php" hash="84987d7c95e383491dece73ac41b1ce9" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="true" abstract="true" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Memcache_Server</name>
      <full_name>\Pz_Memcache_Server</full_name>
      <docblock line="13">
        <description>Class that stores and controls access to a memcache server (using memcache).</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>CONNECTED</name>
        <full_name>CONNECTED</full_name>
        <value>1</value>
        <docblock line="18">
          <description>Status constant when connection has been established to memcache.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>DISCONNECTED</name>
        <full_name>DISCONNECTED</full_name>
        <value>2</value>
        <docblock line="25">
          <description>Status constant when there is no connection to the memcache server.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>CONNECTING</name>
        <full_name>CONNECTING</full_name>
        <value>3</value>
        <docblock line="32">
          <description>Status constant when connecting to the memcache server.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$_ip</name>
        <default>''</default>
        <docblock line="39">
          <description>The IP of the target memcache server.</description>
          <long-description/>
          <tag line="39" name="access" description="private"/>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="global" package="Default">
        <name>$_port</name>
        <default>0</default>
        <docblock line="47">
          <description>The port of the target memcache server.</description>
          <long-description/>
          <tag line="47" name="access" description="private"/>
          <tag line="47" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$_connectRetryAttempts</name>
        <default>0</default>
        <docblock line="55">
          <description>The amount of times Pz should try to reconnect to memcache on failure.</description>
          <long-description/>
          <tag line="55" name="access" description="private"/>
          <tag line="55" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" namespace="global" package="Default">
        <name>$_connectRetryDelay</name>
        <default>0</default>
        <docblock line="63">
          <description>The time in seconds to wait between retry attempts.</description>
          <long-description/>
          <tag line="63" name="access" description="private"/>
          <tag line="63" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="77" namespace="global" package="Default">
        <name>$_status</name>
        <default>self::DISCONNECTED</default>
        <docblock line="71">
          <description>The current connection status.</description>
          <long-description/>
          <tag line="71" name="access" description="private"/>
          <tag line="71" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="85" namespace="global" package="Default">
        <name>$_memcache_obj</name>
        <default>NULL</default>
        <docblock line="79">
          <description>The current active memcached object.</description>
          <long-description/>
          <tag line="79" name="access" description="private"/>
          <tag line="79" name="var" description="" type="null|\memcache">
            <type by_reference="false">null</type>
            <type by_reference="false">\memcache</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="87">
          <description>The constructor handles setting the default settings.</description>
          <long-description/>
          <tag line="87" name="param" description="" type="string" variable="$mcIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="param" description="" type="int" variable="$mcPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="87" name="param" description="" type="int" variable="$connectRetries">
            <type by_reference="false">int</type>
          </tag>
          <tag line="87" name="param" description="" type="int" variable="$connectRetryWait">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$mcIp</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$mcPort</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$connectRetries</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$connectRetryWait</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="103">
          <description>Attempts to connect to the mecache server.</description>
          <long-description/>
          <tag line="103" name="access" description="public"/>
          <tag line="103" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="164" package="Default">
        <name>disconnect</name>
        <full_name>disconnect</full_name>
        <docblock line="159">
          <description>Disconnect the memcache server.</description>
          <long-description/>
          <tag line="159" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="176">
          <description>Returns true or false depending on if a connection has been established to memcache.</description>
          <long-description/>
          <tag line="176" name="access" description="public"/>
          <tag line="176" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="Default">
        <name>returnMemcacheObj</name>
        <full_name>returnMemcacheObj</full_name>
        <docblock line="187">
          <description>Return the current active memcache object.</description>
          <long-description/>
          <tag line="187" name="access" description="public"/>
          <tag line="187" name="return" description="" type="null|\memcache">
            <type by_reference="false">null</type>
            <type by_reference="false">\memcache</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Core.php" hash="79c2ac3943ef0ad6c0f6b45c9238be3c" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Core</name>
      <full_name>\Pz_Core</full_name>
      <docblock line="13">
        <description>The core class for Pz Library where most other functionality is accessed from.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>VERSION</name>
        <full_name>VERSION</full_name>
        <value>'3.9.2'</value>
        <docblock line="18">
          <description>Defines the version of Pz Library.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$_pzObjects</name>
        <default>array('security' =&gt; NULL, 'debugger' =&gt; NULL, 'loggers' =&gt; array('mysql' =&gt; NULL, 'mysqli' =&gt; NULL, 'pdo' =&gt; NULL, 'memcache' =&gt; NULL, 'memcached' =&gt; NULL), 'http' =&gt; array('response' =&gt; NULL, 'request' =&gt; NULL))</default>
        <docblock line="25">
          <description>A multi-dimensional array that will hold various object instances.</description>
          <long-description>&lt;p&gt;Pz stores main objects like the logger class, debugger, security, etc... inside this array for easy access.&lt;/p&gt;</long-description>
          <tag line="25" name="access" description="private"/>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="global" package="Default">
        <name>$_pzInteractions</name>
        <default>array('mysql' =&gt; NULL, 'mysqli' =&gt; NULL, 'pdo' =&gt; NULL, 'memcache' =&gt; NULL, 'memcached' =&gt; NULL, 'apc' =&gt; NULL, 'shm' =&gt; NULL, 'localcache' =&gt; NULL)</default>
        <docblock line="49">
          <description>An array that holds interaction objects.</description>
          <long-description>&lt;p&gt;Pz stores interaction objects for class representations of data storage/caching architectures, such as MySQL, Memcache, APC, etc...&lt;/p&gt;</long-description>
          <tag line="49" name="access" description="private"/>
          <tag line="49" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="76" namespace="global" package="Default">
        <name>$_settings</name>
        <default>array('db_connect_retry_attempts' =&gt; 1, 'db_connect_retry_delay' =&gt; 2, 'db_auto_connect_server' =&gt; false, 'db_auto_assign_active_server' =&gt; true, 'db_write_retry_first_interval_delay' =&gt; 3000000, 'db_write_retry_second_interval_delay' =&gt; 500000, 'db_write_retry_first_interval_retries' =&gt; 3, 'db_write_retry_second_interval_retries' =&gt; 6, 'cache_connect_retry_attempts' =&gt; 1, 'cache_connect_retry_delay' =&gt; 2, 'cache_auto_connect_server' =&gt; false, 'cache_auto_assign_active_server' =&gt; true, 'whitelist_ip_check' =&gt; false, 'whitelist_ips' =&gt; array(), 'whitelist_action' =&gt; array('action' =&gt; 'exit', 'target' =&gt; '', 'message' =&gt; '&lt;h1&gt;Access Denied&lt;/h1&gt;'), 'whitelist_auto_allow_host_server_ip' =&gt; true, 'blacklist_ip_check' =&gt; false, 'blacklist_ips' =&gt; array(), 'blacklist_action' =&gt; array('action' =&gt; 'exit', 'target' =&gt; '', 'message' =&gt; '&lt;h1&gt;You have been banned from this website&lt;/h1&gt;'), 'blacklist_ignore_host_server_ip' =&gt; true, 'output_compression' =&gt; true, 'output_buffering' =&gt; true, 'domain_protection' =&gt; false, 'domain_allowed_domains' =&gt; array(), 'domain_target_domain' =&gt; '', 'debug_mode' =&gt; true, 'debug_display_bar' =&gt; true, 'debug_db_user' =&gt; '', 'debug_db_password' =&gt; '', 'debug_db_name' =&gt; '', 'debug_db_host' =&gt; 'localhost', 'debug_db_port' =&gt; 3306, 'debug_db_log' =&gt; false, 'debug_log_file_auto_rotate' =&gt; true, 'debug_delete_log_files_after_x_days' =&gt; 7, 'debug_mysql_log_errors' =&gt; true, 'debug_mysql_error_log_file_name' =&gt; 'MYSQL_ERRORS', 'debug_memcache_log_errors' =&gt; true, 'debug_memcache_error_log_file_name' =&gt; 'MEMCACHE_ERRORS', 'debug_memcached_log_errors' =&gt; true, 'debug_memcached_error_log_file_name' =&gt; 'MEMCACHED_ERRORS', 'debug_pdo_log_errors' =&gt; true, 'debug_pdo_error_log_file_name' =&gt; 'PDO_ERRORS', 'debug_log_php_errors' =&gt; true, 'debug_php_error_log_file_name' =&gt; 'PHP_ERRORS', 'debug_php_display_errors' =&gt; false)</default>
        <docblock line="68">
          <description>Pz's main settings array</description>
          <long-description>&lt;p&gt;A multi-dimensional array that holds default settings for Pz.&lt;/p&gt;</long-description>
          <tag line="68" name="access" description="private"/>
          <tag line="68" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="148" namespace="global" package="Default">
        <name>$_mysqlServers</name>
        <default>array()</default>
        <docblock line="140">
          <description>An array where mysql server objects are stored.</description>
          <long-description>&lt;p&gt;They keys in this array also act as the id for the particular mysql server object.&lt;/p&gt;</long-description>
          <tag line="140" name="access" description="private"/>
          <tag line="140" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="156" namespace="global" package="Default">
        <name>$_activeMysqlServerId</name>
        <default>-1</default>
        <docblock line="150">
          <description>The active mysql server id.</description>
          <long-description/>
          <tag line="150" name="access" description="private"/>
          <tag line="150" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="166" namespace="global" package="Default">
        <name>$_mysqliServers</name>
        <default>array()</default>
        <docblock line="158">
          <description>An array where mysqli server objects are stored.</description>
          <long-description>&lt;p&gt;They keys in this array also act as the id for the particular mysqli server object.&lt;/p&gt;</long-description>
          <tag line="158" name="access" description="private"/>
          <tag line="158" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="174" namespace="global" package="Default">
        <name>$_activeMysqliServerId</name>
        <default>-1</default>
        <docblock line="168">
          <description>The active mysqli server id.</description>
          <long-description/>
          <tag line="168" name="access" description="private"/>
          <tag line="168" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="184" namespace="global" package="Default">
        <name>$_pdoServers</name>
        <default>array()</default>
        <docblock line="176">
          <description>An array where pdo server objects are stored.</description>
          <long-description>&lt;p&gt;They keys in this array also act as the id for the particular pdo server object.&lt;/p&gt;</long-description>
          <tag line="176" name="access" description="private"/>
          <tag line="176" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="192" namespace="global" package="Default">
        <name>$_activePDOServerId</name>
        <default>-1</default>
        <docblock line="186">
          <description>The active pdo server id.</description>
          <long-description/>
          <tag line="186" name="access" description="private"/>
          <tag line="186" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="202" namespace="global" package="Default">
        <name>$_memcachedServers</name>
        <default>array()</default>
        <docblock line="194">
          <description>An array where memcached server objects are stored.</description>
          <long-description>&lt;p&gt;They keys in this array also act as the id for the particular memcached server object.&lt;/p&gt;</long-description>
          <tag line="194" name="access" description="private"/>
          <tag line="194" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="212" namespace="global" package="Default">
        <name>$_memcacheServers</name>
        <default>array()</default>
        <docblock line="204">
          <description>An array where memcache server objects are stored.</description>
          <long-description>&lt;p&gt;They keys in this array also act as the id for the particular memcache server object.&lt;/p&gt;</long-description>
          <tag line="204" name="access" description="private"/>
          <tag line="204" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="220" namespace="global" package="Default">
        <name>$_activeMemcachedServerId</name>
        <default>-1</default>
        <docblock line="214">
          <description>The active memcached server id.</description>
          <long-description/>
          <tag line="214" name="access" description="private"/>
          <tag line="214" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="228" namespace="global" package="Default">
        <name>$_activeMemcacheServerId</name>
        <default>-1</default>
        <docblock line="222">
          <description>The active memcache server id.</description>
          <long-description/>
          <tag line="222" name="access" description="private"/>
          <tag line="222" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="230">
          <description>Boot-up process for the Pz Library.</description>
          <long-description>&lt;p&gt;This is where settings are set (if any custom settings are provided), debugging is started (if enabled), and security checks are executed (if need be).&lt;/p&gt;</long-description>
          <tag line="230" name="param" description="" type="array" variable="$settings">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="Default">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="250">
          <description>Disconnects any active connection to a mysql or memcache server, as well as tell the debugger to run its finalize step (if enabled).</description>
          <long-description>&lt;p&gt;The destruct procedure allows you to avoid having to manually disconnect your mysql or memcache servers.&lt;/p&gt;

&lt;p&gt;Of course, you can choose to disconnect them at any time before this destruct procedure.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="272" package="Default">
        <name>_initSettings</name>
        <full_name>_initSettings</full_name>
        <docblock line="266">
          <description>Apply any custom settings for Pz before anything else gets started.</description>
          <long-description/>
          <tag line="266" name="access" description="private"/>
          <tag line="266" name="param" description="" type="array" variable="$settings">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$settings</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="291" package="Default">
        <name>_initDebugging</name>
        <full_name>_initDebugging</full_name>
        <docblock line="286">
          <description>Begin debugging class, or warm-up logs.</description>
          <long-description/>
          <tag line="286" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="350" package="Default">
        <name>_initServerSecurity</name>
        <full_name>_initServerSecurity</full_name>
        <docblock line="343">
          <description>Begin basic server security checks (if enabled).</description>
          <long-description>&lt;p&gt;This will do a domain check, whitelist check, and blacklist check.&lt;/p&gt;</long-description>
          <tag line="343" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="378" package="Default">
        <name>_initMisc</name>
        <full_name>_initMisc</full_name>
        <docblock line="373">
          <description>Any other functions that need to be executed at start-up are called here.</description>
          <long-description/>
          <tag line="373" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="398" package="Default">
        <name>setPzObject</name>
        <full_name>setPzObject</full_name>
        <docblock line="390">
          <description>Registers an object in the Pz objects array.</description>
          <long-description/>
          <tag line="390" name="access" description="public"/>
          <tag line="390" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="param" description="" type="object" variable="$value">
            <type by_reference="false">object</type>
          </tag>
          <tag line="390" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="398">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="398">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="421" package="Default">
        <name>getPzObject</name>
        <full_name>getPzObject</full_name>
        <docblock line="414">
          <description>Gets a registered object from the Pz objects array.</description>
          <long-description/>
          <tag line="414" name="access" description="public"/>
          <tag line="414" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="421">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="444" package="Default">
        <name>_loadPzInteraction</name>
        <full_name>_loadPzInteraction</full_name>
        <docblock line="435">
          <description>Loads a Pz Interaction for a specific submodule.</description>
          <long-description>&lt;p&gt;New interactions are passed an instance of Pz_Core in their constructor.&lt;/p&gt;</long-description>
          <tag line="435" name="access" description="protected"/>
          <tag line="435" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="444">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="444">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="459" package="Default">
        <name>getPzInteraction</name>
        <full_name>getPzInteraction</full_name>
        <docblock line="452">
          <description>Gets a loaded Pz Interaction.</description>
          <long-description/>
          <tag line="452" name="access" description="public"/>
          <tag line="452" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="452" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="459">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="478" package="Default">
        <name>getSetting</name>
        <full_name>getSetting</full_name>
        <docblock line="471">
          <description>Gets a Pz setting's value.</description>
          <long-description/>
          <tag line="471" name="access" description="public"/>
          <tag line="471" name="param" description="" type="string" variable="$settingName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="471" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="478">
          <name>$settingName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="489" package="Default">
        <name>_serverSecurityNeeded</name>
        <full_name>_serverSecurityNeeded</full_name>
        <docblock line="483">
          <description>Returns true if server security is needed/enabled.</description>
          <long-description/>
          <tag line="483" name="access" description="private"/>
          <tag line="483" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="500" package="Default">
        <name>pzSecurity</name>
        <full_name>pzSecurity</full_name>
        <docblock line="494">
          <description>Returns the Pz_Security object (also autoloads it if not already loaded).</description>
          <long-description/>
          <tag line="494" name="access" description="public"/>
          <tag line="494" name="return" description="" type="null|\Pz_Security">
            <type by_reference="false">null</type>
            <type by_reference="false">\Pz_Security</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="516" package="Default">
        <name>pzHttpRequest</name>
        <full_name>pzHttpRequest</full_name>
        <docblock line="510">
          <description>Returns the Pz_Http_Request object (also autoloads it if not already loaded).</description>
          <long-description/>
          <tag line="510" name="access" description="public"/>
          <tag line="510" name="return" description="" type="null|\Pz_Http_Request">
            <type by_reference="false">null</type>
            <type by_reference="false">\Pz_Http_Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="532" package="Default">
        <name>pzHttpResponse</name>
        <full_name>pzHttpResponse</full_name>
        <docblock line="526">
          <description>Returns the Pz_Http_Response object (also autoloads it if not already loaded).</description>
          <long-description/>
          <tag line="526" name="access" description="public"/>
          <tag line="526" name="return" description="" type="null|\Pz_Http_Response">
            <type by_reference="false">null</type>
            <type by_reference="false">\Pz_Http_Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="549" package="Default">
        <name>getLoggerObject</name>
        <full_name>getLoggerObject</full_name>
        <docblock line="542">
          <description>Returns the logger object for a specified subpackage.</description>
          <long-description/>
          <tag line="542" name="access" description="public"/>
          <tag line="542" name="param" description="" type="string" variable="$which">
            <type by_reference="false">string</type>
          </tag>
          <tag line="542" name="return" description="" type="null|\_pzLoggerObjectMysql|\_pzLoggerObjectMysqli|\_pzLoggerObjectMemcache|\_pzLoggerObjectMemcached">
            <type by_reference="false">null</type>
            <type by_reference="false">\_pzLoggerObjectMysql</type>
            <type by_reference="false">\_pzLoggerObjectMysqli</type>
            <type by_reference="false">\_pzLoggerObjectMemcache</type>
            <type by_reference="false">\_pzLoggerObjectMemcached</type>
          </tag>
        </docblock>
        <argument line="549">
          <name>$which</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="561" package="Default">
        <name>addToLog</name>
        <full_name>addToLog</full_name>
        <docblock line="554">
          <description>Adds a custom log entry to a specified log file (via a logger object).</description>
          <long-description/>
          <tag line="554" name="access" description="public"/>
          <tag line="554" name="param" description="" type="\Pz_Logger" variable="$logObject">
            <type by_reference="false">\Pz_Logger</type>
          </tag>
          <tag line="554" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="561">
          <name>$logObject</name>
          <default/>
          <type/>
        </argument>
        <argument line="561">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="576" package="Default">
        <name>debugger</name>
        <full_name>debugger</full_name>
        <docblock line="569">
          <description>Executes a method inside the debugger object (if it exists).</description>
          <long-description/>
          <tag line="569" name="access" description="public"/>
          <tag line="569" name="param" description="" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="569" name="param" description="" type="array" variable="$param">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="576">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="576">
          <name>$param</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="599" package="Default">
        <name>compressOutput</name>
        <full_name>compressOutput</full_name>
        <docblock line="584">
          <description>Method that compresses buffered output (started with ob_start()).</description>
          <long-description>&lt;p&gt;HTML code is compressed to one line, with whitespaces removed.&lt;/p&gt;

&lt;p&gt;Sections of the html can be ignored from compression using:&lt;/p&gt;

&lt;p&gt;&lt;!--compress-html--&gt;&lt;!--compress-html no compression--&gt;
...HTML and code that wont be compressed goes here...
&lt;!--compress-html--&gt;&lt;/p&gt;

&lt;p&gt;When compressing output, make sure not to use unclosed comments in inline javascript and css  (i.e. //comment here... )&lt;/p&gt;</long-description>
          <tag line="584" name="access" description="public"/>
          <tag line="584" name="param" description="" type="string" variable="$buffer">
            <type by_reference="false">string</type>
          </tag>
          <tag line="584" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="599">
          <name>$buffer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="646" package="Default">
        <name>disconnectAllMysqliServers</name>
        <full_name>disconnectAllMysqliServers</full_name>
        <docblock line="638">
          <description>Disconnects all registered Mysql servers (using Mysqli).</description>
          <long-description>&lt;p&gt;You have the option to not have them unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="638" name="access" description="public"/>
          <tag line="638" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="646">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="675" package="Default">
        <name>disconnectMysqliServer</name>
        <full_name>disconnectMysqliServer</full_name>
        <docblock line="664">
          <description>Disconnects a particular mysql server (using Mysqli).</description>
          <long-description>&lt;p&gt;If a specific id is not given, the current active mysqli server object will be disconnected.&lt;/p&gt;

&lt;p&gt;You have the option to not have it unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="664" name="access" description="public"/>
          <tag line="664" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="664" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="675">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="675">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="715" package="Default">
        <name>addMysqliServer</name>
        <full_name>addMysqliServer</full_name>
        <docblock line="699">
          <description>Registers a mysql server with Pz (using Mysqli).</description>
          <long-description>&lt;p&gt;By default, the mysql server is not connected to until you send a specific command to it (like a query).&lt;/p&gt;

&lt;p&gt;This method handles everything that is needed to register a mysql server object with Pz (using Mysqli).&lt;/p&gt;</long-description>
          <tag line="699" name="access" description="public"/>
          <tag line="699" name="param" description="" type="string" variable="$dbUser">
            <type by_reference="false">string</type>
          </tag>
          <tag line="699" name="param" description="" type="string" variable="$dbPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="699" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="699" name="param" description="" type="string" variable="$dbHost">
            <type by_reference="false">string</type>
          </tag>
          <tag line="699" name="param" description="" type="int" variable="$dbPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="699" name="param" description="" type="bool" variable="$preventAutoAssign">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="699" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="715">
          <name>$dbUser</name>
          <default/>
          <type/>
        </argument>
        <argument line="715">
          <name>$dbPassword</name>
          <default/>
          <type/>
        </argument>
        <argument line="715">
          <name>$dbName</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="715">
          <name>$dbHost</name>
          <default>'localhost'</default>
          <type/>
        </argument>
        <argument line="715">
          <name>$dbPort</name>
          <default>3306</default>
          <type/>
        </argument>
        <argument line="715">
          <name>$preventAutoAssign</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="747" package="Default">
        <name>removeMysqliServer</name>
        <full_name>removeMysqliServer</full_name>
        <docblock line="736">
          <description>Unregisters a mysql server object with Pz (using Mysqli).</description>
          <long-description>&lt;p&gt;If no specific server is specified, the active server object will be used.&lt;/p&gt;

&lt;p&gt;This method will disconnect from the server automatically.&lt;/p&gt;</long-description>
          <tag line="736" name="access" description="public"/>
          <tag line="736" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="736" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="747">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="779" package="Default">
        <name>mysqliConnect</name>
        <full_name>mysqliConnect</full_name>
        <docblock line="771">
          <description>Connects to the mysql server (using Mysqli).</description>
          <long-description/>
          <tag line="771" name="access" description="public"/>
          <tag line="771" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="771" name="param" description="" type="bool" variable="$setAsActive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="771" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="779">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="779">
          <name>$setAsActive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="816" package="Default">
        <name>setActiveMysqliServerId</name>
        <full_name>setActiveMysqliServerId</full_name>
        <docblock line="806">
          <description>Sets the active mysql server id (using Mysqli).</description>
          <long-description>&lt;p&gt;By default, this method will not auto connect to the mysql server.&lt;/p&gt;</long-description>
          <tag line="806" name="access" description="public"/>
          <tag line="806" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="806" name="param" description="" type="bool" variable="$autoConnect">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="806" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="816">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="816">
          <name>$autoConnect</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="842" package="Default">
        <name>getActiveMysqliServerId</name>
        <full_name>getActiveMysqliServerId</full_name>
        <docblock line="836">
          <description>Returns the current active mysql server id (using Mysqli).</description>
          <long-description/>
          <tag line="836" name="access" description="public"/>
          <tag line="836" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="856" package="Default">
        <name>mysqliActiveObject</name>
        <full_name>mysqliActiveObject</full_name>
        <docblock line="847">
          <description>Returns the current active mysql server object (using Mysqli).</description>
          <long-description>&lt;p&gt;If an id is specified, then the specified mysler server object will be returned instead.&lt;/p&gt;</long-description>
          <tag line="847" name="access" description="public"/>
          <tag line="847" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="847" name="return" description="" type="bool|\Pz_Mysqli_Server">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Mysqli_Server</type>
          </tag>
        </docblock>
        <argument line="856">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="869" package="Default">
        <name>mysqliInteract</name>
        <full_name>mysqliInteract</full_name>
        <docblock line="863">
          <description>Returns the interaction object for mysqli.</description>
          <long-description/>
          <tag line="863" name="access" description="public"/>
          <tag line="863" name="return" description="" type="bool|\Pz_Mysqli_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Mysqli_Interactions</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="883" package="Default">
        <name>decideActiveMySqliId</name>
        <full_name>decideActiveMySqliId</full_name>
        <docblock line="874">
          <description>Resolves the proper mysql server object id based on input.</description>
          <long-description>&lt;p&gt;If the input id is -1, then the active id is returned, else, the id is returned.&lt;/p&gt;</long-description>
          <tag line="874" name="access" description="public"/>
          <tag line="874" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="874" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="883">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="896" package="Default">
        <name>disconnectAllMysqlServers</name>
        <full_name>disconnectAllMysqlServers</full_name>
        <docblock line="888">
          <description>Disconnects all registered Mysql servers (using Mysql).</description>
          <long-description>&lt;p&gt;You have the option to not have them unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="888" name="access" description="public"/>
          <tag line="888" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="896">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="925" package="Default">
        <name>disconnectMysqlServer</name>
        <full_name>disconnectMysqlServer</full_name>
        <docblock line="914">
          <description>Disconnects a particular mysql server (using Mysql).</description>
          <long-description>&lt;p&gt;If a specific id is not given, the current active mysqli server object will be disconnected.&lt;/p&gt;

&lt;p&gt;You have the option to not have it unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="914" name="access" description="public"/>
          <tag line="914" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="914" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="925">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="925">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="965" package="Default">
        <name>addMysqlServer</name>
        <full_name>addMysqlServer</full_name>
        <docblock line="949">
          <description>Registers a mysql server with Pz (using Mysql).</description>
          <long-description>&lt;p&gt;By default, the mysql server is not connected to until you send a specific command to it (like a query).&lt;/p&gt;

&lt;p&gt;This method handles everything that is needed to register a mysql server object with Pz (using Mysql).&lt;/p&gt;</long-description>
          <tag line="949" name="access" description="public"/>
          <tag line="949" name="param" description="" type="string" variable="$dbUser">
            <type by_reference="false">string</type>
          </tag>
          <tag line="949" name="param" description="" type="string" variable="$dbPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="949" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="949" name="param" description="" type="string" variable="$dbHost">
            <type by_reference="false">string</type>
          </tag>
          <tag line="949" name="param" description="" type="int" variable="$dbPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="949" name="param" description="" type="bool" variable="$preventAutoAssign">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="949" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="965">
          <name>$dbUser</name>
          <default/>
          <type/>
        </argument>
        <argument line="965">
          <name>$dbPassword</name>
          <default/>
          <type/>
        </argument>
        <argument line="965">
          <name>$dbName</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="965">
          <name>$dbHost</name>
          <default>'localhost'</default>
          <type/>
        </argument>
        <argument line="965">
          <name>$dbPort</name>
          <default>3306</default>
          <type/>
        </argument>
        <argument line="965">
          <name>$preventAutoAssign</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="997" package="Default">
        <name>removeMysqlServer</name>
        <full_name>removeMysqlServer</full_name>
        <docblock line="986">
          <description>Unregisters a mysql server object with Pz (using Mysql).</description>
          <long-description>&lt;p&gt;If no specific server is specified, the active server object will be used.&lt;/p&gt;

&lt;p&gt;This method will disconnect from the server automatically.&lt;/p&gt;</long-description>
          <tag line="986" name="access" description="public"/>
          <tag line="986" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="986" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="997">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1029" package="Default">
        <name>mysqlConnect</name>
        <full_name>mysqlConnect</full_name>
        <docblock line="1021">
          <description>Connects to the mysql server (using Mysql).</description>
          <long-description/>
          <tag line="1021" name="access" description="public"/>
          <tag line="1021" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1021" name="param" description="" type="bool" variable="$setAsActive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1021" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1029">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1029">
          <name>$setAsActive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1066" package="Default">
        <name>setActiveMysqlServerId</name>
        <full_name>setActiveMysqlServerId</full_name>
        <docblock line="1056">
          <description>Sets the active mysql server id (using Mysql).</description>
          <long-description>&lt;p&gt;By default, this method will not auto connect to the mysql server.&lt;/p&gt;</long-description>
          <tag line="1056" name="access" description="public"/>
          <tag line="1056" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1056" name="param" description="" type="bool" variable="$autoConnect">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1056" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1066">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1066">
          <name>$autoConnect</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1092" package="Default">
        <name>getActiveMysqlServerId</name>
        <full_name>getActiveMysqlServerId</full_name>
        <docblock line="1086">
          <description>Returns the current active mysql server id (using Mysql).</description>
          <long-description/>
          <tag line="1086" name="access" description="public"/>
          <tag line="1086" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1106" package="Default">
        <name>mysqlActiveObject</name>
        <full_name>mysqlActiveObject</full_name>
        <docblock line="1097">
          <description>Returns the current active mysql server object (using Mysql).</description>
          <long-description>&lt;p&gt;If an id is specified, then the specified mysql server object will be returned instead.&lt;/p&gt;</long-description>
          <tag line="1097" name="access" description="public"/>
          <tag line="1097" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1097" name="return" description="" type="bool|\Pz_Mysql_Server">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Mysql_Server</type>
          </tag>
        </docblock>
        <argument line="1106">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1119" package="Default">
        <name>mysqlInteract</name>
        <full_name>mysqlInteract</full_name>
        <docblock line="1113">
          <description>Returns the interaction object for mysql.</description>
          <long-description/>
          <tag line="1113" name="access" description="public"/>
          <tag line="1113" name="return" description="" type="bool|\Pz_Mysql_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Mysql_Interactions</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1133" package="Default">
        <name>decideActiveMySqlId</name>
        <full_name>decideActiveMySqlId</full_name>
        <docblock line="1124">
          <description>Resolves the proper mysql server object id based on input.</description>
          <long-description>&lt;p&gt;If the input id is -1, then the active id is returned, else, the id is returned.&lt;/p&gt;</long-description>
          <tag line="1124" name="access" description="public"/>
          <tag line="1124" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1124" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1133">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1146" package="Default">
        <name>disconnectAllPDOServers</name>
        <full_name>disconnectAllPDOServers</full_name>
        <docblock line="1138">
          <description>Disconnects all registered database servers (using PDO).</description>
          <long-description>&lt;p&gt;You have the option to not have them unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="1138" name="access" description="public"/>
          <tag line="1138" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1146">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1175" package="Default">
        <name>disconnectPDOServer</name>
        <full_name>disconnectPDOServer</full_name>
        <docblock line="1164">
          <description>Disconnects a particular database server (using PDO).</description>
          <long-description>&lt;p&gt;If a specific id is not given, the current active PDO server object will be disconnected.&lt;/p&gt;

&lt;p&gt;You have the option to not have it unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="1164" name="access" description="public"/>
          <tag line="1164" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1164" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1175">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1175">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1220" package="Default">
        <name>addPDOServer</name>
        <full_name>addPDOServer</full_name>
        <docblock line="1199">
          <description>Registers a database server with Pz (using PDO).</description>
          <long-description>&lt;p&gt;By default, the database server is not connected to until you send a specific command to it (like a query).&lt;/p&gt;

&lt;p&gt;This method handles everything that is needed to register a database server object with Pz (using PDO).&lt;/p&gt;</long-description>
          <tag line="1199" name="access" description="public"/>
          <tag line="1199" name="param" description="" type="string" variable="$dbUser">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="string" variable="$dbPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="string" variable="$dbType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="string" variable="$dbHost">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="int" variable="$dbPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1199" name="param" description="" type="array" variable="$dbDriverOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1199" name="param" description="" type="string" variable="$server">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="string" variable="$protocol">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="string" variable="$socket">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1199" name="param" description="" type="bool" variable="$preventAutoAssign">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1199" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1220">
          <name>$dbUser</name>
          <default/>
          <type/>
        </argument>
        <argument line="1220">
          <name>$dbPassword</name>
          <default/>
          <type/>
        </argument>
        <argument line="1220">
          <name>$dbType</name>
          <default/>
          <type/>
        </argument>
        <argument line="1220">
          <name>$dbName</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="1220">
          <name>$dbHost</name>
          <default>'localhost'</default>
          <type/>
        </argument>
        <argument line="1220">
          <name>$dbPort</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="1220">
          <name>$dbDriverOptions</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="1220">
          <name>$server</name>
          <default/>
          <type/>
        </argument>
        <argument line="1220">
          <name>$protocol</name>
          <default/>
          <type/>
        </argument>
        <argument line="1220">
          <name>$socket</name>
          <default/>
          <type/>
        </argument>
        <argument line="1220">
          <name>$preventAutoAssign</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1252" package="Default">
        <name>removePDOServer</name>
        <full_name>removePDOServer</full_name>
        <docblock line="1241">
          <description>Unregisters a database server object with Pz (using PDO).</description>
          <long-description>&lt;p&gt;If no specific server is specified, the active server object will be used.&lt;/p&gt;

&lt;p&gt;This method will disconnect from the server automatically.&lt;/p&gt;</long-description>
          <tag line="1241" name="access" description="public"/>
          <tag line="1241" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1241" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1252">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1284" package="Default">
        <name>pdoConnect</name>
        <full_name>pdoConnect</full_name>
        <docblock line="1276">
          <description>Connects to the database server (using PDO).</description>
          <long-description/>
          <tag line="1276" name="access" description="public"/>
          <tag line="1276" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1276" name="param" description="" type="bool" variable="$setAsActive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1276" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1284">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1284">
          <name>$setAsActive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1321" package="Default">
        <name>setActivePDOServerId</name>
        <full_name>setActivePDOServerId</full_name>
        <docblock line="1311">
          <description>Sets the active database server id (using PDO).</description>
          <long-description>&lt;p&gt;By default, this method will not auto connect to the database server.&lt;/p&gt;</long-description>
          <tag line="1311" name="access" description="public"/>
          <tag line="1311" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1311" name="param" description="" type="bool" variable="$autoConnect">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1311" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1321">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1321">
          <name>$autoConnect</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1347" package="Default">
        <name>getActivePDOServerId</name>
        <full_name>getActivePDOServerId</full_name>
        <docblock line="1341">
          <description>Returns the current active database server id (using PDO).</description>
          <long-description/>
          <tag line="1341" name="access" description="public"/>
          <tag line="1341" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1361" package="Default">
        <name>pdoActiveObject</name>
        <full_name>pdoActiveObject</full_name>
        <docblock line="1352">
          <description>Returns the current active database server object (using PDO).</description>
          <long-description>&lt;p&gt;If an id is specified, then the specified database server object will be returned instead.&lt;/p&gt;</long-description>
          <tag line="1352" name="access" description="public"/>
          <tag line="1352" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1352" name="return" description="" type="bool|\Pz_PDO_Server">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_PDO_Server</type>
          </tag>
        </docblock>
        <argument line="1361">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1374" package="Default">
        <name>pdoInteract</name>
        <full_name>pdoInteract</full_name>
        <docblock line="1368">
          <description>Returns the interaction object for the PDO.</description>
          <long-description/>
          <tag line="1368" name="access" description="public"/>
          <tag line="1368" name="return" description="" type="bool|\Pz_PDO_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_PDO_Interactions</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1388" package="Default">
        <name>decideActivePDOId</name>
        <full_name>decideActivePDOId</full_name>
        <docblock line="1379">
          <description>Resolves the proper database server object id based on input.</description>
          <long-description>&lt;p&gt;If the input id is -1, then the active id is returned, else, the id is returned.&lt;/p&gt;</long-description>
          <tag line="1379" name="access" description="public"/>
          <tag line="1379" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1379" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1388">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1401" package="Default">
        <name>disconnectAllMemcachedServers</name>
        <full_name>disconnectAllMemcachedServers</full_name>
        <docblock line="1393">
          <description>Disconnects all registered Memcache servers (using Memcached).</description>
          <long-description>&lt;p&gt;You have the option to not have them unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="1393" name="access" description="public"/>
          <tag line="1393" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1401">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1427" package="Default">
        <name>disconnectAllMemcacheServers</name>
        <full_name>disconnectAllMemcacheServers</full_name>
        <docblock line="1419">
          <description>Disconnects all registered Memcache servers (using Memcache).</description>
          <long-description>&lt;p&gt;You have the option to not have them unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="1419" name="access" description="public"/>
          <tag line="1419" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1427">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1456" package="Default">
        <name>disconnectMemcachedServer</name>
        <full_name>disconnectMemcachedServer</full_name>
        <docblock line="1445">
          <description>Disconnects a particular memcache server (using Memcached).</description>
          <long-description>&lt;p&gt;If a specific id is not given, the current active memcache server object will be disconnected.&lt;/p&gt;

&lt;p&gt;You have the option to not have it unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="1445" name="access" description="public"/>
          <tag line="1445" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1445" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1456">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1456">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1489" package="Default">
        <name>disconnectMemcacheServer</name>
        <full_name>disconnectMemcacheServer</full_name>
        <docblock line="1478">
          <description>Disconnects a particular memcache server (using Memcache).</description>
          <long-description>&lt;p&gt;If a specific id is not given, the current active memcache server object will be disconnected.&lt;/p&gt;

&lt;p&gt;You have the option to not have it unregistered with Pz after being disconnected.&lt;/p&gt;</long-description>
          <tag line="1478" name="access" description="public"/>
          <tag line="1478" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1478" name="param" description="" type="bool" variable="$removeAlso">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1489">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1489">
          <name>$removeAlso</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1523" package="Default">
        <name>addMemcachedServer</name>
        <full_name>addMemcachedServer</full_name>
        <docblock line="1511">
          <description>Registers a memcache server with Pz (using Memcached).</description>
          <long-description>&lt;p&gt;By default, the memcache server is not connected to until you send a specific command to it (like a query).&lt;/p&gt;

&lt;p&gt;This method handles everything that is needed to register a memcache server with Pz (using Memcached).&lt;/p&gt;</long-description>
          <tag line="1511" name="access" description="public"/>
          <tag line="1511" name="param" description="" type="string" variable="$mcIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1511" name="param" description="" type="string|int" variable="$mcPort">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="1511" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1523">
          <name>$mcIp</name>
          <default/>
          <type/>
        </argument>
        <argument line="1523">
          <name>$mcPort</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1556" package="Default">
        <name>addMemcacheServer</name>
        <full_name>addMemcacheServer</full_name>
        <docblock line="1544">
          <description>Registers a memcache server with Pz (using Memcache).</description>
          <long-description>&lt;p&gt;By default, the memcache server is not connected to until you send a specific command to it (like a query).&lt;/p&gt;

&lt;p&gt;This method handles everything that is needed to register a memcache server with Pz (using Memcache).&lt;/p&gt;</long-description>
          <tag line="1544" name="access" description="public"/>
          <tag line="1544" name="param" description="" type="string" variable="$mcIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1544" name="param" description="" type="string|int" variable="$mcPort">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="1544" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="1556">
          <name>$mcIp</name>
          <default/>
          <type/>
        </argument>
        <argument line="1556">
          <name>$mcPort</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1588" package="Default">
        <name>removeMemcachedServer</name>
        <full_name>removeMemcachedServer</full_name>
        <docblock line="1577">
          <description>Unregisters a memcache server with Pz (using Memcached).</description>
          <long-description>&lt;p&gt;If no specific server is specified, the active server object will be used.&lt;/p&gt;

&lt;p&gt;This method will disconnect from the server automatically.&lt;/p&gt;</long-description>
          <tag line="1577" name="access" description="public"/>
          <tag line="1577" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1577" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1588">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1622" package="Default">
        <name>removeMemcacheServer</name>
        <full_name>removeMemcacheServer</full_name>
        <docblock line="1611">
          <description>Unregisters a memcache server with Pz (using Memcache).</description>
          <long-description>&lt;p&gt;If no specific server is specified, the active server object will be used.&lt;/p&gt;

&lt;p&gt;This method will disconnect from the server automatically.&lt;/p&gt;</long-description>
          <tag line="1611" name="access" description="public"/>
          <tag line="1611" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1611" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1622">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1653" package="Default">
        <name>memcachedConnect</name>
        <full_name>memcachedConnect</full_name>
        <docblock line="1645">
          <description>Connects to the memcache server (using Memcached).</description>
          <long-description/>
          <tag line="1645" name="access" description="public"/>
          <tag line="1645" name="param" description="" type="int" variable="$servierId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1645" name="param" description="" type="bool" variable="$setAsActive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1645" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1653">
          <name>$servierId</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1653">
          <name>$setAsActive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1696" package="Default">
        <name>memcacheConnect</name>
        <full_name>memcacheConnect</full_name>
        <docblock line="1688">
          <description>Connects to the memcache server (using Memcache).</description>
          <long-description/>
          <tag line="1688" name="access" description="public"/>
          <tag line="1688" name="param" description="" type="int" variable="$servierId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1688" name="param" description="" type="bool" variable="$setAsActive">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1688" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1696">
          <name>$servierId</name>
          <default>-1</default>
          <type/>
        </argument>
        <argument line="1696">
          <name>$setAsActive</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1741" package="Default">
        <name>setActiveMemcachedServerId</name>
        <full_name>setActiveMemcachedServerId</full_name>
        <docblock line="1731">
          <description>Sets the active memcache server id (using Memcached).</description>
          <long-description>&lt;p&gt;By default, this method will not auto connect to the memcache server.&lt;/p&gt;</long-description>
          <tag line="1731" name="access" description="public"/>
          <tag line="1731" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1731" name="param" description="" type="bool" variable="$autoConnect">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1731" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1741">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="1741">
          <name>$autoConnect</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1770" package="Default">
        <name>setActiveMemcacheServerId</name>
        <full_name>setActiveMemcacheServerId</full_name>
        <docblock line="1760">
          <description>Sets the active memcache server id (using Memcache).</description>
          <long-description>&lt;p&gt;By default, this method will not auto connect to the memcache server.&lt;/p&gt;</long-description>
          <tag line="1760" name="access" description="public"/>
          <tag line="1760" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1760" name="param" description="" type="bool" variable="$autoConnect">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="1760" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="1770">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="1770">
          <name>$autoConnect</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1795" package="Default">
        <name>getActiveMemcachedServerId</name>
        <full_name>getActiveMemcachedServerId</full_name>
        <docblock line="1789">
          <description>Returns the current active memcache server id (using Memcached).</description>
          <long-description/>
          <tag line="1789" name="access" description="public"/>
          <tag line="1789" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1806" package="Default">
        <name>getActiveMemcacheServerId</name>
        <full_name>getActiveMemcacheServerId</full_name>
        <docblock line="1800">
          <description>Returns the current active memcache server id (using Memcache).</description>
          <long-description/>
          <tag line="1800" name="access" description="public"/>
          <tag line="1800" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1817" package="Default">
        <name>memcachedInteract</name>
        <full_name>memcachedInteract</full_name>
        <docblock line="1811">
          <description>Returns the interaction object for memcached.</description>
          <long-description/>
          <tag line="1811" name="access" description="public"/>
          <tag line="1811" name="return" description="" type="bool|\Pz_Memcached_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Memcached_Interactions</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1828" package="Default">
        <name>memcacheInteract</name>
        <full_name>memcacheInteract</full_name>
        <docblock line="1822">
          <description>Returns the interaction object for memcache.</description>
          <long-description/>
          <tag line="1822" name="access" description="public"/>
          <tag line="1822" name="return" description="" type="bool|\Pz_Memcache_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Memcache_Interactions</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1842" package="Default">
        <name>decideActiveMemcachedId</name>
        <full_name>decideActiveMemcachedId</full_name>
        <docblock line="1833">
          <description>Resolves the proper memcached server object id based on input.</description>
          <long-description>&lt;p&gt;If the input id is -1, then the active id is returned, else, the id is returned.&lt;/p&gt;</long-description>
          <tag line="1833" name="access" description="public"/>
          <tag line="1833" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1833" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1842">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1856" package="Default">
        <name>decideActiveMemcacheId</name>
        <full_name>decideActiveMemcacheId</full_name>
        <docblock line="1847">
          <description>Resolves the proper memcache server object id based on input.</description>
          <long-description>&lt;p&gt;If the input id is -1, then the active id is returned, else, the id is returned.&lt;/p&gt;</long-description>
          <tag line="1847" name="access" description="public"/>
          <tag line="1847" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1847" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="1856">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1870" package="Default">
        <name>memcachedActiveObject</name>
        <full_name>memcachedActiveObject</full_name>
        <docblock line="1861">
          <description>Returns the current active memcache server object (using Memcached).</description>
          <long-description>&lt;p&gt;If an id is specified, then the specified mysler server object will be returned instead.&lt;/p&gt;</long-description>
          <tag line="1861" name="access" description="public"/>
          <tag line="1861" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1861" name="return" description="" type="bool|\Pz_Memcached_Server">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Memcached_Server</type>
          </tag>
        </docblock>
        <argument line="1870">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1886" package="Default">
        <name>memcacheActiveObject</name>
        <full_name>memcacheActiveObject</full_name>
        <docblock line="1877">
          <description>Returns the current active memcache server object (using Memcache).</description>
          <long-description>&lt;p&gt;If an id is specified, then the specified mysler server object will be returned instead.&lt;/p&gt;</long-description>
          <tag line="1877" name="access" description="public"/>
          <tag line="1877" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="1877" name="return" description="" type="bool|\Pz_Memcache_Server">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_Memcache_Server</type>
          </tag>
        </docblock>
        <argument line="1886">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1899" package="Default">
        <name>apcInteract</name>
        <full_name>apcInteract</full_name>
        <docblock line="1893">
          <description>Returns the interaction object for APC.</description>
          <long-description/>
          <tag line="1893" name="access" description="public"/>
          <tag line="1893" name="return" description="" type="bool|\Pz_APC_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_APC_Interactions</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1912" package="Default">
        <name>shmInteract</name>
        <full_name>shmInteract</full_name>
        <docblock line="1906">
          <description>Returns the interaction object for Shared Memory.</description>
          <long-description/>
          <tag line="1906" name="access" description="public"/>
          <tag line="1906" name="return" description="" type="bool|\Pz_SHM_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_SHM_Interactions</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="1925" package="Default">
        <name>lcInteract</name>
        <full_name>lcInteract</full_name>
        <docblock line="1919">
          <description>Returns the interaction object for Local Cache.</description>
          <long-description/>
          <tag line="1919" name="access" description="public"/>
          <tag line="1919" name="return" description="" type="bool|\Pz_LocalCache_Interactions">
            <type by_reference="false">bool</type>
            <type by_reference="false">\Pz_LocalCache_Interactions</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Abstract/Generic.php" hash="0c8d1fd9857027d2b5a46ccd1204f2f0" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="true" abstract="true" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Abstract_Generic</name>
      <full_name>\Pz_Abstract_Generic</full_name>
      <docblock line="13">
        <description>This abstract class allows classes to share commonalities between each other.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="24" namespace="global" package="Default">
        <name>$_pzCoreObject</name>
        <default>NULL</default>
        <docblock line="18">
          <description>Stores an instance of Pz_Core.</description>
          <long-description/>
          <tag line="18" name="access" description="protected"/>
          <tag line="18" name="var" description="" type="null|\Pz_Core">
            <type by_reference="false">null</type>
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Calls the init() method.</description>
          <long-description/>
          <tag line="26" name="param" description="" type="\Pz_Core" variable="$PzCore">
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
        <argument line="31">
          <name>$PzCore</name>
          <default/>
          <type>\Pz_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="36">
          <description>The init method sets the Pz_Core object.</description>
          <long-description/>
          <tag line="36" name="access" description="public"/>
          <tag line="36" name="param" description="" type="\Pz_Core" variable="$PzCore">
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$PzCore</name>
          <default/>
          <type>\Pz_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Default">
        <name>pzCore</name>
        <full_name>pzCore</full_name>
        <docblock line="47">
          <description>Returns the Pz_Core instance.</description>
          <long-description/>
          <tag line="47" name="access" description="public"/>
          <tag line="47" name="return" description="" type="null|\Pz_Core">
            <type by_reference="false">null</type>
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Abstract/StaticGeneric.php" hash="ef7bcdd5443215a148f6c206c95ea817" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="true" abstract="true" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Abstract_StaticGeneric</name>
      <full_name>\Pz_Abstract_StaticGeneric</full_name>
      <docblock line="13">
        <description>This abstract class allows static classes to share commonalities between each other.</description>
        <long-description/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="25" namespace="global" package="Default">
        <name>$_pzCoreObject</name>
        <default>NULL</default>
        <docblock line="18">
          <description>Stores an instance of Pz_Core.</description>
          <long-description/>
          <tag line="18" name="static" description=""/>
          <tag line="18" name="access" description="protected"/>
          <tag line="18" name="var" description="" type="null|\Pz_Core">
            <type by_reference="false">null</type>
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="34" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="27">
          <description>The init method sets the Pz_Core object.</description>
          <long-description/>
          <tag line="27" name="static" description=""/>
          <tag line="27" name="access" description="public"/>
          <tag line="27" name="param" description="" type="\Pz_Core" variable="$PzCore">
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$PzCore</name>
          <default/>
          <type>\Pz_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="46" package="Default">
        <name>pzCore</name>
        <full_name>pzCore</full_name>
        <docblock line="39">
          <description>Returns the Pz_Core instance.</description>
          <long-description/>
          <tag line="39" name="static" description=""/>
          <tag line="39" name="access" description="public"/>
          <tag line="39" name="return" description="" type="null|\Pz_Core">
            <type by_reference="false">null</type>
            <type by_reference="false">\Pz_Core</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Mysqli/Interactions.php" hash="7edf25d4375c28c0c696bb6b41ddb45e" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_Mysqli_Interactions</name>
      <full_name>\Pz_Mysqli_Interactions</full_name>
      <docblock line="13">
        <description>The interaction class for communicating with mysql using mysqli.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="18">
          <description>Expects to handle read related queries.</description>
          <long-description/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="return" description="" type="bool|\mysqli_result">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="65">
          <description>Expects to handle write related query.</description>
          <long-description/>
          <tag line="65" name="access" description="public"/>
          <tag line="65" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="return" description="" type="bool|\mysqli_result">
            <type by_reference="false">bool</type>
            <type by_reference="false">\mysqli_result</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="73">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
        <docblock line="196">
          <description>Returns the affected rows of the last delete/insert/update/etc.</description>
          <long-description>&lt;p&gt;.. query.&lt;/p&gt;</long-description>
          <tag line="196" name="access" description="public"/>
          <tag line="196" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="196" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
        <docblock line="210">
          <description>Returns the last insert id of the last insert query.</description>
          <long-description/>
          <tag line="210" name="access" description="public"/>
          <tag line="210" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="210" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Default">
        <name>selectDatabase</name>
        <full_name>selectDatabase</full_name>
        <docblock line="224">
          <description>Select a new database for the current connection.</description>
          <long-description/>
          <tag line="224" name="access" description="public"/>
          <tag line="224" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="224" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="224" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
        <argument line="232">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="249" package="Default">
        <name>changeUser</name>
        <full_name>changeUser</full_name>
        <docblock line="239">
          <description>Change the user for the current connection.</description>
          <long-description/>
          <tag line="239" name="access" description="public"/>
          <tag line="239" name="param" description="" type="string" variable="$user">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="" type="null|string" variable="$dbName">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="239" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="249">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="249">
          <name>$dbName</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="249">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="267" package="Default">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="256">
          <description>Sanitize a value that will be injected into a query string.</description>
          <long-description/>
          <tag line="256" name="access" description="public"/>
          <tag line="256" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="256" name="param" description="" type="bool" variable="$mustBeNumeric">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="256" name="param" description="" type="int" variable="$decimalPlaces">
            <type by_reference="false">int</type>
          </tag>
          <tag line="256" name="param" description="" type="int" variable="$cleanall">
            <type by_reference="false">int</type>
          </tag>
          <tag line="256" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="256" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="267">
          <name>$mustBeNumeric</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$decimalPlaces</name>
          <default>2</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$cleanall</name>
          <default>\Pz_Security::CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Mysqli/Server.php" hash="f138f801ee3682d23ada164ac125621d" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="true" abstract="true" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Mysqli_Server</name>
      <full_name>\Pz_Mysqli_Server</full_name>
      <docblock line="13">
        <description>Class is used for storing mysql connection information using mysqli.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>CONNECTED</name>
        <full_name>CONNECTED</full_name>
        <value>1</value>
        <docblock line="18">
          <description>Status constant when the connection is established.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>DISCONNECTED</name>
        <full_name>DISCONNECTED</full_name>
        <value>2</value>
        <docblock line="25">
          <description>Status constant when the connection is disconnected.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>CONNECTING</name>
        <full_name>CONNECTING</full_name>
        <value>3</value>
        <docblock line="32">
          <description>Status constant when the connection is connecting.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$_user</name>
        <default>''</default>
        <docblock line="39">
          <description>The username that will access the mysql server.</description>
          <long-description/>
          <tag line="39" name="access" description="private"/>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="global" package="Default">
        <name>$_password</name>
        <default>''</default>
        <docblock line="47">
          <description>The password that will access the mysql server.</description>
          <long-description/>
          <tag line="47" name="access" description="private"/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$_host</name>
        <default>''</default>
        <docblock line="55">
          <description>The host that the mysql server is on.</description>
          <long-description/>
          <tag line="55" name="access" description="private"/>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" namespace="global" package="Default">
        <name>$_dbName</name>
        <default>''</default>
        <docblock line="63">
          <description>The default database to connect to.</description>
          <long-description/>
          <tag line="63" name="access" description="private"/>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="77" namespace="global" package="Default">
        <name>$_port</name>
        <default>0</default>
        <docblock line="71">
          <description>The port that the mysql server is on.</description>
          <long-description/>
          <tag line="71" name="access" description="private"/>
          <tag line="71" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="85" namespace="global" package="Default">
        <name>$_connectRetryAttempts</name>
        <default>0</default>
        <docblock line="79">
          <description>The amount of times Pz should try to reconnect to the mysql server.</description>
          <long-description/>
          <tag line="79" name="access" description="private"/>
          <tag line="79" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="93" namespace="global" package="Default">
        <name>$_connectRetryDelay</name>
        <default>0</default>
        <docblock line="87">
          <description>The amount of seconds to wait between connection retry attempts.</description>
          <long-description/>
          <tag line="87" name="access" description="private"/>
          <tag line="87" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$_status</name>
        <default>self::DISCONNECTED</default>
        <docblock line="95">
          <description>The current connection status.</description>
          <long-description/>
          <tag line="95" name="access" description="private"/>
          <tag line="95" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="109" namespace="global" package="Default">
        <name>$_mysqli_obj</name>
        <default>NULL</default>
        <docblock line="103">
          <description>The final mysqli object.</description>
          <long-description/>
          <tag line="103" name="access" description="private"/>
          <tag line="103" name="var" description="" type="null|\mysqli">
            <type by_reference="false">null</type>
            <type by_reference="false">\mysqli</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="111">
          <description>The constructor handles setting the mysql server credentials.</description>
          <long-description/>
          <tag line="111" name="access" description="private"/>
          <tag line="111" name="param" description="" type="string" variable="$dbUser">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$dbPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$dbHost">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="int" variable="$dbPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="111" name="param" description="" type="int" variable="$connectRetries">
            <type by_reference="false">int</type>
          </tag>
          <tag line="111" name="param" description="" type="int" variable="$connectRetryWait">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$dbUser</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbPassword</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbHost</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbPort</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$connectRetries</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$connectRetryWait</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="134">
          <description>Attempts to connect to the mysql server.</description>
          <long-description/>
          <tag line="134" name="access" description="public"/>
          <tag line="134" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="197" package="Default">
        <name>disconnect</name>
        <full_name>disconnect</full_name>
        <docblock line="192">
          <description>Disconnects from the mysql server.</description>
          <long-description/>
          <tag line="192" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="215" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="209">
          <description>Returns true or false if the mysql server connection went through and is active.</description>
          <long-description/>
          <tag line="209" name="access" description="public"/>
          <tag line="209" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="226" package="Default">
        <name>returnMysqliObj</name>
        <full_name>returnMysqliObj</full_name>
        <docblock line="220">
          <description>Returns the active mysqli object.</description>
          <long-description/>
          <tag line="220" name="access" description="public"/>
          <tag line="220" name="return" description="" type="\mysqli|null">
            <type by_reference="false">\mysqli</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
        <docblock line="231">
          <description>Returns the last insert id.</description>
          <long-description/>
          <tag line="231" name="access" description="public"/>
          <tag line="231" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
        <docblock line="242">
          <description>Returns the affected rows from the last query.</description>
          <long-description/>
          <tag line="242" name="access" description="public"/>
          <tag line="242" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="260" package="Default">
        <name>selectDatabase</name>
        <full_name>selectDatabase</full_name>
        <docblock line="253">
          <description>Select a new database;</description>
          <long-description/>
          <tag line="253" name="access" description="public"/>
          <tag line="253" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="283" package="Default">
        <name>changeUser</name>
        <full_name>changeUser</full_name>
        <docblock line="274">
          <description>Change the current user.</description>
          <long-description/>
          <tag line="274" name="access" description="public"/>
          <tag line="274" name="param" description="" type="string" variable="$user">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="param" description="" type="null|string" variable="$dbName">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="283">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="283">
          <name>$dbName</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/ClassAutoloader.php" hash="5048387f60e20356677276a0bf4b12f6" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <include line="40" type="Include" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_ClassAutoloader</name>
      <full_name>\Pz_ClassAutoloader</full_name>
      <docblock line="13">
        <description>The Pz Library Auto Loader class</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="18">
          <description>Registers the class auto loader using spl_autoload_register method (recommended by PHP)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="33" package="Default">
        <name>loader</name>
        <full_name>loader</full_name>
        <docblock line="26">
          <description>Takes in the class name, and constructs the path to the class file using PEAR naming conventions.</description>
          <long-description/>
          <tag line="26" name="access" description="private"/>
          <tag line="26" name="param" description="" type="\global\" variable="$className"/>
          <tag line="26" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/APC/Interactions.php" hash="ec8cda3c920199f76ca6570950d2012a" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_APC_Interactions</name>
      <full_name>\Pz_APC_Interactions</full_name>
      <docblock line="13">
        <description>This class allows you to interact with APC.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="18">
          <description>Writes a value to the cache.</description>
          <long-description/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$expires">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$deleteLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$replaceOnExist">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="18" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$expires</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="29">
          <name>$deleteLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="29">
          <name>$replaceOnExist</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="69">
          <description>Reads a value from the cache.</description>
          <long-description/>
          <tag line="69" name="access" description="public"/>
          <tag line="69" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="69" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="77">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="96">
          <description>Deletes a value from the cache.</description>
          <long-description/>
          <tag line="96" name="access" description="public"/>
          <tag line="96" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="96" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="104">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/SHM/Interactions.php" hash="92d86e68c3b8591b4e980f1c24360f8b" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_SHM_Interactions</name>
      <full_name>\Pz_SHM_Interactions</full_name>
      <docblock line="13">
        <description>This class allows you to interact with the shared memory cache.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="25" package="Default">
        <name>_shmKeyToHex</name>
        <full_name>_shmKeyToHex</full_name>
        <docblock line="18">
          <description>Converts key to a valid hex value (for proper storage with shmop).</description>
          <long-description/>
          <tag line="18" name="access" description="private"/>
          <tag line="18" name="param" description="" type="string" variable="$keyname">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="25">
          <name>$keyname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="37" package="Default">
        <name>_shmValueToString</name>
        <full_name>_shmValueToString</full_name>
        <docblock line="30">
          <description>Converts a value to be stored to a string, or a serialized string.</description>
          <long-description/>
          <tag line="30" name="access" description="private"/>
          <tag line="30" name="param" description="" type="\global\" variable="$value"/>
          <tag line="30" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="56" package="Default">
        <name>_shmStringToValue</name>
        <full_name>_shmStringToValue</full_name>
        <docblock line="49">
          <description>Returns a stringback to its original type.</description>
          <long-description/>
          <tag line="49" name="access" description="private"/>
          <tag line="49" name="param" description="" type="\global\" variable="$value"/>
          <tag line="49" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="70">
          <description>Writes a value to the cache.</description>
          <long-description/>
          <tag line="70" name="access" description="public"/>
          <tag line="70" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="70" name="param" description="" type="bool" variable="$deleteLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="70" name="param" description="" type="bool" variable="$deleteOnExist">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="70" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$deleteLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="80">
          <name>$deleteOnExist</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="133">
          <description>Reads a value from the cache.</description>
          <long-description/>
          <tag line="133" name="access" description="public"/>
          <tag line="133" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="133" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="133" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="175">
          <description>Deletes a value from the cache.</description>
          <long-description/>
          <tag line="175" name="qccess" description="public"/>
          <tag line="175" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="175" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="175" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/LocalCache/Interactions.php" hash="a8301cd971ba322916d2abca5c17bebd" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_LocalCache_Interactions</name>
      <full_name>\Pz_LocalCache_Interactions</full_name>
      <docblock line="13">
        <description>Interaction class for dealing with the local cache system.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="global" package="Default">
        <name>$_localCache</name>
        <default>array()</default>
        <docblock line="18">
          <description>The key / value pairs are stored in a simple array.</description>
          <long-description/>
          <tag line="18" name="access" description="private"/>
          <tag line="18" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="26">
          <description>Writes a value to the cache.</description>
          <long-description/>
          <tag line="26" name="access" description="public"/>
          <tag line="26" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="26" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="26" name="param" description="" type="bool" variable="$deleteOnExist">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="26" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="35">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="35">
          <name>$deleteOnExist</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="51">
          <description>Gets a value from the cache.</description>
          <long-description/>
          <tag line="51" name="access" description="public"/>
          <tag line="51" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="72">
          <description>Deletes a value from the cache.</description>
          <long-description/>
          <tag line="72" name="access" description="public"/>
          <tag line="72" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Security.php" hash="ff7c30d440b3587a415c69cdda6e90df" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Crypt</extends>
      <name>Pz_Security</name>
      <full_name>\Pz_Security</full_name>
      <docblock line="13">
        <description>This class extends Pz_Crypt, and adds some functions that allow you to santize queries and user input.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</name>
        <full_name>CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</full_name>
        <value>0</value>
        <docblock line="18">
          <description>Clean everything (javascript tags, styling tags, comments, html tags, convert all &lt;,&gt; to html entities).</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>CLEAN_HTML_JS_STYLE_COMMENTS</name>
        <full_name>CLEAN_HTML_JS_STYLE_COMMENTS</full_name>
        <value>1</value>
        <docblock line="25">
          <description>Clean everything (javascript tags, styling tags, comments, html tags).</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>CLEAN_JS_STYLE_COMMENTS</name>
        <full_name>CLEAN_JS_STYLE_COMMENTS</full_name>
        <value>2</value>
        <docblock line="32">
          <description>Clean almost everything (javascript tags, styling tags, comments).</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="44" package="Default">
        <name>CLEAN_STYLE_COMMENTS</name>
        <full_name>CLEAN_STYLE_COMMENTS</full_name>
        <value>3</value>
        <docblock line="39">
          <description>Clean some things (styling tags, comments).</description>
          <long-description/>
          <tag line="39" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="51" package="Default">
        <name>CLEAN_NOTHING</name>
        <full_name>CLEAN_NOTHING</full_name>
        <value>false</value>
        <docblock line="46">
          <description>Don't clean anything.</description>
          <long-description/>
          <tag line="46" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="Default">
        <name>cleanHTML</name>
        <full_name>cleanHTML</full_name>
        <docblock line="53">
          <description>Method cleans various HTML related elements from a string.</description>
          <long-description>&lt;p&gt;The type of elements cleaned depends on the $cleanall paramter.&lt;/p&gt;</long-description>
          <tag line="53" name="access" description="public"/>
          <tag line="53" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="" type="int" variable="$cleanall">
            <type by_reference="false">int</type>
          </tag>
          <tag line="53" name="return" description="" type="mixed|string">
            <type by_reference="false">mixed</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$cleanall</name>
          <default>self::CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="Default">
        <name>cleanQuery</name>
        <full_name>cleanQuery</full_name>
        <docblock line="113">
          <description>Function that sanitizes a given query string.</description>
          <long-description>&lt;p&gt;Do not pass an entire query string to this function, only the individual varaibles that make up the string should be passed.&lt;/p&gt;</long-description>
          <tag line="113" name="access" description="public"/>
          <tag line="113" name="param" description="" type="\mysqli|resource|null" variable="$dbLinkRes">
            <type by_reference="false">\mysqli</type>
            <type by_reference="false">resource</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="113" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="113" name="param" description="" type="bool" variable="$mustBeNumeric">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="113" name="param" description="" type="int" variable="$decimalPlaces">
            <type by_reference="false">int</type>
          </tag>
          <tag line="113" name="param" description="" type="int" variable="$cleanall">
            <type by_reference="false">int</type>
          </tag>
          <tag line="113" name="return" description="" type="array|float|int|mixed|string">
            <type by_reference="false">array</type>
            <type by_reference="false">float</type>
            <type by_reference="false">int</type>
            <type by_reference="false">mixed</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$dbLinkRes</name>
          <default/>
          <type/>
        </argument>
        <argument line="125">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="125">
          <name>$mustBeNumeric</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="125">
          <name>$decimalPlaces</name>
          <default>2</default>
          <type/>
        </argument>
        <argument line="125">
          <name>$cleanall</name>
          <default>self::CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Logger.php" hash="85f8cd16c5e935e39675cb8208ebe162" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Logger</name>
      <full_name>\Pz_Logger</full_name>
      <docblock line="13">
        <description>The logger class allows you to log messages to a log file.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="23" namespace="global" package="Default">
        <name>$_logsDir</name>
        <default>''</default>
        <docblock line="18">
          <description>The directory where log files are stored.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="30" namespace="global" package="Default">
        <name>$_logFileName</name>
        <default>''</default>
        <docblock line="25">
          <description>The log file name for this logger instance.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Default">
        <name>$_fullLogFileName</name>
        <default>''</default>
        <docblock line="32">
          <description>Combined log directory and log file name.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$_autoRotate</name>
        <default>true</default>
        <docblock line="39">
          <description>Whether log files should rotated or not.</description>
          <long-description/>
          <tag line="39" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="51" namespace="global" package="Default">
        <name>$_deleteLogsAfterXDays</name>
        <default>7</default>
        <docblock line="46">
          <description>Log files older than x days will be deleted on start-up.</description>
          <long-description/>
          <tag line="46" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="53">
          <description>Sets the defaults for the logger instance.</description>
          <long-description/>
          <tag line="53" name="param" description="" type="string" variable="$logsDir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="" type="string" variable="$logFileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="" type="bool" variable="$autoRotate">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="53" name="param" description="" type="int" variable="$deleteLogsAfterXDays">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$logsDir</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="61">
          <name>$logFileName</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="61">
          <name>$autoRotate</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="61">
          <name>$deleteLogsAfterXDays</name>
          <default>7</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="76" package="Default">
        <name>_warmupLogs</name>
        <full_name>_warmupLogs</full_name>
        <docblock line="71">
          <description>Makes sure the log dir exists, and rotates if necessary.</description>
          <long-description/>
          <tag line="71" name="access" description="private"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Default">
        <name>addToLog</name>
        <full_name>addToLog</full_name>
        <docblock line="126">
          <description>Adds a new line to the bottom of the log file.</description>
          <long-description/>
          <tag line="126" name="access" description="public"/>
          <tag line="126" name="param" description="" type="string" variable="$lineStr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$lineStr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="Default">
        <name>clearLog</name>
        <full_name>clearLog</full_name>
        <docblock line="138">
          <description>Clears the log file.</description>
          <long-description/>
          <tag line="138" name="access" description="public"/>
          <tag line="138" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Mysql/Interactions.php" hash="476080be368cd5bb4fb8a42d380f537a" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_Mysql_Interactions</name>
      <full_name>\Pz_Mysql_Interactions</full_name>
      <docblock line="13">
        <description>The interaction class for communicating with mysql using mysql.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="18">
          <description>Expects to handle read related queries.</description>
          <long-description/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="return" description="" type="bool|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="65">
          <description>Expects to handle write related query.</description>
          <long-description/>
          <tag line="65" name="access" description="public"/>
          <tag line="65" name="param" description="" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="65" name="return" description="" type="bool|resource">
            <type by_reference="false">bool</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$query</name>
          <default/>
          <type/>
        </argument>
        <argument line="73">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
        <docblock line="196">
          <description>Returns the affected rows of the last delete/insert/update/etc.</description>
          <long-description>&lt;p&gt;.. query.&lt;/p&gt;</long-description>
          <tag line="196" name="access" description="public"/>
          <tag line="196" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="196" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
        <docblock line="210">
          <description>Returns the last insert id of the last insert query.</description>
          <long-description/>
          <tag line="210" name="access" description="public"/>
          <tag line="210" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="210" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Default">
        <name>selectDatabase</name>
        <full_name>selectDatabase</full_name>
        <docblock line="224">
          <description>Select a new database for the current connection.</description>
          <long-description/>
          <tag line="224" name="access" description="public"/>
          <tag line="224" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="224" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="224" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
        <argument line="232">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="249" package="Default">
        <name>changeUser</name>
        <full_name>changeUser</full_name>
        <docblock line="239">
          <description>Change the user for the current connection.</description>
          <long-description/>
          <tag line="239" name="access" description="public"/>
          <tag line="239" name="param" description="" type="string" variable="$user">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="" type="null|string" variable="$dbName">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="239" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="249">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="249">
          <name>$dbName</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="249">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="267" package="Default">
        <name>sanitize</name>
        <full_name>sanitize</full_name>
        <docblock line="256">
          <description>Sanitize a value that will be injected into a query string.</description>
          <long-description/>
          <tag line="256" name="access" description="public"/>
          <tag line="256" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="256" name="param" description="" type="bool" variable="$mustBeNumeric">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="256" name="param" description="" type="int" variable="$decimalPlaces">
            <type by_reference="false">int</type>
          </tag>
          <tag line="256" name="param" description="" type="int" variable="$cleanall">
            <type by_reference="false">int</type>
          </tag>
          <tag line="256" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="256" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="267">
          <name>$mustBeNumeric</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$decimalPlaces</name>
          <default>2</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$cleanall</name>
          <default>\Pz_Security::CLEAN_HTML_JS_STYLE_COMMENTS_HTMLENTITIES</default>
          <type/>
        </argument>
        <argument line="267">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Mysql/Server.php" hash="a27c3a7451b53844fe37fb301f628c26" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="true" abstract="true" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Mysql_Server</name>
      <full_name>\Pz_Mysql_Server</full_name>
      <docblock line="13">
        <description>Class is used for storing mysql connection information using mysql.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>CONNECTED</name>
        <full_name>CONNECTED</full_name>
        <value>1</value>
        <docblock line="18">
          <description>Status constant when the connection is established.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>DISCONNECTED</name>
        <full_name>DISCONNECTED</full_name>
        <value>2</value>
        <docblock line="25">
          <description>Status constant when the connection is disconnected.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>CONNECTING</name>
        <full_name>CONNECTING</full_name>
        <value>3</value>
        <docblock line="32">
          <description>Status constant when the connection is connecting.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$_user</name>
        <default>''</default>
        <docblock line="39">
          <description>The username that will access the mysql server.</description>
          <long-description/>
          <tag line="39" name="access" description="private"/>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="global" package="Default">
        <name>$_password</name>
        <default>''</default>
        <docblock line="47">
          <description>The password that will access the mysql server.</description>
          <long-description/>
          <tag line="47" name="access" description="private"/>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$_host</name>
        <default>''</default>
        <docblock line="55">
          <description>The host that the mysql server is on.</description>
          <long-description/>
          <tag line="55" name="access" description="private"/>
          <tag line="55" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" namespace="global" package="Default">
        <name>$_dbName</name>
        <default>''</default>
        <docblock line="63">
          <description>The default database to connect to.</description>
          <long-description/>
          <tag line="63" name="access" description="private"/>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="77" namespace="global" package="Default">
        <name>$_port</name>
        <default>0</default>
        <docblock line="71">
          <description>The port that the mysql server is on.</description>
          <long-description/>
          <tag line="71" name="access" description="private"/>
          <tag line="71" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="85" namespace="global" package="Default">
        <name>$_connectRetryAttempts</name>
        <default>0</default>
        <docblock line="79">
          <description>The amount of times Pz should try to reconnect to the mysql server.</description>
          <long-description/>
          <tag line="79" name="access" description="private"/>
          <tag line="79" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="93" namespace="global" package="Default">
        <name>$_connectRetryDelay</name>
        <default>0</default>
        <docblock line="87">
          <description>The amount of seconds to wait between connection retry attempts.</description>
          <long-description/>
          <tag line="87" name="access" description="private"/>
          <tag line="87" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$_status</name>
        <default>self::DISCONNECTED</default>
        <docblock line="95">
          <description>The current connection status.</description>
          <long-description/>
          <tag line="95" name="access" description="private"/>
          <tag line="95" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="109" namespace="global" package="Default">
        <name>$_mysql_res</name>
        <default>NULL</default>
        <docblock line="103">
          <description>The final mysql object.</description>
          <long-description/>
          <tag line="103" name="access" description="private"/>
          <tag line="103" name="var" description="" type="null|resource">
            <type by_reference="false">null</type>
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="123" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="111">
          <description>The constructor handles setting the mysql server credentials.</description>
          <long-description/>
          <tag line="111" name="access" description="private"/>
          <tag line="111" name="param" description="" type="string" variable="$dbUser">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$dbPassword">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="string" variable="$dbHost">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="" type="int" variable="$dbPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="111" name="param" description="" type="int" variable="$connectRetries">
            <type by_reference="false">int</type>
          </tag>
          <tag line="111" name="param" description="" type="int" variable="$connectRetryWait">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$dbUser</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbPassword</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbHost</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$dbPort</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$connectRetries</name>
          <default/>
          <type/>
        </argument>
        <argument line="123">
          <name>$connectRetryWait</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="134">
          <description>Attempts to connect to the mysql server.</description>
          <long-description/>
          <tag line="134" name="access" description="public"/>
          <tag line="134" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>disconnect</name>
        <full_name>disconnect</full_name>
        <docblock line="196">
          <description>Disconnects from the mysql server.</description>
          <long-description/>
          <tag line="196" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="219" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="213">
          <description>Returns true or false if the mysql server connection went through and is active.</description>
          <long-description/>
          <tag line="213" name="access" description="public"/>
          <tag line="213" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="230" package="Default">
        <name>returnMysqlRes</name>
        <full_name>returnMysqlRes</full_name>
        <docblock line="224">
          <description>Returns the active mysql resource.</description>
          <long-description/>
          <tag line="224" name="access" description="public"/>
          <tag line="224" name="return" description="" type="resource|null">
            <type by_reference="false">resource</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="241" package="Default">
        <name>insertId</name>
        <full_name>insertId</full_name>
        <docblock line="235">
          <description>Returns the last insert id.</description>
          <long-description/>
          <tag line="235" name="access" description="public"/>
          <tag line="235" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="252" package="Default">
        <name>affectedRows</name>
        <full_name>affectedRows</full_name>
        <docblock line="246">
          <description>Returns the affected rows from the last query.</description>
          <long-description/>
          <tag line="246" name="access" description="public"/>
          <tag line="246" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="264" package="Default">
        <name>selectDatabase</name>
        <full_name>selectDatabase</full_name>
        <docblock line="257">
          <description>Select a new database;</description>
          <long-description/>
          <tag line="257" name="access" description="public"/>
          <tag line="257" name="param" description="" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="257" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$dbName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="Default">
        <name>changeUser</name>
        <full_name>changeUser</full_name>
        <docblock line="278">
          <description>Change the current user.</description>
          <long-description>&lt;p&gt;Since the mysql module does not support this directly, Pz will disconnect the current connection, and reconnect using the new username and password.&lt;/p&gt;</long-description>
          <tag line="278" name="access" description="public"/>
          <tag line="278" name="param" description="" type="string" variable="$user">
            <type by_reference="false">string</type>
          </tag>
          <tag line="278" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="278" name="param" description="" type="null|string" variable="$dbName">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="278" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="289">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
        <argument line="289">
          <name>$dbName</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Memcached/Interactions.php" hash="c3df163a27ee788797698bd82b1ee61d" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends>\Pz_Abstract_Generic</extends>
      <name>Pz_Memcached_Interactions</name>
      <full_name>\Pz_Memcached_Interactions</full_name>
      <docblock line="13">
        <description>Interaction class for dealing with memcache using memcached.</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>write</name>
        <full_name>write</full_name>
        <docblock line="18">
          <description>Writes a value to the cache.</description>
          <long-description/>
          <tag line="18" name="access" description="public"/>
          <tag line="18" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="18" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$expires">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$deleteLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="18" name="param" description="" type="bool" variable="$checkFirst">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="18" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="18" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$expires</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="30">
          <name>$deleteLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="30">
          <name>$checkFirst</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="30">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>read</name>
        <full_name>read</full_name>
        <docblock line="100">
          <description>Reads a value from the cache.</description>
          <long-description/>
          <tag line="100" name="access" description="public"/>
          <tag line="100" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="100" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="100" name="return" description="" type="bool|mixed">
            <type by_reference="false">bool</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="109">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="109">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="154" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="145">
          <description>Deletes a value from the cache.</description>
          <long-description/>
          <tag line="145" name="access" description="public"/>
          <tag line="145" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="param" description="" type="bool" variable="$checkLock">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="145" name="param" description="" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="145" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="154">
          <name>$checkLock</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="154">
          <name>$id</name>
          <default>-1</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Pz/Memcached/Server.php" hash="a6abd88d6b9e7db550685641d30e9891" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="true" abstract="true" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Memcached_Server</name>
      <full_name>\Pz_Memcached_Server</full_name>
      <docblock line="13">
        <description>Class that stores and controls access to a memcache server (using memcached).</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>CONNECTED</name>
        <full_name>CONNECTED</full_name>
        <value>1</value>
        <docblock line="18">
          <description>Status constant when connection has been established to memcache.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>DISCONNECTED</name>
        <full_name>DISCONNECTED</full_name>
        <value>2</value>
        <docblock line="25">
          <description>Status constant when there is no connection to the memcache server.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>CONNECTING</name>
        <full_name>CONNECTING</full_name>
        <value>3</value>
        <docblock line="32">
          <description>Status constant when connecting to the memcache server.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="45" namespace="global" package="Default">
        <name>$_ip</name>
        <default>''</default>
        <docblock line="39">
          <description>The IP of the target memcache server.</description>
          <long-description/>
          <tag line="39" name="access" description="private"/>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="global" package="Default">
        <name>$_port</name>
        <default>0</default>
        <docblock line="47">
          <description>The port of the target memcache server.</description>
          <long-description/>
          <tag line="47" name="access" description="private"/>
          <tag line="47" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$_connectRetryAttempts</name>
        <default>0</default>
        <docblock line="55">
          <description>The amount of times Pz should try to reconnect to memcache on failure.</description>
          <long-description/>
          <tag line="55" name="access" description="private"/>
          <tag line="55" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" namespace="global" package="Default">
        <name>$_connectRetryDelay</name>
        <default>0</default>
        <docblock line="63">
          <description>The time in seconds to wait between retry attempts.</description>
          <long-description/>
          <tag line="63" name="access" description="private"/>
          <tag line="63" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="77" namespace="global" package="Default">
        <name>$_status</name>
        <default>self::DISCONNECTED</default>
        <docblock line="71">
          <description>The current connection status.</description>
          <long-description/>
          <tag line="71" name="access" description="private"/>
          <tag line="71" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="85" namespace="global" package="Default">
        <name>$_memcached_obj</name>
        <default>NULL</default>
        <docblock line="79">
          <description>The current active memcached object.</description>
          <long-description/>
          <tag line="79" name="access" description="private"/>
          <tag line="79" name="var" description="" type="null|\memcached">
            <type by_reference="false">null</type>
            <type by_reference="false">\memcached</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="87">
          <description>The constructor handles setting the default settings.</description>
          <long-description/>
          <tag line="87" name="param" description="" type="string" variable="$mcIp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="param" description="" type="int" variable="$mcPort">
            <type by_reference="false">int</type>
          </tag>
          <tag line="87" name="param" description="" type="int" variable="$connectRetries">
            <type by_reference="false">int</type>
          </tag>
          <tag line="87" name="param" description="" type="int" variable="$connectRetryWait">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$mcIp</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$mcPort</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$connectRetries</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$connectRetryWait</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="103">
          <description>Attempts to connect to the memcache server.</description>
          <long-description/>
          <tag line="103" name="access" description="public"/>
          <tag line="103" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="Default">
        <name>disconnect</name>
        <full_name>disconnect</full_name>
        <docblock line="164">
          <description>Disconnect the memcache server.</description>
          <long-description/>
          <tag line="164" name="access" description="public"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="Default">
        <name>isConnected</name>
        <full_name>isConnected</full_name>
        <docblock line="179">
          <description>Returns true or false depending on if the memcache server has been connected to.</description>
          <long-description/>
          <tag line="179" name="access" description="public"/>
          <tag line="179" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="Default">
        <name>returnMemcachedObj</name>
        <full_name>returnMemcachedObj</full_name>
        <docblock line="190">
          <description>Return the current active memcached object.</description>
          <long-description/>
          <tag line="190" name="access" description="public"/>
          <tag line="190" name="return" description="" type="null|\memcached">
            <type by_reference="false">null</type>
            <type by_reference="false">\memcached</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Pz/Crypt.php" hash="eea440235c44c493a15aa82b9633dc6d" package="Pz Library">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
      <tag line="2" name="package" description="Pz Library"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="Default">
      <extends/>
      <name>Pz_Crypt</name>
      <full_name>\Pz_Crypt</full_name>
      <docblock line="13">
        <description>The Pz Crypt class implements strong hashing and encryption methods to help protect sensitive information.</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="23" package="Default">
        <name>TWO_WAY</name>
        <full_name>TWO_WAY</full_name>
        <value>3</value>
        <docblock line="18">
          <description>Flag for two-way encryption.</description>
          <long-description/>
          <tag line="18" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="30" package="Default">
        <name>ONE_WAY</name>
        <full_name>ONE_WAY</full_name>
        <value>4</value>
        <docblock line="25">
          <description>Flag for one-way encryption.</description>
          <long-description/>
          <tag line="25" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="Default">
        <name>STRICT</name>
        <full_name>STRICT</full_name>
        <value>5</value>
        <docblock line="32">
          <description>Flag for strict hashing/encryption.</description>
          <long-description/>
          <tag line="32" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="44" package="Default">
        <name>HASH</name>
        <full_name>HASH</full_name>
        <value>6</value>
        <docblock line="39">
          <description>Custom rules flag array key for override hash.</description>
          <long-description/>
          <tag line="39" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="51" package="Default">
        <name>SALT</name>
        <full_name>SALT</full_name>
        <value>7</value>
        <docblock line="46">
          <description>Custom rules flag array key for override salt.</description>
          <long-description/>
          <tag line="46" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="58" package="Default">
        <name>POISON_CONSTRAINTS</name>
        <full_name>POISON_CONSTRAINTS</full_name>
        <value>8</value>
        <docblock line="53">
          <description>Custom rules flag array key for override poison constraints.</description>
          <long-description/>
          <tag line="53" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="65" package="Default">
        <name>UNIQUE_SALT</name>
        <full_name>UNIQUE_SALT</full_name>
        <value>9</value>
        <docblock line="60">
          <description>Custom rules flag array key for override unique salt.</description>
          <long-description/>
          <tag line="60" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="72" package="Default">
        <name>DE_POISON</name>
        <full_name>DE_POISON</full_name>
        <value>10</value>
        <docblock line="67">
          <description>Flag to indicate encrypted string is poisoned.</description>
          <long-description/>
          <tag line="67" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="82" namespace="global" package="Default">
        <name>$_passPhrase</name>
        <default>'seeYouInShell'</default>
        <docblock line="74">
          <description>This passphrase is required when generating or verifying environment info.</description>
          <long-description>&lt;p&gt;Using a passphrase means it wont be possible for somoene to call the public function from another program, without direct access to the source of this class&lt;/p&gt;</long-description>
          <tag line="74" name="access" description="private"/>
          <tag line="74" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="90" namespace="global" package="Default">
        <name>$_kSaltDepth</name>
        <default>1024</default>
        <docblock line="84">
          <description>How many times should the default/custom salt be hashed by the default hashing algorithm.</description>
          <long-description/>
          <tag line="84" name="access" description="private"/>
          <tag line="84" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="98" namespace="global" package="Default">
        <name>$_kHash</name>
        <default>'md5'</default>
        <docblock line="92">
          <description>Must exist in hash_algos() array.</description>
          <long-description/>
          <tag line="92" name="access" description="private"/>
          <tag line="92" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="106" namespace="global" package="Default">
        <name>$_kSalt</name>
        <default>'B^M#@^|&gt;2x =&lt;7r)t%M%y@X]8mK3b+9:e86.*6;|diL#&amp;^|o$Ovu#K*Y&gt;q!a&lt;.r]_d#'</default>
        <docblock line="100">
          <description>It is recommended you change this salt as to distinguish yourself from other Pz_Crypt installations/hashes</description>
          <long-description/>
          <tag line="100" name="access" description="private"/>
          <tag line="100" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="122" namespace="global" package="Default">
        <name>$_kPoisonConstraints</name>
        <default>array(array(1, 2), array(10, 2), array(15, 2), array(25, 2), array(35, 1), array(50, 1), array(70, 1), array(90, 2), array(150, 1), array(300, 2), array(600, 1), array(1000, 2), array(10000, 3), array(100000, 1), array(1000000, 3))</default>
        <docblock line="108">
          <description>Poison constraints are used when poisoning a hashed or encrypted string.</description>
          <long-description>&lt;p&gt;Poisoning greatly increases the difficulty for crackers to find the original protected string.&lt;/p&gt;

&lt;p&gt;Every sub-array has two elements:
- the first element dictates at which point in the string will the poisoning begin
- the second element dictates how long the poison will be (all in characters)&lt;/p&gt;

&lt;p&gt;It is good to provide constraints for long strings as well, even if you know you wont be feeding Pz_Crypt long strings.&lt;/p&gt;</long-description>
          <tag line="108" name="access" description="private"/>
          <tag line="108" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="146" namespace="global" package="Default">
        <name>$_hashTableFrom</name>
        <default>array(0 =&gt; 'q', 1 =&gt; 'e', 2 =&gt; 'u', 3 =&gt; 't', 4 =&gt; 'd', 5 =&gt; 'w', 6 =&gt; 'n', 7 =&gt; 'v', 8 =&gt; 'r', 9 =&gt; 'h', 10 =&gt; 'o', 11 =&gt; 'm', 12 =&gt; 'j', 13 =&gt; 'l', 14 =&gt; 'i', 15 =&gt; 's', 16 =&gt; 'y', 17 =&gt; 'b', 18 =&gt; 'z', 19 =&gt; 'x', 20 =&gt; 'f', 21 =&gt; 'p', 22 =&gt; 'k', 23 =&gt; 'c', 24 =&gt; 'a', 25 =&gt; 'g', 26 =&gt; 'Q', 27 =&gt; 'C', 28 =&gt; 'Z', 29 =&gt; 'H', 30 =&gt; 'P', 31 =&gt; 'B', 32 =&gt; 'X', 33 =&gt; 'N', 34 =&gt; 'W', 35 =&gt; 'V', 36 =&gt; 'E', 37 =&gt; 'O', 38 =&gt; 'J', 39 =&gt; 'Y', 40 =&gt; 'A', 41 =&gt; 'R', 42 =&gt; 'I', 43 =&gt; 'S', 44 =&gt; 'K', 45 =&gt; 'F', 46 =&gt; 'T', 47 =&gt; 'U', 48 =&gt; 'D', 49 =&gt; 'L', 50 =&gt; 'G', 51 =&gt; 'M', 52 =&gt; '2', 53 =&gt; '6', 54 =&gt; '5', 55 =&gt; '0', 56 =&gt; '9', 57 =&gt; '1', 58 =&gt; '8', 59 =&gt; '3', 60 =&gt; '7', 61 =&gt; '4', 62 =&gt; '`', 63 =&gt; '!', 64 =&gt; '@', 65 =&gt; '#', 66 =&gt; '$', 67 =&gt; '%', 68 =&gt; '^', 69 =&gt; '&amp;', 70 =&gt; '*', 71 =&gt; '(', 72 =&gt; ')', 73 =&gt; '-', 74 =&gt; '_', 75 =&gt; '=', 76 =&gt; '+', 77 =&gt; '[', 78 =&gt; '{', 79 =&gt; ']', 80 =&gt; '}', 81 =&gt; ';', 82 =&gt; ':', 83 =&gt; '\'', 84 =&gt; '"', 85 =&gt; '&lt;', 86 =&gt; '&gt;', 87 =&gt; ',', 88 =&gt; '.', 89 =&gt; '/', 90 =&gt; '?', 91 =&gt; '~', 92 =&gt; '|', 93 =&gt; '\\', 94 =&gt; 'À', 95 =&gt; 'à', 96 =&gt; 'Á', 97 =&gt; 'á', 98 =&gt; 'Â', 99 =&gt; 'â', 100 =&gt; 'Ã', 101 =&gt; 'ã', 102 =&gt; 'Ä', 103 =&gt; 'ä', 104 =&gt; 'Å', 105 =&gt; 'å', 106 =&gt; 'Æ', 107 =&gt; 'æ', 108 =&gt; 'Ç', 109 =&gt; 'ç', 110 =&gt; 'È', 111 =&gt; 'è', 112 =&gt; 'É', 113 =&gt; 'é', 114 =&gt; 'Ê', 115 =&gt; 'ê', 116 =&gt; 'Ë', 117 =&gt; 'ë', 118 =&gt; 'Ì', 119 =&gt; 'ì', 120 =&gt; 'Í', 121 =&gt; 'í', 122 =&gt; 'Î', 123 =&gt; 'î', 124 =&gt; 'Ï', 125 =&gt; 'ï', 126 =&gt; 'µ', 127 =&gt; 'Ñ', 128 =&gt; 'ñ', 129 =&gt; 'Ò', 130 =&gt; 'ò', 131 =&gt; 'Ó', 132 =&gt; 'ó', 133 =&gt; 'Ô', 134 =&gt; 'ô', 135 =&gt; 'Õ', 136 =&gt; 'õ', 137 =&gt; 'Ö', 138 =&gt; 'ö', 139 =&gt; 'Ø', 140 =&gt; 'ø', 141 =&gt; 'ß', 142 =&gt; 'Ù', 143 =&gt; 'ù', 144 =&gt; 'Ú', 145 =&gt; 'ú', 146 =&gt; 'Û', 147 =&gt; 'û', 148 =&gt; 'Ü', 149 =&gt; 'ü', 150 =&gt; 'ÿ', 151 =&gt; '¨', 152 =&gt; '¯', 153 =&gt; '´', 154 =&gt; '¸', 155 =&gt; '¡', 156 =&gt; '¿', 157 =&gt; '·', 158 =&gt; '«', 159 =&gt; '»', 160 =&gt; '¶', 161 =&gt; '§', 162 =&gt; '©', 163 =&gt; '®', 164 =&gt; '÷', 165 =&gt; 'ª', 166 =&gt; 'º', 167 =&gt; '¬', 168 =&gt; '°', 169 =&gt; '±', 170 =&gt; '¤', 171 =&gt; '¢', 172 =&gt; '£', 173 =&gt; '¥', 174 =&gt; ' ', 175 =&gt; 'Ð', 176 =&gt; 'ð', 177 =&gt; 'Þ', 178 =&gt; 'þ', 179 =&gt; 'Ý', 180 =&gt; 'ý', 181 =&gt; '¦', 182 =&gt; '¹', 183 =&gt; '²', 184 =&gt; '³', 185 =&gt; '×', 186 =&gt; '¼', 187 =&gt; '½', 188 =&gt; '¾', 189 =&gt; 'Δ', 190 =&gt; 'ƒ', 191 =&gt; 'Ω', 192 =&gt; 'Œ', 193 =&gt; 'œ', 194 =&gt; 'Š', 195 =&gt; 'š', 196 =&gt; 'Ÿ', 197 =&gt; 'ı', 198 =&gt; 'ˆ', 199 =&gt; 'ˇ', 200 =&gt; '˘', 201 =&gt; '˚', 202 =&gt; '˙', 203 =&gt; '˛', 204 =&gt; '˝', 205 =&gt; '˜', 206 =&gt; '–', 207 =&gt; '—', 208 =&gt; '†', 209 =&gt; '‡', 210 =&gt; '•', 211 =&gt; '…', 212 =&gt; '‘', 213 =&gt; '’', 214 =&gt; '‚', 215 =&gt; '“', 216 =&gt; '”', 217 =&gt; '„', 218 =&gt; '‹', 219 =&gt; '›', 220 =&gt; '™', 221 =&gt; '℠', 222 =&gt; '℗', 223 =&gt; '√', 224 =&gt; '∞', 225 =&gt; '∫', 226 =&gt; '∂', 227 =&gt; '≅', 228 =&gt; '≠', 229 =&gt; '≤', 230 =&gt; '≥', 231 =&gt; 'Σ', 232 =&gt; '‰', 233 =&gt; '⁄', 234 =&gt; '⌘', 235 =&gt; '⌥', 236 =&gt; '☮', 237 =&gt; '☯')</default>
        <docblock line="140">
          <description>This array is used for the source character to be shifted.</description>
          <long-description/>
          <tag line="140" name="access" description="private"/>
          <tag line="140" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="156" namespace="global" package="Default">
        <name>$_hashTableTo</name>
        <default>array(0 =&gt; '1', 1 =&gt; '2', 2 =&gt; '3', 3 =&gt; '4', 4 =&gt; '5', 5 =&gt; '6', 6 =&gt; '7', 7 =&gt; '8', 8 =&gt; '9', 9 =&gt; '0', 10 =&gt; 'a', 11 =&gt; 'b', 12 =&gt; 'c', 13 =&gt; 'd', 14 =&gt; 'e', 15 =&gt; 'f', 16 =&gt; 'g', 17 =&gt; 'h', 18 =&gt; 'i', 19 =&gt; 'j', 20 =&gt; 'k', 21 =&gt; 'l', 22 =&gt; 'm', 23 =&gt; 'n', 24 =&gt; 'o', 25 =&gt; 'p', 26 =&gt; 'q', 27 =&gt; 'r', 28 =&gt; 's', 29 =&gt; 't', 30 =&gt; 'u', 31 =&gt; 'v', 32 =&gt; 'w', 33 =&gt; 'x', 34 =&gt; 'y', 35 =&gt; 'z', 36 =&gt; 'A', 37 =&gt; 'B', 38 =&gt; 'C', 39 =&gt; 'D', 40 =&gt; 'E', 41 =&gt; 'F', 42 =&gt; 'G', 43 =&gt; 'H', 44 =&gt; 'I', 45 =&gt; 'J', 46 =&gt; 'K', 47 =&gt; 'L', 48 =&gt; 'M', 49 =&gt; 'N', 50 =&gt; 'O', 51 =&gt; 'P', 52 =&gt; 'Q', 53 =&gt; 'R', 54 =&gt; 'S', 55 =&gt; 'T', 56 =&gt; 'U', 57 =&gt; 'V', 58 =&gt; 'W', 59 =&gt; 'X', 60 =&gt; 'Y', 61 =&gt; 'Z', 62 =&gt; '\'', 63 =&gt; '`', 64 =&gt; '~', 65 =&gt; '!', 66 =&gt; '@', 67 =&gt; '#', 68 =&gt; '$', 69 =&gt; '%', 70 =&gt; '^', 71 =&gt; '&amp;', 72 =&gt; '*', 73 =&gt; '(', 74 =&gt; ')', 75 =&gt; '-', 76 =&gt; '_', 77 =&gt; '+', 78 =&gt; '=', 79 =&gt; '|', 80 =&gt; '\\', 81 =&gt; '[', 82 =&gt; ']', 83 =&gt; '}', 84 =&gt; '{', 85 =&gt; ';', 86 =&gt; ':', 87 =&gt; '"', 88 =&gt; ',', 89 =&gt; '&lt;', 90 =&gt; '&gt;', 91 =&gt; '.', 92 =&gt; '?', 93 =&gt; '/', 94 =&gt; 'Ë', 95 =&gt; 'ê', 96 =&gt; 'Ê', 97 =&gt; 'é', 98 =&gt; 'É', 99 =&gt; 'è', 100 =&gt; 'È', 101 =&gt; 'ç', 102 =&gt; 'å', 103 =&gt; 'æ', 104 =&gt; 'Æ', 105 =&gt; 'Ç', 106 =&gt; 'Å', 107 =&gt; 'ä', 108 =&gt; 'Ä', 109 =&gt; 'ã', 110 =&gt; 'Ã', 111 =&gt; 'â', 112 =&gt; 'Â', 113 =&gt; 'á', 114 =&gt; 'Á', 115 =&gt; 'à', 116 =&gt; 'À', 117 =&gt; 'í', 118 =&gt; 'Î', 119 =&gt; 'î', 120 =&gt; 'Ï', 121 =&gt; 'ï', 122 =&gt; 'Í', 123 =&gt; 'ì', 124 =&gt; 'Ì', 125 =&gt; 'ë', 126 =&gt; 'ÿ', 127 =&gt; 'ü', 128 =&gt; 'Ü', 129 =&gt; 'û', 130 =&gt; 'Û', 131 =&gt; 'ú', 132 =&gt; 'Ú', 133 =&gt; 'ù', 134 =&gt; 'Ù', 135 =&gt; 'ß', 136 =&gt; 'ø', 137 =&gt; 'Ø', 138 =&gt; 'µ', 139 =&gt; 'Ñ', 140 =&gt; 'ñ', 141 =&gt; 'Ò', 142 =&gt; 'ò', 143 =&gt; 'Ó', 144 =&gt; 'ó', 145 =&gt; 'Ô', 146 =&gt; 'ô', 147 =&gt; 'Õ', 148 =&gt; 'õ', 149 =&gt; 'Ö', 150 =&gt; 'ö', 151 =&gt; '£', 152 =&gt; '¢', 153 =&gt; '¤', 154 =&gt; '±', 155 =&gt; '°', 156 =&gt; '¬', 157 =&gt; 'º', 158 =&gt; 'ª', 159 =&gt; '÷', 160 =&gt; '®', 161 =&gt; '©', 162 =&gt; '§', 163 =&gt; '¶', 164 =&gt; '»', 165 =&gt; '«', 166 =&gt; '·', 167 =&gt; '¿', 168 =&gt; '¡', 169 =&gt; '¸', 170 =&gt; '´', 171 =&gt; '¯', 172 =&gt; '¨', 173 =&gt; 'Ÿ', 174 =&gt; 'š', 175 =&gt; 'Š', 176 =&gt; 'œ', 177 =&gt; 'Œ', 178 =&gt; 'Ω', 179 =&gt; 'ƒ', 180 =&gt; 'Δ', 181 =&gt; '¾', 182 =&gt; '½', 183 =&gt; '¼', 184 =&gt; '×', 185 =&gt; '³', 186 =&gt; '¹', 187 =&gt; '¹', 188 =&gt; '¦', 189 =&gt; 'ý', 190 =&gt; 'Ý', 191 =&gt; 'þ', 192 =&gt; 'Þ', 193 =&gt; 'ð', 194 =&gt; 'Ð', 195 =&gt; ' ', 196 =&gt; '¥', 197 =&gt; '•', 198 =&gt; '‚', 199 =&gt; '℗', 200 =&gt; '℠', 201 =&gt; '™', 202 =&gt; '›', 203 =&gt; '‹', 204 =&gt; '„', 205 =&gt; '”', 206 =&gt; '“', 207 =&gt; '’', 208 =&gt; '‘', 209 =&gt; '…', 210 =&gt; '˘', 211 =&gt; '‡', 212 =&gt; '†', 213 =&gt; '—', 214 =&gt; '–', 215 =&gt; '˜', 216 =&gt; '˝', 217 =&gt; '˛', 218 =&gt; '˙', 219 =&gt; '˚', 220 =&gt; 'ˇ', 221 =&gt; 'ˆ', 222 =&gt; 'ı', 223 =&gt; '☯', 224 =&gt; '☮', 225 =&gt; '⌥', 226 =&gt; '⌘', 227 =&gt; '⁄', 228 =&gt; '‰', 229 =&gt; 'Σ', 230 =&gt; '≅', 231 =&gt; '≤', 232 =&gt; '≠', 233 =&gt; '≥', 234 =&gt; '∂', 235 =&gt; '∫', 236 =&gt; '∞', 237 =&gt; '√')</default>
        <docblock line="150">
          <description>This array is used for the character to replace the original character with.</description>
          <long-description/>
          <tag line="150" name="access" description="private"/>
          <tag line="150" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="Default">
        <name>encrypt</name>
        <full_name>encrypt</full_name>
        <docblock line="160">
          <description>Encrypt allows you to encrypt or hash a string in a one-way or two-way algorithim.</description>
          <long-description>&lt;p&gt;The flags array can hold any of the following (as values):&lt;/p&gt;

&lt;p&gt;TWO_WAY = default flag sent that tells Pz_Crypt to produce a two-way encryped string. Pz_Crypt uses its own hash and algorithim to produce the ecnrypted string.&lt;/p&gt;

&lt;p&gt;ONE_WAY = flag that tells Pz_Crypt to produce a one-way encrypted string. Pz_Crypt uses a special algorithim to encrypt strings&lt;/p&gt;

&lt;p&gt;STRICT = hashes produced in ONE_WAY encryption will honor the $kHash property's length and character type. eg. md5 generates 32 hex char hashes, so Pz_Crypt will honor that&lt;/p&gt;

&lt;p&gt;The custom rules array can hold any of the following (as key =&gt; values):&lt;/p&gt;

&lt;p&gt;HASH =&gt; overwrite the default hash algorithim set by $kHash. Make the the hash is supported by your system/php build&lt;/p&gt;

&lt;p&gt;SALT =&gt; if you want to use a custom salt, then include this rule, if you want to use Pz_Crypt's default salt, then do not include this rule&lt;/p&gt;

&lt;p&gt;POISON_CONSTRAINTS =&gt; If you dont want any poisoning, then provide an empty array. If you want to use Pz_Crypt's default poison constraints, then dont include this rule&lt;/p&gt;

&lt;p&gt;UNIQUE_SALT =&gt; A unique salt that you want to apply to this password. Unique salts make password has reversal much harder, since crackers must figure out which unique salt was used for each password hash.&lt;/p&gt;</long-description>
          <tag line="160" name="access" description="public"/>
          <tag line="160" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="160" name="param" description="" type="array" variable="$flags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="160" name="param" description="" type="array" variable="$customRules">
            <type by_reference="false">array</type>
          </tag>
          <tag line="160" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
        <argument line="188">
          <name>$flags</name>
          <default>array(self::TWO_WAY)</default>
          <type/>
        </argument>
        <argument line="188">
          <name>$customRules</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="315" package="Default">
        <name>decrypt</name>
        <full_name>decrypt</full_name>
        <docblock line="298">
          <description>Decrypt is used for revealing the original encrypted string.</description>
          <long-description>&lt;p&gt;The flags array can hold any of the following (as values):&lt;/p&gt;

&lt;p&gt;DE_POISON = de-poison the string first&lt;/p&gt;

&lt;p&gt;The custom rules array can hold any of the following (as keys =&gt; values):&lt;/p&gt;

&lt;p&gt;POISON_CONSTRAINTS =&gt; use this only if you overwrote the defualt poison constraints during encryption&lt;/p&gt;</long-description>
          <tag line="298" name="access" description="public"/>
          <tag line="298" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="298" name="param" description="" type="array" variable="$flags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="298" name="param" description="" type="array" variable="$customRules">
            <type by_reference="false">array</type>
          </tag>
          <tag line="298" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="315">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
        <argument line="315">
          <name>$flags</name>
          <default>array(self::DE_POISON)</default>
          <type/>
        </argument>
        <argument line="315">
          <name>$customRules</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="365" package="Default">
        <name>compareHashes</name>
        <full_name>compareHashes</full_name>
        <docblock line="349">
          <description>This method compares two strings (one hashed, one unhashed) to see if they are the same.</description>
          <long-description>&lt;p&gt;You can compare both one-way and two-way strings in this way.&lt;/p&gt;

&lt;p&gt;The flags array can hold any of the values that the encrypt() method expects.&lt;/p&gt;

&lt;p&gt;The custom rules array can hold any of the values that the encrypt() method expects.&lt;/p&gt;</long-description>
          <tag line="349" name="access" description="public"/>
          <tag line="349" name="param" description="" type="string" variable="$inputString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="349" name="param" description="" type="string" variable="$comparisonHash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="349" name="param" description="" type="array" variable="$flags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="349" name="param" description="" type="array" variable="$customRules">
            <type by_reference="false">array</type>
          </tag>
          <tag line="349" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="365">
          <name>$inputString</name>
          <default/>
          <type/>
        </argument>
        <argument line="365">
          <name>$comparisonHash</name>
          <default/>
          <type/>
        </argument>
        <argument line="365">
          <name>$flags</name>
          <default>array(self::TWO_WAY)</default>
          <type/>
        </argument>
        <argument line="365">
          <name>$customRules</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="393" package="Default">
        <name>_poisonString</name>
        <full_name>_poisonString</full_name>
        <docblock line="384">
          <description>Poisons a string using the passed-in poison constraints.</description>
          <long-description/>
          <tag line="384" name="access" description="private"/>
          <tag line="384" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="384" name="param" description="" type="array" variable="$constraints">
            <type by_reference="false">array</type>
          </tag>
          <tag line="384" name="param" description="" type="int" variable="$type">
            <type by_reference="false">int</type>
          </tag>
          <tag line="384" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="393">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
        <argument line="393">
          <name>$constraints</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="393">
          <name>$type</name>
          <default>\Pz_Helper_String::HEX</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="420" package="Default">
        <name>_depoisonString</name>
        <full_name>_depoisonString</full_name>
        <docblock line="412">
          <description>De-poisons a string based on the passed-in poison constraints.</description>
          <long-description/>
          <tag line="412" name="access" description="private"/>
          <tag line="412" name="param" description="" type="string" variable="$input">
            <type by_reference="false">string</type>
          </tag>
          <tag line="412" name="param" description="" type="array" variable="$constraints">
            <type by_reference="false">array</type>
          </tag>
          <tag line="412" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="420">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
        <argument line="420">
          <name>$constraints</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="459" package="Default">
        <name>getChecksum</name>
        <full_name>getChecksum</full_name>
        <docblock line="444">
          <description>Will return a string that will include various info about the current setup of this class and relevant php/system settings.</description>
          <long-description>&lt;p&gt;You should use this once you go production, and store the string somewhere safe.&lt;/p&gt;

&lt;p&gt;In the event that you must switch servers, make sure to run that string through the verifyChecksum() method, as to make sure the new system will support all of the encrypted strings you have generated on the previous system.&lt;/p&gt;

&lt;p&gt;NOTE: This verification method cannot take into account custom rules you may have passed in to the encrypt method, so do not soley rely on this method to verify compatibility.&lt;/p&gt;

&lt;p&gt;NOTE: This verification method will not take into account your passphrase.&lt;/p&gt;</long-description>
          <tag line="444" name="access" description="public"/>
          <tag line="444" name="param" description="" type="string" variable="$passPhrase">
            <type by_reference="false">string</type>
          </tag>
          <tag line="444" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="459">
          <name>$passPhrase</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="496" package="Default">
        <name>verifyChecksum</name>
        <full_name>verifyChecksum</full_name>
        <docblock line="488">
          <description>Verifies a checksum with the current server and configuration.</description>
          <long-description/>
          <tag line="488" name="access" description="public"/>
          <tag line="488" name="param" description="" type="string" variable="$checksumString">
            <type by_reference="false">string</type>
          </tag>
          <tag line="488" name="param" description="" type="string" variable="$passPhrase">
            <type by_reference="false">string</type>
          </tag>
          <tag line="488" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$checksumString</name>
          <default/>
          <type/>
        </argument>
        <argument line="496">
          <name>$passPhrase</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="520" package="Default">
        <name>regeneratePzCryptHash</name>
        <full_name>regeneratePzCryptHash</full_name>
        <docblock line="513">
          <description>Will dump a new array to replace the defualt $hashTableFrom array.</description>
          <long-description/>
          <tag line="513" name="access" description="public"/>
          <tag line="513" name="param" description="" type="string" variable="$passPhrase">
            <type by_reference="false">string</type>
          </tag>
          <tag line="513" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="520">
          <name>$passPhrase</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="542" package="Default">
        <name>replacePzCryptHash</name>
        <full_name>replacePzCryptHash</full_name>
        <docblock line="536">
          <description>Replaces the default Pz_Crypt hash.</description>
          <long-description/>
          <tag line="536" name="access" description="public"/>
          <tag line="536" name="param" description="" type="array" variable="$newFromTableHashArray">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="542">
          <name>$newFromTableHashArray</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="554" package="Default">
        <name>regeneratePzCryptSalt</name>
        <full_name>regeneratePzCryptSalt</full_name>
        <docblock line="547">
          <description>Regenerates a new Pz_Crypt salt.</description>
          <long-description/>
          <tag line="547" name="access" description="public"/>
          <tag line="547" name="param" description="" type="string" variable="$passPhrase">
            <type by_reference="false">string</type>
          </tag>
          <tag line="547" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="554">
          <name>$passPhrase</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="570" package="Default">
        <name>replacePzCryptSalt</name>
        <full_name>replacePzCryptSalt</full_name>
        <docblock line="564">
          <description>Replaces the default Pz_Crypt salt.</description>
          <long-description/>
          <tag line="564" name="access" description="public"/>
          <tag line="564" name="param" description="" type="string" variable="$passPhrase">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="570">
          <name>$passPhrase</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="582" package="Default">
        <name>regeneratePzCryptPoisonConstraints</name>
        <full_name>regeneratePzCryptPoisonConstraints</full_name>
        <docblock line="575">
          <description>Regenerates a new array of poison constraints to replace the default array.</description>
          <long-description/>
          <tag line="575" name="access" description="public"/>
          <tag line="575" name="param" description="" type="string" variable="$passPhrase">
            <type by_reference="false">string</type>
          </tag>
          <tag line="575" name="return" description="" type="mixed|string">
            <type by_reference="false">mixed</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="582">
          <name>$passPhrase</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="615" package="Default">
        <name>replacePzCryptPoisonConstraints</name>
        <full_name>replacePzCryptPoisonConstraints</full_name>
        <docblock line="610">
          <description>Replaces the default Pz_Crypt poison constraints.</description>
          <long-description/>
          <tag line="610" name="access" description="public"/>
          <tag line="610" name="param" description="" type="array" variable="$newConstraints">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="615">
          <name>$newConstraints</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="626" package="Default">
        <name>replacePzCryptRehashDepth</name>
        <full_name>replacePzCryptRehashDepth</full_name>
        <docblock line="620">
          <description>Replaces the default Pz_Crypt rehash depth value.</description>
          <long-description/>
          <tag line="620" name="access" description="public"/>
          <tag line="620" name="param" description="" type="int" variable="$newDepth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="626">
          <name>$newDepth</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="bootstrap.php" hash="d20462af48f61ebf80374acf11834b1e" package="Default">
    <docblock line="2">
      <description>Contributions by:
     Fayez Awad
     Yann Madeleine (http://www.yann-madeleine.com)</description>
      <long-description>&lt;p&gt;Licensed under The MIT License
Redistributions of files must retain the above copyright notice, contribtuions, and original author information.&lt;/p&gt;</long-description>
      <tag line="2" name="author" description="Kevork Aghazarian (http://www.kevorkaghazarian.com)"/>
    </docblock>
    <include line="33" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="36" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="19" package="Default">
      <name>PZD_START_MICROTIME</name>
      <full_name>\PZD_START_MICROTIME</full_name>
      <value>microtime(true)</value>
      <docblock line="12">
        <description>The bootstrap is meant for you to include all your important logic.</description>
        <long-description>&lt;p&gt;It can also be used for routing, among other things.&lt;/p&gt;</long-description>
      </docblock>
    </constant>
    <constant namespace="global" line="20" package="Default">
      <name>PZD_START_MEMORY_USE</name>
      <full_name>\PZD_START_MEMORY_USE</full_name>
      <value>memory_get_usage()</value>
    </constant>
    <constant namespace="global" line="21" package="Default">
      <name>PZD_START_MEMORY_USE_REAL</name>
      <full_name>\PZD_START_MEMORY_USE_REAL</full_name>
      <value>memory_get_usage(true)</value>
    </constant>
    <constant namespace="global" line="22" package="Default">
      <name>PZD_START_MEMORY_PEAK_USE</name>
      <full_name>\PZD_START_MEMORY_PEAK_USE</full_name>
      <value>memory_get_peak_usage()</value>
    </constant>
    <constant namespace="global" line="23" package="Default">
      <name>PZD_START_MEMORY_PEAK_USE_REAL</name>
      <full_name>\PZD_START_MEMORY_PEAK_USE_REAL</full_name>
      <value>memory_get_peak_usage(true)</value>
    </constant>
    <constant namespace="global" line="27" package="Default">
      <name>BASE_DIR</name>
      <full_name>\BASE_DIR</full_name>
      <value>__DIR__ . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="28" package="Default">
      <name>BASE_CLASS_DIR</name>
      <full_name>\BASE_CLASS_DIR</full_name>
      <value>BASE_DIR</value>
    </constant>
    <constant namespace="global" line="29" package="Default">
      <name>PZ_INC_DIR</name>
      <full_name>\PZ_INC_DIR</full_name>
      <value>BASE_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="30" package="Default">
      <name>PZ_LOGS_DIR</name>
      <full_name>\PZ_LOGS_DIR</full_name>
      <value>BASE_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="31" package="Default">
      <name>PZPHP_ENVIRONMENT</name>
      <full_name>\PZPHP_ENVIRONMENT</full_name>
      <value>getenv()</value>
    </constant>
  </file>
  <file path="config.php" hash="4d595f3caf1287b019723a35fdac34c5" package="Default">
    <constant namespace="global" line="5" package="Default">
      <name>PZPHP_INC_DIR</name>
      <full_name>\PZPHP_INC_DIR</full_name>
      <value>BASE_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="6" package="Default">
      <name>PZPHP_RESOURCES_DIR</name>
      <full_name>\PZPHP_RESOURCES_DIR</full_name>
      <value>BASE_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="7" package="Default">
      <name>PZPHP_TRANSLATIONS_DIR</name>
      <full_name>\PZPHP_TRANSLATIONS_DIR</full_name>
      <value>PZPHP_RESOURCES_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="8" package="Default">
      <name>PZPHP_CSS_DIR</name>
      <full_name>\PZPHP_CSS_DIR</full_name>
      <value>PZPHP_RESOURCES_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="9" package="Default">
      <name>PZPHP_JS_DIR</name>
      <full_name>\PZPHP_JS_DIR</full_name>
      <value>PZPHP_RESOURCES_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="10" package="Default">
      <name>PZPHP_IMAGES_DIR</name>
      <full_name>\PZPHP_IMAGES_DIR</full_name>
      <value>PZPHP_RESOURCES_DIR .  . DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="global" line="15" package="Default">
      <name>PZPHP_CACHE_MODE_NO_CACHING</name>
      <full_name>\PZPHP_CACHE_MODE_NO_CACHING</full_name>
      <value>0</value>
    </constant>
    <constant namespace="global" line="16" package="Default">
      <name>PZPHP_CACHE_MODE_SHARED_MEMORY</name>
      <full_name>\PZPHP_CACHE_MODE_SHARED_MEMORY</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="17" package="Default">
      <name>PZPHP_CACHE_MODE_APC</name>
      <full_name>\PZPHP_CACHE_MODE_APC</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="18" package="Default">
      <name>PZPHP_CACHE_MODE_MEMCACHE</name>
      <full_name>\PZPHP_CACHE_MODE_MEMCACHE</full_name>
      <value>3</value>
    </constant>
    <constant namespace="global" line="19" package="Default">
      <name>PZPHP_CACHE_MODE_MEMCACHED</name>
      <full_name>\PZPHP_CACHE_MODE_MEMCACHED</full_name>
      <value>4</value>
    </constant>
    <constant namespace="global" line="20" package="Default">
      <name>PZPHP_CACHE_MODE_LOCALCACHE</name>
      <full_name>\PZPHP_CACHE_MODE_LOCALCACHE</full_name>
      <value>5</value>
    </constant>
    <constant namespace="global" line="25" package="Default">
      <name>PZPHP_DATABASE_MYSQLI</name>
      <full_name>\PZPHP_DATABASE_MYSQLI</full_name>
      <value>0</value>
    </constant>
    <constant namespace="global" line="26" package="Default">
      <name>PZPHP_DATABASE_MYSQL</name>
      <full_name>\PZPHP_DATABASE_MYSQL</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="27" package="Default">
      <name>PZPHP_DATABASE_PDO_CUBRID</name>
      <full_name>\PZPHP_DATABASE_PDO_CUBRID</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="28" package="Default">
      <name>PZPHP_DATABASE_PDO_MSSQL</name>
      <full_name>\PZPHP_DATABASE_PDO_MSSQL</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="29" package="Default">
      <name>PZPHP_DATABASE_PDO_SYBASE</name>
      <full_name>\PZPHP_DATABASE_PDO_SYBASE</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="30" package="Default">
      <name>PZPHP_DATABASE_PDO_DBLIB</name>
      <full_name>\PZPHP_DATABASE_PDO_DBLIB</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="31" package="Default">
      <name>PZPHP_DATABASE_PDO_FIREBIRD</name>
      <full_name>\PZPHP_DATABASE_PDO_FIREBIRD</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="32" package="Default">
      <name>PZPHP_DATABASE_PDO_IBM</name>
      <full_name>\PZPHP_DATABASE_PDO_IBM</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="33" package="Default">
      <name>PZPHP_DATABASE_PDO_INFORMIX</name>
      <full_name>\PZPHP_DATABASE_PDO_INFORMIX</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="34" package="Default">
      <name>PZPHP_DATABASE_PDO_MYSQL</name>
      <full_name>\PZPHP_DATABASE_PDO_MYSQL</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="35" package="Default">
      <name>PZPHP_DATABASE_PDO_SQLSRV</name>
      <full_name>\PZPHP_DATABASE_PDO_SQLSRV</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="36" package="Default">
      <name>PZPHP_DATABASE_PDO_ORACLE</name>
      <full_name>\PZPHP_DATABASE_PDO_ORACLE</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="37" package="Default">
      <name>PZPHP_DATABASE_PDO_ODBC</name>
      <full_name>\PZPHP_DATABASE_PDO_ODBC</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="38" package="Default">
      <name>PZPHP_DATABASE_PDO_ODBC_IBMDB2</name>
      <full_name>\PZPHP_DATABASE_PDO_ODBC_IBMDB2</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="39" package="Default">
      <name>PZPHP_DATABASE_PDO_ODBC_MSACCSS</name>
      <full_name>\PZPHP_DATABASE_PDO_ODBC_MSACCSS</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="40" package="Default">
      <name>PZPHP_DATABASE_PDO_POSTGRESQL</name>
      <full_name>\PZPHP_DATABASE_PDO_POSTGRESQL</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="41" package="Default">
      <name>PZPHP_DATABASE_PDO_SQLITE</name>
      <full_name>\PZPHP_DATABASE_PDO_SQLITE</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="42" package="Default">
      <name>PZPHP_DATABASE_PDO_SQLITE2</name>
      <full_name>\PZPHP_DATABASE_PDO_SQLITE2</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="43" package="Default">
      <name>PZPHP_DATABASE_PDO_4D</name>
      <full_name>\PZPHP_DATABASE_PDO_4D</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="48" package="Default">
      <name>PZPHP_CACHING_MODE</name>
      <full_name>\PZPHP_CACHING_MODE</full_name>
      <value>PZPHP_CACHE_MODE_NO_CACHING</value>
    </constant>
    <constant namespace="global" line="49" package="Default">
      <name>PZPHP_DATABASE_MODE</name>
      <full_name>\PZPHP_DATABASE_MODE</full_name>
      <value>PZPHP_DATABASE_MYSQLI</value>
    </constant>
    <constant namespace="global" line="54" package="Default">
      <name>PZ_SECURITY_HASH_TABLE</name>
      <full_name>\PZ_SECURITY_HASH_TABLE</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="55" package="Default">
      <name>PZ_SECURITY_SALT</name>
      <full_name>\PZ_SECURITY_SALT</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="56" package="Default">
      <name>PZ_SECURITY_POISON_CONSTRAINTS</name>
      <full_name>\PZ_SECURITY_POISON_CONSTRAINTS</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="57" package="Default">
      <name>PZ_SECURITY_REHASH_DEPTH</name>
      <full_name>\PZ_SECURITY_REHASH_DEPTH</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="62" package="Default">
      <name>PZ_SETTING_DB_CONNECT_RETRY_ATTEMPTS</name>
      <full_name>\PZ_SETTING_DB_CONNECT_RETRY_ATTEMPTS</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="63" package="Default">
      <name>PZ_SETTING_DB_CONNECT_RETRY_DELAY</name>
      <full_name>\PZ_SETTING_DB_CONNECT_RETRY_DELAY</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="64" package="Default">
      <name>PZ_SETTING_DB_AUTO_CONNECT_SERVER</name>
      <full_name>\PZ_SETTING_DB_AUTO_CONNECT_SERVER</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="65" package="Default">
      <name>PZ_SETTING_DB_AUTO_ASSIGN_ACTIVE_SERVER</name>
      <full_name>\PZ_SETTING_DB_AUTO_ASSIGN_ACTIVE_SERVER</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="66" package="Default">
      <name>PZ_SETTING_DB_WRITE_RETRY_FIRST_INTERVAL_DELAY</name>
      <full_name>\PZ_SETTING_DB_WRITE_RETRY_FIRST_INTERVAL_DELAY</full_name>
      <value>3000000</value>
    </constant>
    <constant namespace="global" line="67" package="Default">
      <name>PZ_SETTING_DB_WRITE_RETRY_SECOND_INTERVAL_DELAY</name>
      <full_name>\PZ_SETTING_DB_WRITE_RETRY_SECOND_INTERVAL_DELAY</full_name>
      <value>500000</value>
    </constant>
    <constant namespace="global" line="68" package="Default">
      <name>PZ_SETTING_DB_WRITE_RETRY_FIRST_INTERVAL_RETRIES</name>
      <full_name>\PZ_SETTING_DB_WRITE_RETRY_FIRST_INTERVAL_RETRIES</full_name>
      <value>3</value>
    </constant>
    <constant namespace="global" line="69" package="Default">
      <name>PZ_SETTING_DB_WRITE_RETRY_SECOND_INTERVAL_RETRIES</name>
      <full_name>\PZ_SETTING_DB_WRITE_RETRY_SECOND_INTERVAL_RETRIES</full_name>
      <value>6</value>
    </constant>
    <constant namespace="global" line="71" package="Default">
      <name>PZ_SETTING_CACHE_CONNECT_RETRY_ATTEMPTS</name>
      <full_name>\PZ_SETTING_CACHE_CONNECT_RETRY_ATTEMPTS</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="72" package="Default">
      <name>PZ_SETTING_CACHE_CONNECT_RETRY_DELAY</name>
      <full_name>\PZ_SETTING_CACHE_CONNECT_RETRY_DELAY</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="73" package="Default">
      <name>PZ_SETTING_CACHE_AUTO_CONNECT_SERVER</name>
      <full_name>\PZ_SETTING_CACHE_AUTO_CONNECT_SERVER</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="74" package="Default">
      <name>PZ_SETTING_CACHE_AUTO_ASSIGN_ACTIVE_SERVER</name>
      <full_name>\PZ_SETTING_CACHE_AUTO_ASSIGN_ACTIVE_SERVER</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="76" package="Default">
      <name>PZ_SETTING_OUTPUT_COMPRESSION</name>
      <full_name>\PZ_SETTING_OUTPUT_COMPRESSION</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="77" package="Default">
      <name>PZ_SETTING_OUTPUT_BUFFERING</name>
      <full_name>\PZ_SETTING_OUTPUT_BUFFERING</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="79" package="Default">
      <name>PZ_SETTING_DOMAIN_PROTECTION</name>
      <full_name>\PZ_SETTING_DOMAIN_PROTECTION</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="80" package="Default">
      <name>PZ_SETTING_DOMAIN_ALLOWED_DOMAINS</name>
      <full_name>\PZ_SETTING_DOMAIN_ALLOWED_DOMAINS</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="81" package="Default">
      <name>PZ_SETTING_DOMAIN_TARGET_DOMAIN</name>
      <full_name>\PZ_SETTING_DOMAIN_TARGET_DOMAIN</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="83" package="Default">
      <name>PZ_SETTING_DEBUG_MODE</name>
      <full_name>\PZ_SETTING_DEBUG_MODE</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="84" package="Default">
      <name>PZ_SETTING_DEBUG_DISPLAY_BAR</name>
      <full_name>\PZ_SETTING_DEBUG_DISPLAY_BAR</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="85" package="Default">
      <name>PZ_SETTING_DEBUG_DB_USER</name>
      <full_name>\PZ_SETTING_DEBUG_DB_USER</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="86" package="Default">
      <name>PZ_SETTING_DEBUG_DB_PASSWORD</name>
      <full_name>\PZ_SETTING_DEBUG_DB_PASSWORD</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="87" package="Default">
      <name>PZ_SETTING_DEBUG_DB_NAME</name>
      <full_name>\PZ_SETTING_DEBUG_DB_NAME</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="88" package="Default">
      <name>PZ_SETTING_DEBUG_DB_HOST</name>
      <full_name>\PZ_SETTING_DEBUG_DB_HOST</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="89" package="Default">
      <name>PZ_SETTING_DEBUG_DB_PORT</name>
      <full_name>\PZ_SETTING_DEBUG_DB_PORT</full_name>
      <value>3306</value>
    </constant>
    <constant namespace="global" line="90" package="Default">
      <name>PZ_SETTING_DEBUG_DB_LOG</name>
      <full_name>\PZ_SETTING_DEBUG_DB_LOG</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="91" package="Default">
      <name>PZ_SETTING_DEBUG_LOG_FILE_AUTO_ROTATE</name>
      <full_name>\PZ_SETTING_DEBUG_LOG_FILE_AUTO_ROTATE</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="92" package="Default">
      <name>PZ_SETTING_DEBUG_DELETE_LOG_FILES_AFTER_X_DAYS</name>
      <full_name>\PZ_SETTING_DEBUG_DELETE_LOG_FILES_AFTER_X_DAYS</full_name>
      <value>7</value>
    </constant>
    <constant namespace="global" line="93" package="Default">
      <name>PZ_SETTING_DEBUG_MYSQL_LOG_ERRORS</name>
      <full_name>\PZ_SETTING_DEBUG_MYSQL_LOG_ERRORS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="94" package="Default">
      <name>PZ_SETTING_DEBUG_MYSQL_ERROR_LOG_FILE_NAME</name>
      <full_name>\PZ_SETTING_DEBUG_MYSQL_ERROR_LOG_FILE_NAME</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="95" package="Default">
      <name>PZ_SETTING_DEBUG_MEMCACHE_LOG_ERRORS</name>
      <full_name>\PZ_SETTING_DEBUG_MEMCACHE_LOG_ERRORS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="96" package="Default">
      <name>PZ_SETTING_DEBUG_MEMCACHE_ERROR_LOG_FILE_NAME</name>
      <full_name>\PZ_SETTING_DEBUG_MEMCACHE_ERROR_LOG_FILE_NAME</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="97" package="Default">
      <name>PZ_SETTING_DEBUG_MEMCACHED_LOG_ERRORS</name>
      <full_name>\PZ_SETTING_DEBUG_MEMCACHED_LOG_ERRORS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="98" package="Default">
      <name>PZ_SETTING_DEBUG_MEMCACHED_ERROR_LOG_FILE_NAME</name>
      <full_name>\PZ_SETTING_DEBUG_MEMCACHED_ERROR_LOG_FILE_NAME</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="99" package="Default">
      <name>PZ_SETTING_DEBUG_PDO_LOG_ERRORS</name>
      <full_name>\PZ_SETTING_DEBUG_PDO_LOG_ERRORS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="100" package="Default">
      <name>PZ_SETTING_DEBUG_PDO_ERROR_LOG_FILE_NAME</name>
      <full_name>\PZ_SETTING_DEBUG_PDO_ERROR_LOG_FILE_NAME</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="101" package="Default">
      <name>PZ_SETTING_DEBUG_LOG_PHP_ERRORS</name>
      <full_name>\PZ_SETTING_DEBUG_LOG_PHP_ERRORS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="102" package="Default">
      <name>PZ_SETTING_DEBUG_PHP_ERROR_LOG_FILE_NAME</name>
      <full_name>\PZ_SETTING_DEBUG_PHP_ERROR_LOG_FILE_NAME</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="103" package="Default">
      <name>PZ_SETTING_DEBUG_PHP_DISPLAY_ERRORS</name>
      <full_name>\PZ_SETTING_DEBUG_PHP_DISPLAY_ERRORS</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="105" package="Default">
      <name>PZ_SETTING_WHITELIST_IP_CHECK</name>
      <full_name>\PZ_SETTING_WHITELIST_IP_CHECK</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="106" package="Default">
      <name>PZ_SETTING_WHITELIST_IPS</name>
      <full_name>\PZ_SETTING_WHITELIST_IPS</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="107" package="Default">
      <name>PZ_SETTING_WHITELIST_ACTION</name>
      <full_name>\PZ_SETTING_WHITELIST_ACTION</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="108" package="Default">
      <name>PZ_SETTING_WHITELIST_AUTO_ALLOW_HOST_SERVER_IP</name>
      <full_name>\PZ_SETTING_WHITELIST_AUTO_ALLOW_HOST_SERVER_IP</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="110" package="Default">
      <name>PZ_SETTING_BLACKLIST_IP_CHECK</name>
      <full_name>\PZ_SETTING_BLACKLIST_IP_CHECK</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="111" package="Default">
      <name>PZ_SETTING_BLACKLIST_IPS</name>
      <full_name>\PZ_SETTING_BLACKLIST_IPS</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="112" package="Default">
      <name>PZ_SETTING_BLACKLIST_ACTION</name>
      <full_name>\PZ_SETTING_BLACKLIST_ACTION</full_name>
      <value/>
    </constant>
    <constant namespace="global" line="113" package="Default">
      <name>PZ_SETTING_BLACKLIST_IGNORE_HOST_SERVER_IP</name>
      <full_name>\PZ_SETTING_BLACKLIST_IGNORE_HOST_SERVER_IP</full_name>
      <value>true</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file config.php</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="Pz Library" full_name="Pz Library"/>
  <package name="PzPHP" full_name="PzPHP"/>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
